

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Dec  2 05:43:21 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x620,48
    28                           	dabs	1,0x5A0,80
    29                           	dabs	1,0x530,64
    30                           	dabs	1,0x2330,0,_delay_time
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000F                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  008F                     	;# 
    68  0090                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  0110                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011B                     	;# 
   100  011D                     	;# 
   101  011E                     	;# 
   102  011F                     	;# 
   103  018C                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0199                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  019F                     	;# 
   130  020D                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0219                     	;# 
   147  021A                     	;# 
   148  021B                     	;# 
   149  021C                     	;# 
   150  021D                     	;# 
   151  021E                     	;# 
   152  021F                     	;# 
   153  028C                     	;# 
   154  028D                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029C                     	;# 
   169  029C                     	;# 
   170  029D                     	;# 
   171  029E                     	;# 
   172  029F                     	;# 
   173  030C                     	;# 
   174  030D                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  038C                     	;# 
   192  038D                     	;# 
   193  0394                     	;# 
   194  0395                     	;# 
   195  0396                     	;# 
   196  040C                     	;# 
   197  040D                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  048D                     	;# 
   205  0491                     	;# 
   206  0492                     	;# 
   207  0493                     	;# 
   208  0493                     	;# 
   209  0494                     	;# 
   210  0495                     	;# 
   211  0496                     	;# 
   212  0497                     	;# 
   213  0791                     	;# 
   214  0792                     	;# 
   215  0793                     	;# 
   216  0794                     	;# 
   217  0795                     	;# 
   218  0798                     	;# 
   219  0799                     	;# 
   220  079A                     	;# 
   221  079B                     	;# 
   222  079C                     	;# 
   223  079D                     	;# 
   224  07A0                     	;# 
   225  07A1                     	;# 
   226  07A2                     	;# 
   227  07A3                     	;# 
   228  07A4                     	;# 
   229  07A5                     	;# 
   230  07A6                     	;# 
   231  07A7                     	;# 
   232  07A8                     	;# 
   233  07A9                     	;# 
   234  07AA                     	;# 
   235  07AB                     	;# 
   236  07AC                     	;# 
   237  07AD                     	;# 
   238  07AE                     	;# 
   239  07AF                     	;# 
   240  07B0                     	;# 
   241  07B1                     	;# 
   242  07B2                     	;# 
   243  07B3                     	;# 
   244  07B4                     	;# 
   245  07B5                     	;# 
   246  07B6                     	;# 
   247  07B7                     	;# 
   248  0FE4                     	;# 
   249  0FE5                     	;# 
   250  0FE6                     	;# 
   251  0FE7                     	;# 
   252  0FE8                     	;# 
   253  0FE9                     	;# 
   254  0FEA                     	;# 
   255  0FEB                     	;# 
   256  0FED                     	;# 
   257  0FEE                     	;# 
   258  0FEF                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  0008                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0014                     	;# 
   280  0015                     	;# 
   281  0016                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001B                     	;# 
   288  001C                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0110                     	;# 
   316  0111                     	;# 
   317  0112                     	;# 
   318  0113                     	;# 
   319  0114                     	;# 
   320  0115                     	;# 
   321  0116                     	;# 
   322  0117                     	;# 
   323  0118                     	;# 
   324  0119                     	;# 
   325  011A                     	;# 
   326  011B                     	;# 
   327  011D                     	;# 
   328  011E                     	;# 
   329  011F                     	;# 
   330  018C                     	;# 
   331  0190                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0199                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019A                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019C                     	;# 
   350  019C                     	;# 
   351  019D                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019E                     	;# 
   355  019F                     	;# 
   356  019F                     	;# 
   357  020D                     	;# 
   358  0211                     	;# 
   359  0211                     	;# 
   360  0212                     	;# 
   361  0212                     	;# 
   362  0213                     	;# 
   363  0213                     	;# 
   364  0214                     	;# 
   365  0214                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0219                     	;# 
   374  021A                     	;# 
   375  021B                     	;# 
   376  021C                     	;# 
   377  021D                     	;# 
   378  021E                     	;# 
   379  021F                     	;# 
   380  028C                     	;# 
   381  028D                     	;# 
   382  0291                     	;# 
   383  0291                     	;# 
   384  0292                     	;# 
   385  0293                     	;# 
   386  0294                     	;# 
   387  0295                     	;# 
   388  0295                     	;# 
   389  0296                     	;# 
   390  0298                     	;# 
   391  0298                     	;# 
   392  0299                     	;# 
   393  029A                     	;# 
   394  029B                     	;# 
   395  029C                     	;# 
   396  029C                     	;# 
   397  029D                     	;# 
   398  029E                     	;# 
   399  029F                     	;# 
   400  030C                     	;# 
   401  030D                     	;# 
   402  0311                     	;# 
   403  0311                     	;# 
   404  0312                     	;# 
   405  0313                     	;# 
   406  0314                     	;# 
   407  0315                     	;# 
   408  0315                     	;# 
   409  0316                     	;# 
   410  0318                     	;# 
   411  0318                     	;# 
   412  0319                     	;# 
   413  031A                     	;# 
   414  031C                     	;# 
   415  031C                     	;# 
   416  031D                     	;# 
   417  031E                     	;# 
   418  038C                     	;# 
   419  038D                     	;# 
   420  0394                     	;# 
   421  0395                     	;# 
   422  0396                     	;# 
   423  040C                     	;# 
   424  040D                     	;# 
   425  0415                     	;# 
   426  0416                     	;# 
   427  0417                     	;# 
   428  041C                     	;# 
   429  041D                     	;# 
   430  041E                     	;# 
   431  048D                     	;# 
   432  0491                     	;# 
   433  0492                     	;# 
   434  0493                     	;# 
   435  0493                     	;# 
   436  0494                     	;# 
   437  0495                     	;# 
   438  0496                     	;# 
   439  0497                     	;# 
   440  0791                     	;# 
   441  0792                     	;# 
   442  0793                     	;# 
   443  0794                     	;# 
   444  0795                     	;# 
   445  0798                     	;# 
   446  0799                     	;# 
   447  079A                     	;# 
   448  079B                     	;# 
   449  079C                     	;# 
   450  079D                     	;# 
   451  07A0                     	;# 
   452  07A1                     	;# 
   453  07A2                     	;# 
   454  07A3                     	;# 
   455  07A4                     	;# 
   456  07A5                     	;# 
   457  07A6                     	;# 
   458  07A7                     	;# 
   459  07A8                     	;# 
   460  07A9                     	;# 
   461  07AA                     	;# 
   462  07AB                     	;# 
   463  07AC                     	;# 
   464  07AD                     	;# 
   465  07AE                     	;# 
   466  07AF                     	;# 
   467  07B0                     	;# 
   468  07B1                     	;# 
   469  07B2                     	;# 
   470  07B3                     	;# 
   471  07B4                     	;# 
   472  07B5                     	;# 
   473  07B6                     	;# 
   474  07B7                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  000F                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0013                     	;# 
   506  0014                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009B                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  010C                     	;# 
   539  010D                     	;# 
   540  010E                     	;# 
   541  010F                     	;# 
   542  0110                     	;# 
   543  0111                     	;# 
   544  0112                     	;# 
   545  0113                     	;# 
   546  0114                     	;# 
   547  0115                     	;# 
   548  0116                     	;# 
   549  0117                     	;# 
   550  0118                     	;# 
   551  0119                     	;# 
   552  011A                     	;# 
   553  011B                     	;# 
   554  011D                     	;# 
   555  011E                     	;# 
   556  011F                     	;# 
   557  018C                     	;# 
   558  0190                     	;# 
   559  0191                     	;# 
   560  0191                     	;# 
   561  0192                     	;# 
   562  0193                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0194                     	;# 
   566  0195                     	;# 
   567  0196                     	;# 
   568  0199                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019A                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  019C                     	;# 
   578  019D                     	;# 
   579  019D                     	;# 
   580  019E                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  019F                     	;# 
   584  020D                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  0212                     	;# 
   588  0212                     	;# 
   589  0213                     	;# 
   590  0213                     	;# 
   591  0214                     	;# 
   592  0214                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0216                     	;# 
   597  0216                     	;# 
   598  0217                     	;# 
   599  0217                     	;# 
   600  0219                     	;# 
   601  021A                     	;# 
   602  021B                     	;# 
   603  021C                     	;# 
   604  021D                     	;# 
   605  021E                     	;# 
   606  021F                     	;# 
   607  028C                     	;# 
   608  028D                     	;# 
   609  0291                     	;# 
   610  0291                     	;# 
   611  0292                     	;# 
   612  0293                     	;# 
   613  0294                     	;# 
   614  0295                     	;# 
   615  0295                     	;# 
   616  0296                     	;# 
   617  0298                     	;# 
   618  0298                     	;# 
   619  0299                     	;# 
   620  029A                     	;# 
   621  029B                     	;# 
   622  029C                     	;# 
   623  029C                     	;# 
   624  029D                     	;# 
   625  029E                     	;# 
   626  029F                     	;# 
   627  030C                     	;# 
   628  030D                     	;# 
   629  0311                     	;# 
   630  0311                     	;# 
   631  0312                     	;# 
   632  0313                     	;# 
   633  0314                     	;# 
   634  0315                     	;# 
   635  0315                     	;# 
   636  0316                     	;# 
   637  0318                     	;# 
   638  0318                     	;# 
   639  0319                     	;# 
   640  031A                     	;# 
   641  031C                     	;# 
   642  031C                     	;# 
   643  031D                     	;# 
   644  031E                     	;# 
   645  038C                     	;# 
   646  038D                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  040C                     	;# 
   651  040D                     	;# 
   652  0415                     	;# 
   653  0416                     	;# 
   654  0417                     	;# 
   655  041C                     	;# 
   656  041D                     	;# 
   657  041E                     	;# 
   658  048D                     	;# 
   659  0491                     	;# 
   660  0492                     	;# 
   661  0493                     	;# 
   662  0493                     	;# 
   663  0494                     	;# 
   664  0495                     	;# 
   665  0496                     	;# 
   666  0497                     	;# 
   667  0791                     	;# 
   668  0792                     	;# 
   669  0793                     	;# 
   670  0794                     	;# 
   671  0795                     	;# 
   672  0798                     	;# 
   673  0799                     	;# 
   674  079A                     	;# 
   675  079B                     	;# 
   676  079C                     	;# 
   677  079D                     	;# 
   678  07A0                     	;# 
   679  07A1                     	;# 
   680  07A2                     	;# 
   681  07A3                     	;# 
   682  07A4                     	;# 
   683  07A5                     	;# 
   684  07A6                     	;# 
   685  07A7                     	;# 
   686  07A8                     	;# 
   687  07A9                     	;# 
   688  07AA                     	;# 
   689  07AB                     	;# 
   690  07AC                     	;# 
   691  07AD                     	;# 
   692  07AE                     	;# 
   693  07AF                     	;# 
   694  07B0                     	;# 
   695  07B1                     	;# 
   696  07B2                     	;# 
   697  07B3                     	;# 
   698  07B4                     	;# 
   699  07B5                     	;# 
   700  07B6                     	;# 
   701  07B7                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000D                     	;# 
   727  000E                     	;# 
   728  000F                     	;# 
   729  0010                     	;# 
   730  0011                     	;# 
   731  0012                     	;# 
   732  0013                     	;# 
   733  0014                     	;# 
   734  0015                     	;# 
   735  0016                     	;# 
   736  0016                     	;# 
   737  0017                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  001A                     	;# 
   741  001B                     	;# 
   742  001C                     	;# 
   743  001E                     	;# 
   744  001F                     	;# 
   745  008C                     	;# 
   746  008D                     	;# 
   747  008E                     	;# 
   748  008F                     	;# 
   749  0090                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0093                     	;# 
   753  0094                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010F                     	;# 
   769  0110                     	;# 
   770  0111                     	;# 
   771  0112                     	;# 
   772  0113                     	;# 
   773  0114                     	;# 
   774  0115                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0118                     	;# 
   778  0119                     	;# 
   779  011A                     	;# 
   780  011B                     	;# 
   781  011D                     	;# 
   782  011E                     	;# 
   783  011F                     	;# 
   784  018C                     	;# 
   785  0190                     	;# 
   786  0191                     	;# 
   787  0191                     	;# 
   788  0192                     	;# 
   789  0193                     	;# 
   790  0193                     	;# 
   791  0193                     	;# 
   792  0194                     	;# 
   793  0195                     	;# 
   794  0196                     	;# 
   795  0199                     	;# 
   796  0199                     	;# 
   797  019A                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019D                     	;# 
   807  019E                     	;# 
   808  019E                     	;# 
   809  019F                     	;# 
   810  019F                     	;# 
   811  020D                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  0219                     	;# 
   828  021A                     	;# 
   829  021B                     	;# 
   830  021C                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  028C                     	;# 
   835  028D                     	;# 
   836  0291                     	;# 
   837  0291                     	;# 
   838  0292                     	;# 
   839  0293                     	;# 
   840  0294                     	;# 
   841  0295                     	;# 
   842  0295                     	;# 
   843  0296                     	;# 
   844  0298                     	;# 
   845  0298                     	;# 
   846  0299                     	;# 
   847  029A                     	;# 
   848  029B                     	;# 
   849  029C                     	;# 
   850  029C                     	;# 
   851  029D                     	;# 
   852  029E                     	;# 
   853  029F                     	;# 
   854  030C                     	;# 
   855  030D                     	;# 
   856  0311                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0314                     	;# 
   861  0315                     	;# 
   862  0315                     	;# 
   863  0316                     	;# 
   864  0318                     	;# 
   865  0318                     	;# 
   866  0319                     	;# 
   867  031A                     	;# 
   868  031C                     	;# 
   869  031C                     	;# 
   870  031D                     	;# 
   871  031E                     	;# 
   872  038C                     	;# 
   873  038D                     	;# 
   874  0394                     	;# 
   875  0395                     	;# 
   876  0396                     	;# 
   877  040C                     	;# 
   878  040D                     	;# 
   879  0415                     	;# 
   880  0416                     	;# 
   881  0417                     	;# 
   882  041C                     	;# 
   883  041D                     	;# 
   884  041E                     	;# 
   885  048D                     	;# 
   886  0491                     	;# 
   887  0492                     	;# 
   888  0493                     	;# 
   889  0493                     	;# 
   890  0494                     	;# 
   891  0495                     	;# 
   892  0496                     	;# 
   893  0497                     	;# 
   894  0791                     	;# 
   895  0792                     	;# 
   896  0793                     	;# 
   897  0794                     	;# 
   898  0795                     	;# 
   899  0798                     	;# 
   900  0799                     	;# 
   901  079A                     	;# 
   902  079B                     	;# 
   903  079C                     	;# 
   904  079D                     	;# 
   905  07A0                     	;# 
   906  07A1                     	;# 
   907  07A2                     	;# 
   908  07A3                     	;# 
   909  07A4                     	;# 
   910  07A5                     	;# 
   911  07A6                     	;# 
   912  07A7                     	;# 
   913  07A8                     	;# 
   914  07A9                     	;# 
   915  07AA                     	;# 
   916  07AB                     	;# 
   917  07AC                     	;# 
   918  07AD                     	;# 
   919  07AE                     	;# 
   920  07AF                     	;# 
   921  07B0                     	;# 
   922  07B1                     	;# 
   923  07B2                     	;# 
   924  07B3                     	;# 
   925  07B4                     	;# 
   926  07B5                     	;# 
   927  07B6                     	;# 
   928  07B7                     	;# 
   929  0FE4                     	;# 
   930  0FE5                     	;# 
   931  0FE6                     	;# 
   932  0FE7                     	;# 
   933  0FE8                     	;# 
   934  0FE9                     	;# 
   935  0FEA                     	;# 
   936  0FEB                     	;# 
   937  0FED                     	;# 
   938  0FEE                     	;# 
   939  0FEF                     	;# 
   940  0000                     	;# 
   941  0001                     	;# 
   942  0002                     	;# 
   943  0003                     	;# 
   944  0004                     	;# 
   945  0005                     	;# 
   946  0006                     	;# 
   947  0007                     	;# 
   948  0008                     	;# 
   949  0009                     	;# 
   950  000A                     	;# 
   951  000B                     	;# 
   952  000C                     	;# 
   953  000D                     	;# 
   954  000E                     	;# 
   955  000F                     	;# 
   956  0010                     	;# 
   957  0011                     	;# 
   958  0012                     	;# 
   959  0013                     	;# 
   960  0014                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0016                     	;# 
   964  0017                     	;# 
   965  0018                     	;# 
   966  0019                     	;# 
   967  001A                     	;# 
   968  001B                     	;# 
   969  001C                     	;# 
   970  001E                     	;# 
   971  001F                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  008F                     	;# 
   976  0090                     	;# 
   977  0091                     	;# 
   978  0092                     	;# 
   979  0093                     	;# 
   980  0094                     	;# 
   981  0095                     	;# 
   982  0096                     	;# 
   983  0097                     	;# 
   984  0098                     	;# 
   985  0099                     	;# 
   986  009A                     	;# 
   987  009B                     	;# 
   988  009B                     	;# 
   989  009C                     	;# 
   990  009D                     	;# 
   991  009E                     	;# 
   992  010C                     	;# 
   993  010D                     	;# 
   994  010E                     	;# 
   995  010F                     	;# 
   996  0110                     	;# 
   997  0111                     	;# 
   998  0112                     	;# 
   999  0113                     	;# 
  1000  0114                     	;# 
  1001  0115                     	;# 
  1002  0116                     	;# 
  1003  0117                     	;# 
  1004  0118                     	;# 
  1005  0119                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011D                     	;# 
  1009  011E                     	;# 
  1010  011F                     	;# 
  1011  018C                     	;# 
  1012  0190                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0193                     	;# 
  1019  0194                     	;# 
  1020  0195                     	;# 
  1021  0196                     	;# 
  1022  0199                     	;# 
  1023  0199                     	;# 
  1024  019A                     	;# 
  1025  019A                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019E                     	;# 
  1036  019F                     	;# 
  1037  019F                     	;# 
  1038  020D                     	;# 
  1039  0211                     	;# 
  1040  0211                     	;# 
  1041  0212                     	;# 
  1042  0212                     	;# 
  1043  0213                     	;# 
  1044  0213                     	;# 
  1045  0214                     	;# 
  1046  0214                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0216                     	;# 
  1051  0216                     	;# 
  1052  0217                     	;# 
  1053  0217                     	;# 
  1054  0219                     	;# 
  1055  021A                     	;# 
  1056  021B                     	;# 
  1057  021C                     	;# 
  1058  021D                     	;# 
  1059  021E                     	;# 
  1060  021F                     	;# 
  1061  028C                     	;# 
  1062  028D                     	;# 
  1063  0291                     	;# 
  1064  0291                     	;# 
  1065  0292                     	;# 
  1066  0293                     	;# 
  1067  0294                     	;# 
  1068  0295                     	;# 
  1069  0295                     	;# 
  1070  0296                     	;# 
  1071  0298                     	;# 
  1072  0298                     	;# 
  1073  0299                     	;# 
  1074  029A                     	;# 
  1075  029B                     	;# 
  1076  029C                     	;# 
  1077  029C                     	;# 
  1078  029D                     	;# 
  1079  029E                     	;# 
  1080  029F                     	;# 
  1081  030C                     	;# 
  1082  030D                     	;# 
  1083  0311                     	;# 
  1084  0311                     	;# 
  1085  0312                     	;# 
  1086  0313                     	;# 
  1087  0314                     	;# 
  1088  0315                     	;# 
  1089  0315                     	;# 
  1090  0316                     	;# 
  1091  0318                     	;# 
  1092  0318                     	;# 
  1093  0319                     	;# 
  1094  031A                     	;# 
  1095  031C                     	;# 
  1096  031C                     	;# 
  1097  031D                     	;# 
  1098  031E                     	;# 
  1099  038C                     	;# 
  1100  038D                     	;# 
  1101  0394                     	;# 
  1102  0395                     	;# 
  1103  0396                     	;# 
  1104  040C                     	;# 
  1105  040D                     	;# 
  1106  0415                     	;# 
  1107  0416                     	;# 
  1108  0417                     	;# 
  1109  041C                     	;# 
  1110  041D                     	;# 
  1111  041E                     	;# 
  1112  048D                     	;# 
  1113  0491                     	;# 
  1114  0492                     	;# 
  1115  0493                     	;# 
  1116  0493                     	;# 
  1117  0494                     	;# 
  1118  0495                     	;# 
  1119  0496                     	;# 
  1120  0497                     	;# 
  1121  0791                     	;# 
  1122  0792                     	;# 
  1123  0793                     	;# 
  1124  0794                     	;# 
  1125  0795                     	;# 
  1126  0798                     	;# 
  1127  0799                     	;# 
  1128  079A                     	;# 
  1129  079B                     	;# 
  1130  079C                     	;# 
  1131  079D                     	;# 
  1132  07A0                     	;# 
  1133  07A1                     	;# 
  1134  07A2                     	;# 
  1135  07A3                     	;# 
  1136  07A4                     	;# 
  1137  07A5                     	;# 
  1138  07A6                     	;# 
  1139  07A7                     	;# 
  1140  07A8                     	;# 
  1141  07A9                     	;# 
  1142  07AA                     	;# 
  1143  07AB                     	;# 
  1144  07AC                     	;# 
  1145  07AD                     	;# 
  1146  07AE                     	;# 
  1147  07AF                     	;# 
  1148  07B0                     	;# 
  1149  07B1                     	;# 
  1150  07B2                     	;# 
  1151  07B3                     	;# 
  1152  07B4                     	;# 
  1153  07B5                     	;# 
  1154  07B6                     	;# 
  1155  07B7                     	;# 
  1156  0FE4                     	;# 
  1157  0FE5                     	;# 
  1158  0FE6                     	;# 
  1159  0FE7                     	;# 
  1160  0FE8                     	;# 
  1161  0FE9                     	;# 
  1162  0FEA                     	;# 
  1163  0FEB                     	;# 
  1164  0FED                     	;# 
  1165  0FEE                     	;# 
  1166  0FEF                     	;# 
  1167  0000                     	;# 
  1168  0001                     	;# 
  1169  0002                     	;# 
  1170  0003                     	;# 
  1171  0004                     	;# 
  1172  0005                     	;# 
  1173  0006                     	;# 
  1174  0007                     	;# 
  1175  0008                     	;# 
  1176  0009                     	;# 
  1177  000A                     	;# 
  1178  000B                     	;# 
  1179  000C                     	;# 
  1180  000D                     	;# 
  1181  000E                     	;# 
  1182  000F                     	;# 
  1183  0010                     	;# 
  1184  0011                     	;# 
  1185  0012                     	;# 
  1186  0013                     	;# 
  1187  0014                     	;# 
  1188  0015                     	;# 
  1189  0016                     	;# 
  1190  0016                     	;# 
  1191  0017                     	;# 
  1192  0018                     	;# 
  1193  0019                     	;# 
  1194  001A                     	;# 
  1195  001B                     	;# 
  1196  001C                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  008F                     	;# 
  1203  0090                     	;# 
  1204  0091                     	;# 
  1205  0092                     	;# 
  1206  0093                     	;# 
  1207  0094                     	;# 
  1208  0095                     	;# 
  1209  0096                     	;# 
  1210  0097                     	;# 
  1211  0098                     	;# 
  1212  0099                     	;# 
  1213  009A                     	;# 
  1214  009B                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  010F                     	;# 
  1223  0110                     	;# 
  1224  0111                     	;# 
  1225  0112                     	;# 
  1226  0113                     	;# 
  1227  0114                     	;# 
  1228  0115                     	;# 
  1229  0116                     	;# 
  1230  0117                     	;# 
  1231  0118                     	;# 
  1232  0119                     	;# 
  1233  011A                     	;# 
  1234  011B                     	;# 
  1235  011D                     	;# 
  1236  011E                     	;# 
  1237  011F                     	;# 
  1238  018C                     	;# 
  1239  0190                     	;# 
  1240  0191                     	;# 
  1241  0191                     	;# 
  1242  0192                     	;# 
  1243  0193                     	;# 
  1244  0193                     	;# 
  1245  0193                     	;# 
  1246  0194                     	;# 
  1247  0195                     	;# 
  1248  0196                     	;# 
  1249  0199                     	;# 
  1250  0199                     	;# 
  1251  019A                     	;# 
  1252  019A                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  020D                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0214                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  028C                     	;# 
  1289  028D                     	;# 
  1290  0291                     	;# 
  1291  0291                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0298                     	;# 
  1299  0298                     	;# 
  1300  0299                     	;# 
  1301  029A                     	;# 
  1302  029B                     	;# 
  1303  029C                     	;# 
  1304  029C                     	;# 
  1305  029D                     	;# 
  1306  029E                     	;# 
  1307  029F                     	;# 
  1308  030C                     	;# 
  1309  030D                     	;# 
  1310  0311                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0315                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  031C                     	;# 
  1323  031C                     	;# 
  1324  031D                     	;# 
  1325  031E                     	;# 
  1326  038C                     	;# 
  1327  038D                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  040C                     	;# 
  1332  040D                     	;# 
  1333  0415                     	;# 
  1334  0416                     	;# 
  1335  0417                     	;# 
  1336  041C                     	;# 
  1337  041D                     	;# 
  1338  041E                     	;# 
  1339  048D                     	;# 
  1340  0491                     	;# 
  1341  0492                     	;# 
  1342  0493                     	;# 
  1343  0493                     	;# 
  1344  0494                     	;# 
  1345  0495                     	;# 
  1346  0496                     	;# 
  1347  0497                     	;# 
  1348  0791                     	;# 
  1349  0792                     	;# 
  1350  0793                     	;# 
  1351  0794                     	;# 
  1352  0795                     	;# 
  1353  0798                     	;# 
  1354  0799                     	;# 
  1355  079A                     	;# 
  1356  079B                     	;# 
  1357  079C                     	;# 
  1358  079D                     	;# 
  1359  07A0                     	;# 
  1360  07A1                     	;# 
  1361  07A2                     	;# 
  1362  07A3                     	;# 
  1363  07A4                     	;# 
  1364  07A5                     	;# 
  1365  07A6                     	;# 
  1366  07A7                     	;# 
  1367  07A8                     	;# 
  1368  07A9                     	;# 
  1369  07AA                     	;# 
  1370  07AB                     	;# 
  1371  07AC                     	;# 
  1372  07AD                     	;# 
  1373  07AE                     	;# 
  1374  07AF                     	;# 
  1375  07B0                     	;# 
  1376  07B1                     	;# 
  1377  07B2                     	;# 
  1378  07B3                     	;# 
  1379  07B4                     	;# 
  1380  07B5                     	;# 
  1381  07B6                     	;# 
  1382  07B7                     	;# 
  1383  0FE4                     	;# 
  1384  0FE5                     	;# 
  1385  0FE6                     	;# 
  1386  0FE7                     	;# 
  1387  0FE8                     	;# 
  1388  0FE9                     	;# 
  1389  0FEA                     	;# 
  1390  0FEB                     	;# 
  1391  0FED                     	;# 
  1392  0FEE                     	;# 
  1393  0FEF                     	;_delay_time
  1394                           
  1395                           	psect	nvBANK0
  1396  004E                     __pnvBANK0:	
  1397  004E                     _eusart1TxBufferRemaining:	
  1398  004E                     	ds	1
  1399  004F                     _eusart2TxBufferRemaining:	
  1400  004F                     	ds	1
  1401  000B                     _INTCONbits	set	11
  1402  0011                     _PIR1bits	set	17
  1403  0014                     _PIR4bits	set	20
  1404  0095                     _OPTION_REGbits	set	149
  1405  0099                     _OSCCON	set	153
  1406  009A                     _OSCSTAT	set	154
  1407  0098                     _OSCTUNE	set	152
  1408  0091                     _PIE1bits	set	145
  1409  0094                     _PIE4bits	set	148
  1410  008C                     _TRISA	set	140
  1411  008D                     _TRISB	set	141
  1412  008E                     _TRISC	set	142
  1413  008F                     _TRISD	set	143
  1414  0090                     _TRISE	set	144
  1415  011D                     _APFCON	set	285
  1416  010C                     _LATA	set	268
  1417  010D                     _LATB	set	269
  1418  010E                     _LATC	set	270
  1419  010F                     _LATD	set	271
  1420  0110                     _LATE	set	272
  1421  0869                     _LATB1	set	2153
  1422  086A                     _LATB2	set	2154
  1423  086B                     _LATB3	set	2155
  1424  086C                     _LATB4	set	2156
  1425  086D                     _LATB5	set	2157
  1426  086E                     _LATB6	set	2158
  1427  086F                     _LATB7	set	2159
  1428  0871                     _LATC1	set	2161
  1429  0878                     _LATD0	set	2168
  1430  0879                     _LATD1	set	2169
  1431  087A                     _LATD2	set	2170
  1432  087B                     _LATD3	set	2171
  1433  087C                     _LATD4	set	2172
  1434  087D                     _LATD5	set	2173
  1435  087E                     _LATD6	set	2174
  1436  087F                     _LATD7	set	2175
  1437  0880                     _LATE0	set	2176
  1438  0881                     _LATE1	set	2177
  1439  0882                     _LATE2	set	2178
  1440  0883                     _LATE3	set	2179
  1441  0884                     _LATE4	set	2180
  1442  0885                     _LATE5	set	2181
  1443  0886                     _LATE6	set	2182
  1444  0887                     _LATE7	set	2183
  1445  018C                     _ANSELA	set	396
  1446  0190                     _ANSELE	set	400
  1447  019F                     _BAUD1CON	set	415
  1448  0199                     _RC1REG	set	409
  1449  019D                     _RC1STA	set	413
  1450  019D                     _RC1STAbits	set	413
  1451  019C                     _SP1BRGH	set	412
  1452  019B                     _SP1BRGL	set	411
  1453  019A                     _TX1REG	set	410
  1454  019E                     _TX1STA	set	414
  1455  020D                     _WPUB	set	525
  1456  030C                     _TRISF	set	780
  1457  030D                     _TRISG	set	781
  1458  038C                     _LATF	set	908
  1459  038D                     _LATG	set	909
  1460  1CB0                     _IOCBF0	set	7344
  1461  1CA8                     _IOCBN0	set	7336
  1462  1C60                     _LATF0	set	7264
  1463  1C61                     _LATF1	set	7265
  1464  1C62                     _LATF2	set	7266
  1465  1C63                     _LATF3	set	7267
  1466  1C64                     _LATF4	set	7268
  1467  1C65                     _LATF5	set	7269
  1468  1C66                     _LATF6	set	7270
  1469  1C67                     _LATF7	set	7271
  1470  040C                     _ANSELF	set	1036
  1471  040D                     _ANSELG	set	1037
  1472  0497                     _BAUD2CON	set	1175
  1473  0491                     _RC2REG	set	1169
  1474  0495                     _RC2STA	set	1173
  1475  0495                     _RC2STAbits	set	1173
  1476  0494                     _SP2BRGH	set	1172
  1477  0493                     _SP2BRGL	set	1171
  1478  0492                     _TX2REG	set	1170
  1479  0496                     _TX2STA	set	1174
  1480  048D                     _WPUG	set	1165
  1481                           
  1482                           ; #config settings
  1483  0000                     
  1484                           	psect	cinit
  1485  003E                     start_initialization:	
  1486  003E                     __initialization:		;BIGRAM
  1487                           
  1488                           ; Clear objects allocated to BIGRAM
  1489  003E  3030               	movlw	low (0+9008)
  1490  003F  0084               	movwf	4
  1491  0040  3023               	movlw	high (0+9008)
  1492  0041  0085               	movwf	5
  1493  0042  30C0               	movlw	192
  1494  0043  00FE               	movwf	btemp
  1495  0044  3000               	movlw	0
  1496  0045  00FF               	movwf	btemp+1
  1497  0046  3184  249B  3180   	fcall	clear_ram0
  1498                           
  1499                           ; Clear objects allocated to COMMON
  1500  0049  01F8               	clrf	__pbssCOMMON& (0+127)
  1501  004A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1502  004B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1503  004C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1504                           
  1505                           ; Clear objects allocated to BANK0
  1506  004D  3020               	movlw	low __pbssBANK0
  1507  004E  0084               	movwf	4
  1508  004F  3000               	movlw	high __pbssBANK0
  1509  0050  0085               	movwf	5
  1510  0051  3028               	movlw	40
  1511  0052  00FE               	movwf	btemp
  1512  0053  3000               	movlw	0
  1513  0054  00FF               	movwf	btemp+1
  1514  0055  3184  249B         	fcall	clear_ram0
  1515  0057                     end_of_initialization:	
  1516                           ;End of C runtime variable initialization code
  1517                           
  1518  0057                     __end_of__initialization:	
  1519  0057  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1520  0058  0020               	movlb	0
  1521  0059  3183  2B50         	ljmp	_main	;jump to C main() function
  1522                           
  1523                           	psect	bssCOMMON
  1524  0078                     __pbssCOMMON:	
  1525  0078                     _delay_ptr:	
  1526  0078                     	ds	1
  1527  0079                     _eusart2RxHead:	
  1528  0079                     	ds	1
  1529  007A                     _eusart2TxHead:	
  1530  007A                     	ds	1
  1531  007B                     _eusart2TxTail:	
  1532  007B                     	ds	1
  1533                           
  1534                           	psect	bssBANK0
  1535  0020                     __pbssBANK0:	
  1536  0020                     _eusart1RxBuffer:	
  1537  0020                     	ds	8
  1538  0028                     _eusart1TxBuffer:	
  1539  0028                     	ds	8
  1540  0030                     _eusart2RxBuffer:	
  1541  0030                     	ds	8
  1542  0038                     _eusart2TxBuffer:	
  1543  0038                     	ds	8
  1544  0040                     _current_column_position:	
  1545  0040                     	ds	1
  1546  0041                     _eusart1RxCount:	
  1547  0041                     	ds	1
  1548  0042                     _eusart1RxHead:	
  1549  0042                     	ds	1
  1550  0043                     _eusart1RxTail:	
  1551  0043                     	ds	1
  1552  0044                     _eusart1TxHead:	
  1553  0044                     	ds	1
  1554  0045                     _eusart1TxTail:	
  1555  0045                     	ds	1
  1556  0046                     _eusart2RxCount:	
  1557  0046                     	ds	1
  1558  0047                     _eusart2RxTail:	
  1559  0047                     	ds	1
  1560                           
  1561                           	psect	clrtext
  1562  049B                     clear_ram0:	
  1563                           ;	Called with FSR0 containing the base address, and
  1564                           ;	btemp/btemp+1 has the size to clear
  1565                           
  1566  049B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1567  049C                     clrloop0:	
  1568  049C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1569  049D  3101               	addfsr 0,1
  1570  049E  3001               	movlw	1
  1571  049F  02FE               	subwf	126,f
  1572  04A0  3000               	movlw	0
  1573  04A1  3BFF               	subwfb	127,f
  1574  04A2  087F               	movf	127,w
  1575  04A3  047E               	iorwf	126,w
  1576  04A4  1903               	btfsc	3,2
  1577  04A5  3400               	retlw	0	;all done for this memory range, return
  1578  04A6  2C9C               	goto	clrloop0	;have we reached the end yet?
  1579                           
  1580                           	psect	cstackCOMMON
  1581  0070                     __pcstackCOMMON:	
  1582  0070                     ?_OSCILLATOR_Initialize:	
  1583  0070                     ?_test_pattern:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_usec_delay:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ?_EUSART2_Initialize:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ?_EUSART2_Transmit_ISR:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ??_EUSART2_Transmit_ISR:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ?_EUSART2_Receive_ISR:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ??_EUSART2_Receive_ISR:	
  1602                           ; 0 bytes @ 0x0
  1603                           
  1604  0070                     ?_EUSART1_Initialize:	
  1605                           ; 0 bytes @ 0x0
  1606                           
  1607  0070                     ?_EUSART1_Transmit_ISR:	
  1608                           ; 0 bytes @ 0x0
  1609                           
  1610  0070                     ??_EUSART1_Transmit_ISR:	
  1611                           ; 0 bytes @ 0x0
  1612                           
  1613  0070                     ?_EUSART1_Receive_ISR:	
  1614                           ; 0 bytes @ 0x0
  1615                           
  1616  0070                     ??_EUSART1_Receive_ISR:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0070                     ?_PIN_MANAGER_Initialize:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0070                     ?_PIN_MANAGER_IOC:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0070                     ??_PIN_MANAGER_IOC:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0070                     ?_INTERRUPT_InterruptManager:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0070                     ?_SYSTEM_Initialize:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0070                     ?_main:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0070                     ?_all_on:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640                           
  1641                           ; 0 bytes @ 0x0
  1642  0070                     	ds	1
  1643  0071                     ??_INTERRUPT_InterruptManager:	
  1644                           
  1645                           ; 0 bytes @ 0x1
  1646  0071                     	ds	1
  1647  0072                     ??_OSCILLATOR_Initialize:	
  1648  0072                     ??_usec_delay:	
  1649                           ; 0 bytes @ 0x2
  1650                           
  1651  0072                     ??_EUSART2_Initialize:	
  1652                           ; 0 bytes @ 0x2
  1653                           
  1654  0072                     ??_EUSART1_Initialize:	
  1655                           ; 0 bytes @ 0x2
  1656                           
  1657  0072                     ??_PIN_MANAGER_Initialize:	
  1658                           ; 0 bytes @ 0x2
  1659                           
  1660  0072                     usec_delay@usec:	
  1661                           ; 0 bytes @ 0x2
  1662                           
  1663                           
  1664                           ; 1 bytes @ 0x2
  1665  0072                     	ds	1
  1666  0073                     ??_SYSTEM_Initialize:	
  1667  0073                     ??_all_on:	
  1668                           ; 0 bytes @ 0x3
  1669                           
  1670                           
  1671                           ; 0 bytes @ 0x3
  1672  0073                     	ds	1
  1673  0074                     all_on@r:	
  1674                           
  1675                           ; 1 bytes @ 0x4
  1676  0074                     	ds	1
  1677  0075                     all_on@usec:	
  1678                           
  1679                           ; 1 bytes @ 0x5
  1680  0075                     	ds	1
  1681  0076                     all_on@ao:	
  1682                           
  1683                           ; 1 bytes @ 0x6
  1684  0076                     	ds	1
  1685  0077                     ??_test_pattern:	
  1686                           
  1687                           ; 0 bytes @ 0x7
  1688  0077                     	ds	1
  1689                           
  1690                           	psect	cstackBANK0
  1691  0048                     __pcstackBANK0:	
  1692  0048                     test_pattern@r:	
  1693                           
  1694                           ; 1 bytes @ 0x0
  1695  0048                     	ds	1
  1696  0049                     ??_main:	
  1697                           
  1698                           ; 0 bytes @ 0x1
  1699  0049                     	ds	4
  1700  004D                     main@x:	
  1701                           
  1702                           ; 1 bytes @ 0x5
  1703  004D                     	ds	1
  1704                           
  1705                           	psect	maintext
  1706  0350                     __pmaintext:	
  1707 ;;
  1708 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1709 ;;
  1710 ;; *************** function _main *****************
  1711 ;; Defined at:
  1712 ;;		line 67 in file "main.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  x               1    5[BANK0 ] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;		None               void
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : B1F/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;Total ram usage:        5 bytes
  1731 ;; Hardware stack levels required when called:    5
  1732 ;; This function calls:
  1733 ;;		_SYSTEM_Initialize
  1734 ;;		_test_pattern
  1735 ;; This function is called by:
  1736 ;;		Startup code after reset
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _main
  1742  0350                     _main:	
  1743                           
  1744                           ;main.c: 69: unsigned char x;
  1745                           ;main.c: 71: SYSTEM_Initialize();
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1749  0350  3184  24A7  3183   	fcall	_SYSTEM_Initialize
  1750                           
  1751                           ;main.c: 81: for(x=0; x<192; x++)
  1752  0353  0020               	movlb	0	; select bank0
  1753  0354  01CD               	clrf	main@x
  1754  0355  30C0               	movlw	192
  1755  0356  024D               	subwf	main@x,w
  1756  0357  1803               	btfsc	3,0
  1757  0358  2B6D               	goto	l2899
  1758  0359                     l2893:	
  1759                           
  1760                           ;main.c: 82: delay_time[x] = 100;
  1761  0359  084D               	movf	main@x,w
  1762  035A  3E30               	addlw	48
  1763  035B  00C9               	movwf	??_main
  1764  035C  01CA               	clrf	??_main+1
  1765  035D  3023               	movlw	35
  1766  035E  3DCA               	addwfc	??_main+1,f
  1767  035F  0849               	movf	??_main,w
  1768  0360  0086               	movwf	6
  1769  0361  084A               	movf	??_main+1,w
  1770  0362  0087               	movwf	7
  1771  0363  3064               	movlw	100
  1772  0364  0081               	movwf	1
  1773  0365  3001               	movlw	1
  1774  0366  00C9               	movwf	??_main
  1775  0367  0849               	movf	??_main,w
  1776  0368  07CD               	addwf	main@x,f
  1777  0369  30C0               	movlw	192
  1778  036A  024D               	subwf	main@x,w
  1779  036B  1C03               	skipc
  1780  036C  2B59               	goto	l2893
  1781  036D                     l2899:	
  1782                           
  1783                           ;main.c: 84: for(x=0; x<192; x+=3)
  1784  036D  01CD               	clrf	main@x
  1785  036E  30C0               	movlw	192
  1786  036F  024D               	subwf	main@x,w
  1787  0370  1803               	btfsc	3,0
  1788  0371  2BAA               	goto	l2911
  1789  0372                     l2905:	
  1790                           
  1791                           ;main.c: 85: {
  1792                           ;main.c: 86: delay_time[x] = 100;
  1793  0372  084D               	movf	main@x,w
  1794  0373  3E30               	addlw	48
  1795  0374  00C9               	movwf	??_main
  1796  0375  01CA               	clrf	??_main+1
  1797  0376  3023               	movlw	35
  1798  0377  3DCA               	addwfc	??_main+1,f
  1799  0378  0849               	movf	??_main,w
  1800  0379  0086               	movwf	6
  1801  037A  084A               	movf	??_main+1,w
  1802  037B  0087               	movwf	7
  1803  037C  3064               	movlw	100
  1804  037D  0081               	movwf	1
  1805                           
  1806                           ;main.c: 87: delay_time[x+1] = 0;
  1807  037E  084D               	movf	main@x,w
  1808  037F  3E01               	addlw	1
  1809  0380  00C9               	movwf	??_main
  1810  0381  3000               	movlw	0
  1811  0382  1803               	skipnc
  1812  0383  3001               	movlw	1
  1813  0384  00CA               	movwf	??_main+1
  1814  0385  3030               	movlw	48
  1815  0386  00CB               	movwf	??_main+2
  1816  0387  3023               	movlw	35
  1817  0388  00CC               	movwf	??_main+3
  1818  0389  0849               	movf	??_main,w
  1819  038A  074B               	addwf	??_main+2,w
  1820  038B  0086               	movwf	6
  1821  038C  084A               	movf	??_main+1,w
  1822  038D  3D4C               	addwfc	??_main+3,w
  1823  038E  0087               	movwf	7
  1824  038F  0181               	clrf	1
  1825                           
  1826                           ;main.c: 88: delay_time[x+2] = 0;
  1827  0390  084D               	movf	main@x,w
  1828  0391  3E02               	addlw	2
  1829  0392  00C9               	movwf	??_main
  1830  0393  3000               	movlw	0
  1831  0394  1803               	skipnc
  1832  0395  3001               	movlw	1
  1833  0396  00CA               	movwf	??_main+1
  1834  0397  3030               	movlw	48
  1835  0398  00CB               	movwf	??_main+2
  1836  0399  3023               	movlw	35
  1837  039A  00CC               	movwf	??_main+3
  1838  039B  0849               	movf	??_main,w
  1839  039C  074B               	addwf	??_main+2,w
  1840  039D  0086               	movwf	6
  1841  039E  084A               	movf	??_main+1,w
  1842  039F  3D4C               	addwfc	??_main+3,w
  1843  03A0  0087               	movwf	7
  1844  03A1  0181               	clrf	1
  1845  03A2  3003               	movlw	3
  1846  03A3  00C9               	movwf	??_main
  1847  03A4  0849               	movf	??_main,w
  1848  03A5  07CD               	addwf	main@x,f
  1849  03A6  30C0               	movlw	192
  1850  03A7  024D               	subwf	main@x,w
  1851  03A8  1C03               	skipc
  1852  03A9  2B72               	goto	l2905
  1853  03AA                     l2911:	
  1854                           ;main.c: 89: }
  1855                           ;main.c: 91: while (1)
  1856                           
  1857                           
  1858                           ;main.c: 92: {
  1859                           ;main.c: 94: test_pattern();
  1860  03AA  3182  22DA  3183   	fcall	_test_pattern
  1861  03AD  2BAA               	goto	l2911
  1862  03AE                     __end_of_main:	
  1863                           
  1864                           	psect	text1
  1865  02DA                     __ptext1:	
  1866 ;; *************** function _test_pattern *****************
  1867 ;; Defined at:
  1868 ;;		line 347 in file "main.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  r               1    0[BANK0 ] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    4
  1889 ;; This function calls:
  1890 ;;		_all_on
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _test_pattern
  1898  02DA                     _test_pattern:	
  1899                           
  1900                           ;main.c: 351: unsigned char r;
  1901                           ;main.c: 354: for(r=90000; r>0; r--)
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _test_pattern: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1905  02DA  3090               	movlw	144
  1906  02DB  00F7               	movwf	??_test_pattern
  1907  02DC  0877               	movf	??_test_pattern,w
  1908  02DD  0020               	movlb	0	; select bank0
  1909  02DE  00C8               	movwf	test_pattern@r
  1910  02DF  0848               	movf	test_pattern@r,w
  1911  02E0  1903               	btfsc	3,2
  1912  02E1  2AEC               	goto	l2813
  1913  02E2                     l2807:	
  1914                           
  1915                           ;main.c: 355: {
  1916                           ;main.c: 356: all_on(0x01);
  1917  02E2  3001               	movlw	1
  1918  02E3  3180  205B  3182   	fcall	_all_on
  1919  02E6  3001               	movlw	1
  1920  02E7  0020               	movlb	0	; select bank0
  1921  02E8  02C8               	subwf	test_pattern@r,f
  1922  02E9  0848               	movf	test_pattern@r,w
  1923  02EA  1D03               	btfss	3,2
  1924  02EB  2AE2               	goto	l2807
  1925  02EC                     l2813:	
  1926                           
  1927                           ;main.c: 357: }
  1928                           ;main.c: 359: for(r=90000; r>0; r--)
  1929  02EC  3090               	movlw	144
  1930  02ED  00F7               	movwf	??_test_pattern
  1931  02EE  0877               	movf	??_test_pattern,w
  1932  02EF  00C8               	movwf	test_pattern@r
  1933  02F0  0848               	movf	test_pattern@r,w
  1934  02F1  1903               	btfsc	3,2
  1935  02F2  2AFD               	goto	l2825
  1936  02F3                     l2819:	
  1937                           
  1938                           ;main.c: 360: {
  1939                           ;main.c: 361: all_on(0x02);
  1940  02F3  3002               	movlw	2
  1941  02F4  3180  205B  3182   	fcall	_all_on
  1942  02F7  3001               	movlw	1
  1943  02F8  0020               	movlb	0	; select bank0
  1944  02F9  02C8               	subwf	test_pattern@r,f
  1945  02FA  0848               	movf	test_pattern@r,w
  1946  02FB  1D03               	btfss	3,2
  1947  02FC  2AF3               	goto	l2819
  1948  02FD                     l2825:	
  1949                           
  1950                           ;main.c: 362: }
  1951                           ;main.c: 364: for(r=90000; r>0; r--)
  1952  02FD  3090               	movlw	144
  1953  02FE  00F7               	movwf	??_test_pattern
  1954  02FF  0877               	movf	??_test_pattern,w
  1955  0300  00C8               	movwf	test_pattern@r
  1956  0301  0848               	movf	test_pattern@r,w
  1957  0302  1903               	btfsc	3,2
  1958  0303  2B0E               	goto	l2837
  1959  0304                     l2831:	
  1960                           
  1961                           ;main.c: 365: {
  1962                           ;main.c: 366: all_on(0x04);
  1963  0304  3004               	movlw	4
  1964  0305  3180  205B  3182   	fcall	_all_on
  1965  0308  3001               	movlw	1
  1966  0309  0020               	movlb	0	; select bank0
  1967  030A  02C8               	subwf	test_pattern@r,f
  1968  030B  0848               	movf	test_pattern@r,w
  1969  030C  1D03               	btfss	3,2
  1970  030D  2B04               	goto	l2831
  1971  030E                     l2837:	
  1972                           
  1973                           ;main.c: 367: }
  1974                           ;main.c: 369: for(r=90000; r>0; r--)
  1975  030E  3090               	movlw	144
  1976  030F  00F7               	movwf	??_test_pattern
  1977  0310  0877               	movf	??_test_pattern,w
  1978  0311  00C8               	movwf	test_pattern@r
  1979  0312  0848               	movf	test_pattern@r,w
  1980  0313  1903               	btfsc	3,2
  1981  0314  2B1F               	goto	l2849
  1982  0315                     l2843:	
  1983                           
  1984                           ;main.c: 370: {
  1985                           ;main.c: 371: all_on(0x03);
  1986  0315  3003               	movlw	3
  1987  0316  3180  205B  3182   	fcall	_all_on
  1988  0319  3001               	movlw	1
  1989  031A  0020               	movlb	0	; select bank0
  1990  031B  02C8               	subwf	test_pattern@r,f
  1991  031C  0848               	movf	test_pattern@r,w
  1992  031D  1D03               	btfss	3,2
  1993  031E  2B15               	goto	l2843
  1994  031F                     l2849:	
  1995                           
  1996                           ;main.c: 372: }
  1997                           ;main.c: 374: for(r=90000; r>0; r--)
  1998  031F  3090               	movlw	144
  1999  0320  00F7               	movwf	??_test_pattern
  2000  0321  0877               	movf	??_test_pattern,w
  2001  0322  00C8               	movwf	test_pattern@r
  2002  0323  0848               	movf	test_pattern@r,w
  2003  0324  1903               	btfsc	3,2
  2004  0325  2B30               	goto	l2861
  2005  0326                     l2855:	
  2006                           
  2007                           ;main.c: 375: {
  2008                           ;main.c: 376: all_on(0x05);
  2009  0326  3005               	movlw	5
  2010  0327  3180  205B  3182   	fcall	_all_on
  2011  032A  3001               	movlw	1
  2012  032B  0020               	movlb	0	; select bank0
  2013  032C  02C8               	subwf	test_pattern@r,f
  2014  032D  0848               	movf	test_pattern@r,w
  2015  032E  1D03               	btfss	3,2
  2016  032F  2B26               	goto	l2855
  2017  0330                     l2861:	
  2018                           
  2019                           ;main.c: 377: }
  2020                           ;main.c: 379: for(r=90000; r>0; r--)
  2021  0330  3090               	movlw	144
  2022  0331  00F7               	movwf	??_test_pattern
  2023  0332  0877               	movf	??_test_pattern,w
  2024  0333  00C8               	movwf	test_pattern@r
  2025  0334  0848               	movf	test_pattern@r,w
  2026  0335  1903               	btfsc	3,2
  2027  0336  2B41               	goto	l2873
  2028  0337                     l2867:	
  2029                           
  2030                           ;main.c: 380: {
  2031                           ;main.c: 381: all_on(0x06);
  2032  0337  3006               	movlw	6
  2033  0338  3180  205B  3182   	fcall	_all_on
  2034  033B  3001               	movlw	1
  2035  033C  0020               	movlb	0	; select bank0
  2036  033D  02C8               	subwf	test_pattern@r,f
  2037  033E  0848               	movf	test_pattern@r,w
  2038  033F  1D03               	btfss	3,2
  2039  0340  2B37               	goto	l2867
  2040  0341                     l2873:	
  2041                           
  2042                           ;main.c: 382: }
  2043                           ;main.c: 384: for(r=90000; r>0; r--)
  2044  0341  3090               	movlw	144
  2045  0342  00F7               	movwf	??_test_pattern
  2046  0343  0877               	movf	??_test_pattern,w
  2047  0344  00C8               	movwf	test_pattern@r
  2048  0345                     L1:	
  2049  0345  0848               	movf	test_pattern@r,w
  2050  0346  1903               	btfsc	3,2
  2051  0347  0008               	return
  2052                           
  2053                           ;main.c: 385: {
  2054                           ;main.c: 386: all_on(0x07);
  2055  0348  3007               	movlw	7
  2056  0349  3180  205B  3182   	fcall	_all_on
  2057  034C  3001               	movlw	1
  2058  034D  0020               	movlb	0	; select bank0
  2059  034E  02C8               	subwf	test_pattern@r,f
  2060  034F  2B45               	goto	L1
  2061  0350                     __end_of_test_pattern:	
  2062                           
  2063                           	psect	text2
  2064  005B                     __ptext2:	
  2065 ;; *************** function _all_on *****************
  2066 ;; Defined at:
  2067 ;;		line 152 in file "main.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;  ao              1    wreg     unsigned char 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  ao              1    6[COMMON] unsigned char 
  2072 ;;  usec            1    5[COMMON] unsigned char 
  2073 ;;  r               1    4[COMMON] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;		None               void
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;Total ram usage:        4 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    3
  2090 ;; This function calls:
  2091 ;;		_usec_delay
  2092 ;; This function is called by:
  2093 ;;		_test_pattern
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _all_on
  2099  005B                     _all_on:	
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _all_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2103                           ;all_on@ao stored from wreg
  2104  005B  00F6               	movwf	all_on@ao
  2105                           
  2106                           ;main.c: 160: unsigned char r;
  2107                           ;main.c: 161: unsigned char usec;
  2108                           ;main.c: 164: if ((ao == 0x01)||(ao == 0x02)||(ao == 0x04)) usec = 90;
  2109  005C  0376               	decf	all_on@ao,w
  2110  005D  1903               	btfsc	3,2
  2111  005E  2867               	goto	l2463
  2112  005F  3002               	movlw	2
  2113  0060  0676               	xorwf	all_on@ao,w
  2114  0061  1903               	btfsc	3,2
  2115  0062  2867               	goto	l2463
  2116  0063  3004               	movlw	4
  2117  0064  0676               	xorwf	all_on@ao,w
  2118  0065  1D03               	btfss	3,2
  2119  0066  286B               	goto	l2465
  2120  0067                     l2463:	
  2121  0067  305A               	movlw	90
  2122  0068  00F3               	movwf	??_all_on
  2123  0069  0873               	movf	??_all_on,w
  2124  006A  00F5               	movwf	all_on@usec
  2125  006B                     l2465:	
  2126                           
  2127                           ;main.c: 165: if ((ao == 0x03)||(ao == 0x05)||(ao == 0x06)) usec = 45;
  2128  006B  3003               	movlw	3
  2129  006C  0676               	xorwf	all_on@ao,w
  2130  006D  1903               	btfsc	3,2
  2131  006E  2877               	goto	l2471
  2132  006F  3005               	movlw	5
  2133  0070  0676               	xorwf	all_on@ao,w
  2134  0071  1903               	btfsc	3,2
  2135  0072  2877               	goto	l2471
  2136  0073  3006               	movlw	6
  2137  0074  0676               	xorwf	all_on@ao,w
  2138  0075  1D03               	btfss	3,2
  2139  0076  287B               	goto	l2473
  2140  0077                     l2471:	
  2141  0077  302D               	movlw	45
  2142  0078  00F3               	movwf	??_all_on
  2143  0079  0873               	movf	??_all_on,w
  2144  007A  00F5               	movwf	all_on@usec
  2145  007B                     l2473:	
  2146                           
  2147                           ;main.c: 166: if (ao == 0x07) usec = 30;
  2148  007B  3007               	movlw	7
  2149  007C  0676               	xorwf	all_on@ao,w
  2150  007D  1D03               	btfss	3,2
  2151  007E  2883               	goto	l2477
  2152  007F  301E               	movlw	30
  2153  0080  00F3               	movwf	??_all_on
  2154  0081  0873               	movf	??_all_on,w
  2155  0082  00F5               	movwf	all_on@usec
  2156  0083                     l2477:	
  2157                           
  2158                           ;main.c: 168: for(r=0; r<8; r++)
  2159  0083  01F4               	clrf	all_on@r
  2160  0084  2ACB               	goto	L2
  2161  0085                     l419:	
  2162                           ;main.c: 172: do { LATB1 = 1; } while(0);
  2163                           
  2164                           ;main.c: 171: case 0:
  2165                           
  2166                           ;main.c: 169: {
  2167                           ;main.c: 170: switch (r) {
  2168                           
  2169  0085  0022               	movlb	2	; select bank2
  2170  0086  148D               	bsf	13,1	;volatile
  2171                           
  2172                           ;main.c: 173: break;
  2173  0087  289C               	goto	l2487
  2174  0088                     l423:	
  2175                           ;main.c: 175: do { LATB2 = 1; } while(0);
  2176                           
  2177                           ;main.c: 174: case 1:
  2178                           
  2179  0088  0022               	movlb	2	; select bank2
  2180  0089  150D               	bsf	13,2	;volatile
  2181                           
  2182                           ;main.c: 176: break;
  2183  008A  289C               	goto	l2487
  2184  008B                     l426:	
  2185                           ;main.c: 178: do { LATB3 = 1; } while(0);
  2186                           
  2187                           ;main.c: 177: case 2:
  2188                           
  2189  008B  0022               	movlb	2	; select bank2
  2190  008C  158D               	bsf	13,3	;volatile
  2191                           
  2192                           ;main.c: 179: break;
  2193  008D  289C               	goto	l2487
  2194  008E                     l429:	
  2195                           ;main.c: 181: do { LATB4 = 1; } while(0);
  2196                           
  2197                           ;main.c: 180: case 3:
  2198                           
  2199  008E  0022               	movlb	2	; select bank2
  2200  008F  160D               	bsf	13,4	;volatile
  2201                           
  2202                           ;main.c: 182: break;
  2203  0090  289C               	goto	l2487
  2204  0091                     l432:	
  2205                           ;main.c: 184: do { LATB5 = 1; } while(0);
  2206                           
  2207                           ;main.c: 183: case 4:
  2208                           
  2209  0091  0022               	movlb	2	; select bank2
  2210  0092  168D               	bsf	13,5	;volatile
  2211                           
  2212                           ;main.c: 185: break;
  2213  0093  289C               	goto	l2487
  2214  0094                     l435:	
  2215                           ;main.c: 187: do { LATB6 = 1; } while(0);
  2216                           
  2217                           ;main.c: 186: case 5:
  2218                           
  2219  0094  0022               	movlb	2	; select bank2
  2220  0095  170D               	bsf	13,6	;volatile
  2221                           
  2222                           ;main.c: 188: break;
  2223  0096  289C               	goto	l2487
  2224  0097                     l438:	
  2225                           ;main.c: 190: do { LATB7 = 1; } while(0);
  2226                           
  2227                           ;main.c: 189: case 6:
  2228                           
  2229  0097  0022               	movlb	2	; select bank2
  2230  0098  178D               	bsf	13,7	;volatile
  2231                           
  2232                           ;main.c: 191: break;
  2233  0099  289C               	goto	l2487
  2234  009A                     l441:	
  2235                           ;main.c: 193: do { LATC1 = 1; } while(0);
  2236                           
  2237                           ;main.c: 192: case 7:
  2238                           
  2239  009A  0022               	movlb	2	; select bank2
  2240  009B  148E               	bsf	14,1	;volatile
  2241  009C                     l2487:	
  2242                           ;main.c: 195: };
  2243                           
  2244                           ;main.c: 194: break;
  2245                           
  2246                           
  2247                           ;main.c: 198: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2248  009C  0376               	decf	all_on@ao,w
  2249  009D  1903               	btfsc	3,2
  2250  009E  28AB               	goto	l446
  2251  009F  3003               	movlw	3
  2252  00A0  0676               	xorwf	all_on@ao,w
  2253  00A1  1903               	btfsc	3,2
  2254  00A2  28AB               	goto	l446
  2255  00A3  3005               	movlw	5
  2256  00A4  0676               	xorwf	all_on@ao,w
  2257  00A5  1903               	btfsc	3,2
  2258  00A6  28AB               	goto	l446
  2259  00A7  3007               	movlw	7
  2260  00A8  0676               	xorwf	all_on@ao,w
  2261  00A9  1D03               	btfss	3,2
  2262  00AA  28B1               	goto	l2497
  2263  00AB                     l446:	
  2264                           ;main.c: 199: do { LATD0 = 0; } while(0);
  2265                           
  2266  00AB  0022               	movlb	2	; select bank2
  2267  00AC  100F               	bcf	15,0	;volatile
  2268                           
  2269                           ;main.c: 200: usec_delay(usec);
  2270  00AD  0875               	movf	all_on@usec,w
  2271  00AE  3184  24B3  3180   	fcall	_usec_delay
  2272  00B1                     l2497:	
  2273                           ;main.c: 201: }
  2274                           ;main.c: 202: do { LATD0 = 1; } while(0);
  2275                           
  2276  00B1  0022               	movlb	2	; select bank2
  2277  00B2  140F               	bsf	15,0	;volatile
  2278                           
  2279                           ;main.c: 203: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2280  00B3  3002               	movlw	2
  2281  00B4  0676               	xorwf	all_on@ao,w
  2282  00B5  1903               	btfsc	3,2
  2283  00B6  28C3               	goto	l453
  2284  00B7  3003               	movlw	3
  2285  00B8  0676               	xorwf	all_on@ao,w
  2286  00B9  1903               	btfsc	3,2
  2287  00BA  28C3               	goto	l453
  2288  00BB  3006               	movlw	6
  2289  00BC  0676               	xorwf	all_on@ao,w
  2290  00BD  1903               	btfsc	3,2
  2291  00BE  28C3               	goto	l453
  2292  00BF  3007               	movlw	7
  2293  00C0  0676               	xorwf	all_on@ao,w
  2294  00C1  1D03               	btfss	3,2
  2295  00C2  28C8               	goto	l2509
  2296  00C3                     l453:	
  2297                           ;main.c: 204: do { LATD1 = 0; } while(0);
  2298                           
  2299  00C3  108F               	bcf	15,1	;volatile
  2300                           
  2301                           ;main.c: 205: usec_delay(usec);
  2302  00C4  0875               	movf	all_on@usec,w
  2303  00C5  3184  24B3  3180   	fcall	_usec_delay
  2304  00C8                     l2509:	
  2305                           ;main.c: 206: }
  2306                           ;main.c: 207: do { LATD1 = 1; } while(0);
  2307                           
  2308  00C8  0022               	movlb	2	; select bank2
  2309  00C9  148F               	bsf	15,1	;volatile
  2310                           
  2311                           ;main.c: 208: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2312  00CA  3004               	movlw	4
  2313  00CB  0676               	xorwf	all_on@ao,w
  2314  00CC  1903               	btfsc	3,2
  2315  00CD  28DA               	goto	l460
  2316  00CE  3005               	movlw	5
  2317  00CF  0676               	xorwf	all_on@ao,w
  2318  00D0  1903               	btfsc	3,2
  2319  00D1  28DA               	goto	l460
  2320  00D2  3006               	movlw	6
  2321  00D3  0676               	xorwf	all_on@ao,w
  2322  00D4  1903               	btfsc	3,2
  2323  00D5  28DA               	goto	l460
  2324  00D6  3007               	movlw	7
  2325  00D7  0676               	xorwf	all_on@ao,w
  2326  00D8  1D03               	btfss	3,2
  2327  00D9  28DF               	goto	l2521
  2328  00DA                     l460:	
  2329                           ;main.c: 209: do { LATD2 = 0; } while(0);
  2330                           
  2331  00DA  110F               	bcf	15,2	;volatile
  2332                           
  2333                           ;main.c: 210: usec_delay(usec);
  2334  00DB  0875               	movf	all_on@usec,w
  2335  00DC  3184  24B3  3180   	fcall	_usec_delay
  2336  00DF                     l2521:	
  2337                           ;main.c: 211: }
  2338                           ;main.c: 212: do { LATD2 = 1; } while(0);
  2339                           
  2340  00DF  0022               	movlb	2	; select bank2
  2341  00E0  150F               	bsf	15,2	;volatile
  2342                           
  2343                           ;main.c: 215: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2344  00E1  0376               	decf	all_on@ao,w
  2345  00E2  1903               	btfsc	3,2
  2346  00E3  28F0               	goto	l467
  2347  00E4  3003               	movlw	3
  2348  00E5  0676               	xorwf	all_on@ao,w
  2349  00E6  1903               	btfsc	3,2
  2350  00E7  28F0               	goto	l467
  2351  00E8  3005               	movlw	5
  2352  00E9  0676               	xorwf	all_on@ao,w
  2353  00EA  1903               	btfsc	3,2
  2354  00EB  28F0               	goto	l467
  2355  00EC  3007               	movlw	7
  2356  00ED  0676               	xorwf	all_on@ao,w
  2357  00EE  1D03               	btfss	3,2
  2358  00EF  28F5               	goto	l2533
  2359  00F0                     l467:	
  2360                           ;main.c: 216: do { LATD3 = 0; } while(0);
  2361                           
  2362  00F0  118F               	bcf	15,3	;volatile
  2363                           
  2364                           ;main.c: 217: usec_delay(usec);
  2365  00F1  0875               	movf	all_on@usec,w
  2366  00F2  3184  24B3  3180   	fcall	_usec_delay
  2367  00F5                     l2533:	
  2368                           ;main.c: 218: }
  2369                           ;main.c: 219: do { LATD3 = 1; } while(0);
  2370                           
  2371  00F5  0022               	movlb	2	; select bank2
  2372  00F6  158F               	bsf	15,3	;volatile
  2373                           
  2374                           ;main.c: 220: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2375  00F7  3002               	movlw	2
  2376  00F8  0676               	xorwf	all_on@ao,w
  2377  00F9  1903               	btfsc	3,2
  2378  00FA  2907               	goto	l474
  2379  00FB  3003               	movlw	3
  2380  00FC  0676               	xorwf	all_on@ao,w
  2381  00FD  1903               	btfsc	3,2
  2382  00FE  2907               	goto	l474
  2383  00FF  3006               	movlw	6
  2384  0100  0676               	xorwf	all_on@ao,w
  2385  0101  1903               	btfsc	3,2
  2386  0102  2907               	goto	l474
  2387  0103  3007               	movlw	7
  2388  0104  0676               	xorwf	all_on@ao,w
  2389  0105  1D03               	btfss	3,2
  2390  0106  290C               	goto	l2545
  2391  0107                     l474:	
  2392                           ;main.c: 221: do { LATD4 = 0; } while(0);
  2393                           
  2394  0107  120F               	bcf	15,4	;volatile
  2395                           
  2396                           ;main.c: 222: usec_delay(usec);
  2397  0108  0875               	movf	all_on@usec,w
  2398  0109  3184  24B3  3180   	fcall	_usec_delay
  2399  010C                     l2545:	
  2400                           ;main.c: 223: }
  2401                           ;main.c: 224: do { LATD4 = 1; } while(0);
  2402                           
  2403  010C  0022               	movlb	2	; select bank2
  2404  010D  160F               	bsf	15,4	;volatile
  2405                           
  2406                           ;main.c: 225: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2407  010E  3004               	movlw	4
  2408  010F  0676               	xorwf	all_on@ao,w
  2409  0110  1903               	btfsc	3,2
  2410  0111  291E               	goto	l481
  2411  0112  3005               	movlw	5
  2412  0113  0676               	xorwf	all_on@ao,w
  2413  0114  1903               	btfsc	3,2
  2414  0115  291E               	goto	l481
  2415  0116  3006               	movlw	6
  2416  0117  0676               	xorwf	all_on@ao,w
  2417  0118  1903               	btfsc	3,2
  2418  0119  291E               	goto	l481
  2419  011A  3007               	movlw	7
  2420  011B  0676               	xorwf	all_on@ao,w
  2421  011C  1D03               	btfss	3,2
  2422  011D  2923               	goto	l2557
  2423  011E                     l481:	
  2424                           ;main.c: 226: do { LATD5 = 0; } while(0);
  2425                           
  2426  011E  128F               	bcf	15,5	;volatile
  2427                           
  2428                           ;main.c: 227: usec_delay(usec);
  2429  011F  0875               	movf	all_on@usec,w
  2430  0120  3184  24B3  3180   	fcall	_usec_delay
  2431  0123                     l2557:	
  2432                           ;main.c: 228: }
  2433                           ;main.c: 229: do { LATD5 = 1; } while(0);
  2434                           
  2435  0123  0022               	movlb	2	; select bank2
  2436  0124  168F               	bsf	15,5	;volatile
  2437                           
  2438                           ;main.c: 232: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2439  0125  0376               	decf	all_on@ao,w
  2440  0126  1903               	btfsc	3,2
  2441  0127  2934               	goto	l488
  2442  0128  3003               	movlw	3
  2443  0129  0676               	xorwf	all_on@ao,w
  2444  012A  1903               	btfsc	3,2
  2445  012B  2934               	goto	l488
  2446  012C  3005               	movlw	5
  2447  012D  0676               	xorwf	all_on@ao,w
  2448  012E  1903               	btfsc	3,2
  2449  012F  2934               	goto	l488
  2450  0130  3007               	movlw	7
  2451  0131  0676               	xorwf	all_on@ao,w
  2452  0132  1D03               	btfss	3,2
  2453  0133  2939               	goto	l2569
  2454  0134                     l488:	
  2455                           ;main.c: 233: do { LATD6 = 0; } while(0);
  2456                           
  2457  0134  130F               	bcf	15,6	;volatile
  2458                           
  2459                           ;main.c: 234: usec_delay(usec);
  2460  0135  0875               	movf	all_on@usec,w
  2461  0136  3184  24B3  3180   	fcall	_usec_delay
  2462  0139                     l2569:	
  2463                           ;main.c: 235: }
  2464                           ;main.c: 236: do { LATD6 = 1; } while(0);
  2465                           
  2466  0139  0022               	movlb	2	; select bank2
  2467  013A  170F               	bsf	15,6	;volatile
  2468                           
  2469                           ;main.c: 237: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2470  013B  3002               	movlw	2
  2471  013C  0676               	xorwf	all_on@ao,w
  2472  013D  1903               	btfsc	3,2
  2473  013E  294B               	goto	l495
  2474  013F  3003               	movlw	3
  2475  0140  0676               	xorwf	all_on@ao,w
  2476  0141  1903               	btfsc	3,2
  2477  0142  294B               	goto	l495
  2478  0143  3006               	movlw	6
  2479  0144  0676               	xorwf	all_on@ao,w
  2480  0145  1903               	btfsc	3,2
  2481  0146  294B               	goto	l495
  2482  0147  3007               	movlw	7
  2483  0148  0676               	xorwf	all_on@ao,w
  2484  0149  1D03               	btfss	3,2
  2485  014A  2950               	goto	l2581
  2486  014B                     l495:	
  2487                           ;main.c: 238: do { LATD7 = 0; } while(0);
  2488                           
  2489  014B  138F               	bcf	15,7	;volatile
  2490                           
  2491                           ;main.c: 239: usec_delay(usec);
  2492  014C  0875               	movf	all_on@usec,w
  2493  014D  3184  24B3  3180   	fcall	_usec_delay
  2494  0150                     l2581:	
  2495                           ;main.c: 240: }
  2496                           ;main.c: 241: do { LATD7 = 1; } while(0);
  2497                           
  2498  0150  0022               	movlb	2	; select bank2
  2499  0151  178F               	bsf	15,7	;volatile
  2500                           
  2501                           ;main.c: 242: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2502  0152  3004               	movlw	4
  2503  0153  0676               	xorwf	all_on@ao,w
  2504  0154  1903               	btfsc	3,2
  2505  0155  2962               	goto	l502
  2506  0156  3005               	movlw	5
  2507  0157  0676               	xorwf	all_on@ao,w
  2508  0158  1903               	btfsc	3,2
  2509  0159  2962               	goto	l502
  2510  015A  3006               	movlw	6
  2511  015B  0676               	xorwf	all_on@ao,w
  2512  015C  1903               	btfsc	3,2
  2513  015D  2962               	goto	l502
  2514  015E  3007               	movlw	7
  2515  015F  0676               	xorwf	all_on@ao,w
  2516  0160  1D03               	btfss	3,2
  2517  0161  2967               	goto	l2593
  2518  0162                     l502:	
  2519                           ;main.c: 243: do { LATE0 = 0; } while(0);
  2520                           
  2521  0162  1010               	bcf	16,0	;volatile
  2522                           
  2523                           ;main.c: 244: usec_delay(usec);
  2524  0163  0875               	movf	all_on@usec,w
  2525  0164  3184  24B3  3180   	fcall	_usec_delay
  2526  0167                     l2593:	
  2527                           ;main.c: 245: }
  2528                           ;main.c: 246: do { LATE0 = 1; } while(0);
  2529                           
  2530  0167  0022               	movlb	2	; select bank2
  2531  0168  1410               	bsf	16,0	;volatile
  2532                           
  2533                           ;main.c: 249: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2534  0169  0376               	decf	all_on@ao,w
  2535  016A  1903               	btfsc	3,2
  2536  016B  2978               	goto	l509
  2537  016C  3003               	movlw	3
  2538  016D  0676               	xorwf	all_on@ao,w
  2539  016E  1903               	btfsc	3,2
  2540  016F  2978               	goto	l509
  2541  0170  3005               	movlw	5
  2542  0171  0676               	xorwf	all_on@ao,w
  2543  0172  1903               	btfsc	3,2
  2544  0173  2978               	goto	l509
  2545  0174  3007               	movlw	7
  2546  0175  0676               	xorwf	all_on@ao,w
  2547  0176  1D03               	btfss	3,2
  2548  0177  297D               	goto	l2605
  2549  0178                     l509:	
  2550                           ;main.c: 250: do { LATE1 = 0; } while(0);
  2551                           
  2552  0178  1090               	bcf	16,1	;volatile
  2553                           
  2554                           ;main.c: 251: usec_delay(usec);
  2555  0179  0875               	movf	all_on@usec,w
  2556  017A  3184  24B3  3180   	fcall	_usec_delay
  2557  017D                     l2605:	
  2558                           ;main.c: 252: }
  2559                           ;main.c: 253: do { LATE1 = 1; } while(0);
  2560                           
  2561  017D  0022               	movlb	2	; select bank2
  2562  017E  1490               	bsf	16,1	;volatile
  2563                           
  2564                           ;main.c: 254: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2565  017F  3002               	movlw	2
  2566  0180  0676               	xorwf	all_on@ao,w
  2567  0181  1903               	btfsc	3,2
  2568  0182  298F               	goto	l516
  2569  0183  3003               	movlw	3
  2570  0184  0676               	xorwf	all_on@ao,w
  2571  0185  1903               	btfsc	3,2
  2572  0186  298F               	goto	l516
  2573  0187  3006               	movlw	6
  2574  0188  0676               	xorwf	all_on@ao,w
  2575  0189  1903               	btfsc	3,2
  2576  018A  298F               	goto	l516
  2577  018B  3007               	movlw	7
  2578  018C  0676               	xorwf	all_on@ao,w
  2579  018D  1D03               	btfss	3,2
  2580  018E  2994               	goto	l2617
  2581  018F                     l516:	
  2582                           ;main.c: 255: do { LATE2 = 0; } while(0);
  2583                           
  2584  018F  1110               	bcf	16,2	;volatile
  2585                           
  2586                           ;main.c: 256: usec_delay(usec);
  2587  0190  0875               	movf	all_on@usec,w
  2588  0191  3184  24B3  3180   	fcall	_usec_delay
  2589  0194                     l2617:	
  2590                           ;main.c: 257: }
  2591                           ;main.c: 258: do { LATE2 = 1; } while(0);
  2592                           
  2593  0194  0022               	movlb	2	; select bank2
  2594  0195  1510               	bsf	16,2	;volatile
  2595                           
  2596                           ;main.c: 259: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2597  0196  3004               	movlw	4
  2598  0197  0676               	xorwf	all_on@ao,w
  2599  0198  1903               	btfsc	3,2
  2600  0199  29A6               	goto	l523
  2601  019A  3005               	movlw	5
  2602  019B  0676               	xorwf	all_on@ao,w
  2603  019C  1903               	btfsc	3,2
  2604  019D  29A6               	goto	l523
  2605  019E  3006               	movlw	6
  2606  019F  0676               	xorwf	all_on@ao,w
  2607  01A0  1903               	btfsc	3,2
  2608  01A1  29A6               	goto	l523
  2609  01A2  3007               	movlw	7
  2610  01A3  0676               	xorwf	all_on@ao,w
  2611  01A4  1D03               	btfss	3,2
  2612  01A5  29AB               	goto	l2629
  2613  01A6                     l523:	
  2614                           ;main.c: 260: do { LATE3 = 0; } while(0);
  2615                           
  2616  01A6  1190               	bcf	16,3	;volatile
  2617                           
  2618                           ;main.c: 261: usec_delay(usec);
  2619  01A7  0875               	movf	all_on@usec,w
  2620  01A8  3184  24B3  3180   	fcall	_usec_delay
  2621  01AB                     l2629:	
  2622                           ;main.c: 262: }
  2623                           ;main.c: 263: do { LATE3 = 1; } while(0);
  2624                           
  2625  01AB  0022               	movlb	2	; select bank2
  2626  01AC  1590               	bsf	16,3	;volatile
  2627                           
  2628                           ;main.c: 266: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2629  01AD  0376               	decf	all_on@ao,w
  2630  01AE  1903               	btfsc	3,2
  2631  01AF  29BC               	goto	l530
  2632  01B0  3003               	movlw	3
  2633  01B1  0676               	xorwf	all_on@ao,w
  2634  01B2  1903               	btfsc	3,2
  2635  01B3  29BC               	goto	l530
  2636  01B4  3005               	movlw	5
  2637  01B5  0676               	xorwf	all_on@ao,w
  2638  01B6  1903               	btfsc	3,2
  2639  01B7  29BC               	goto	l530
  2640  01B8  3007               	movlw	7
  2641  01B9  0676               	xorwf	all_on@ao,w
  2642  01BA  1D03               	btfss	3,2
  2643  01BB  29C1               	goto	l2641
  2644  01BC                     l530:	
  2645                           ;main.c: 267: do { LATE4 = 0; } while(0);
  2646                           
  2647  01BC  1210               	bcf	16,4	;volatile
  2648                           
  2649                           ;main.c: 268: usec_delay(usec);
  2650  01BD  0875               	movf	all_on@usec,w
  2651  01BE  3184  24B3  3180   	fcall	_usec_delay
  2652  01C1                     l2641:	
  2653                           ;main.c: 269: }
  2654                           ;main.c: 270: do { LATE4 = 1; } while(0);
  2655                           
  2656  01C1  0022               	movlb	2	; select bank2
  2657  01C2  1610               	bsf	16,4	;volatile
  2658                           
  2659                           ;main.c: 271: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2660  01C3  3002               	movlw	2
  2661  01C4  0676               	xorwf	all_on@ao,w
  2662  01C5  1903               	btfsc	3,2
  2663  01C6  29D3               	goto	l537
  2664  01C7  3003               	movlw	3
  2665  01C8  0676               	xorwf	all_on@ao,w
  2666  01C9  1903               	btfsc	3,2
  2667  01CA  29D3               	goto	l537
  2668  01CB  3006               	movlw	6
  2669  01CC  0676               	xorwf	all_on@ao,w
  2670  01CD  1903               	btfsc	3,2
  2671  01CE  29D3               	goto	l537
  2672  01CF  3007               	movlw	7
  2673  01D0  0676               	xorwf	all_on@ao,w
  2674  01D1  1D03               	btfss	3,2
  2675  01D2  29D8               	goto	l2653
  2676  01D3                     l537:	
  2677                           ;main.c: 272: do { LATE5 = 0; } while(0);
  2678                           
  2679  01D3  1290               	bcf	16,5	;volatile
  2680                           
  2681                           ;main.c: 273: usec_delay(usec);
  2682  01D4  0875               	movf	all_on@usec,w
  2683  01D5  3184  24B3  3180   	fcall	_usec_delay
  2684  01D8                     l2653:	
  2685                           ;main.c: 274: }
  2686                           ;main.c: 275: do { LATE5 = 1; } while(0);
  2687                           
  2688  01D8  0022               	movlb	2	; select bank2
  2689  01D9  1690               	bsf	16,5	;volatile
  2690                           
  2691                           ;main.c: 276: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2692  01DA  3004               	movlw	4
  2693  01DB  0676               	xorwf	all_on@ao,w
  2694  01DC  1903               	btfsc	3,2
  2695  01DD  29EA               	goto	l544
  2696  01DE  3005               	movlw	5
  2697  01DF  0676               	xorwf	all_on@ao,w
  2698  01E0  1903               	btfsc	3,2
  2699  01E1  29EA               	goto	l544
  2700  01E2  3006               	movlw	6
  2701  01E3  0676               	xorwf	all_on@ao,w
  2702  01E4  1903               	btfsc	3,2
  2703  01E5  29EA               	goto	l544
  2704  01E6  3007               	movlw	7
  2705  01E7  0676               	xorwf	all_on@ao,w
  2706  01E8  1D03               	btfss	3,2
  2707  01E9  29EF               	goto	l2665
  2708  01EA                     l544:	
  2709                           ;main.c: 277: do { LATE6 = 0; } while(0);
  2710                           
  2711  01EA  1310               	bcf	16,6	;volatile
  2712                           
  2713                           ;main.c: 278: usec_delay(usec);
  2714  01EB  0875               	movf	all_on@usec,w
  2715  01EC  3184  24B3  3180   	fcall	_usec_delay
  2716  01EF                     l2665:	
  2717                           ;main.c: 279: }
  2718                           ;main.c: 280: do { LATE6 = 1; } while(0);
  2719                           
  2720  01EF  0022               	movlb	2	; select bank2
  2721  01F0  1710               	bsf	16,6	;volatile
  2722                           
  2723                           ;main.c: 283: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2724  01F1  0376               	decf	all_on@ao,w
  2725  01F2  1903               	btfsc	3,2
  2726  01F3  2A00               	goto	l551
  2727  01F4  3003               	movlw	3
  2728  01F5  0676               	xorwf	all_on@ao,w
  2729  01F6  1903               	btfsc	3,2
  2730  01F7  2A00               	goto	l551
  2731  01F8  3005               	movlw	5
  2732  01F9  0676               	xorwf	all_on@ao,w
  2733  01FA  1903               	btfsc	3,2
  2734  01FB  2A00               	goto	l551
  2735  01FC  3007               	movlw	7
  2736  01FD  0676               	xorwf	all_on@ao,w
  2737  01FE  1D03               	btfss	3,2
  2738  01FF  2A05               	goto	l2677
  2739  0200                     l551:	
  2740                           ;main.c: 284: do { LATE7 = 0; } while(0);
  2741                           
  2742  0200  1390               	bcf	16,7	;volatile
  2743                           
  2744                           ;main.c: 285: usec_delay(usec);
  2745  0201  0875               	movf	all_on@usec,w
  2746  0202  3184  24B3  3180   	fcall	_usec_delay
  2747  0205                     l2677:	
  2748                           ;main.c: 286: }
  2749                           ;main.c: 287: do { LATE7 = 1; } while(0);
  2750                           
  2751  0205  0022               	movlb	2	; select bank2
  2752  0206  1790               	bsf	16,7	;volatile
  2753                           
  2754                           ;main.c: 288: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2755  0207  3002               	movlw	2
  2756  0208  0676               	xorwf	all_on@ao,w
  2757  0209  1903               	btfsc	3,2
  2758  020A  2A17               	goto	l558
  2759  020B  3003               	movlw	3
  2760  020C  0676               	xorwf	all_on@ao,w
  2761  020D  1903               	btfsc	3,2
  2762  020E  2A17               	goto	l558
  2763  020F  3006               	movlw	6
  2764  0210  0676               	xorwf	all_on@ao,w
  2765  0211  1903               	btfsc	3,2
  2766  0212  2A17               	goto	l558
  2767  0213  3007               	movlw	7
  2768  0214  0676               	xorwf	all_on@ao,w
  2769  0215  1D03               	btfss	3,2
  2770  0216  2A1D               	goto	l2689
  2771  0217                     l558:	
  2772                           ;main.c: 289: do { LATF0 = 0; } while(0);
  2773                           
  2774  0217  0027               	movlb	7	; select bank7
  2775  0218  100C               	bcf	12,0	;volatile
  2776                           
  2777                           ;main.c: 290: usec_delay(usec);
  2778  0219  0875               	movf	all_on@usec,w
  2779  021A  3184  24B3  3180   	fcall	_usec_delay
  2780  021D                     l2689:	
  2781                           ;main.c: 291: }
  2782                           ;main.c: 292: do { LATF0 = 1; } while(0);
  2783                           
  2784  021D  0027               	movlb	7	; select bank7
  2785  021E  140C               	bsf	12,0	;volatile
  2786                           
  2787                           ;main.c: 293: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2788  021F  3004               	movlw	4
  2789  0220  0676               	xorwf	all_on@ao,w
  2790  0221  1903               	btfsc	3,2
  2791  0222  2A2F               	goto	l565
  2792  0223  3005               	movlw	5
  2793  0224  0676               	xorwf	all_on@ao,w
  2794  0225  1903               	btfsc	3,2
  2795  0226  2A2F               	goto	l565
  2796  0227  3006               	movlw	6
  2797  0228  0676               	xorwf	all_on@ao,w
  2798  0229  1903               	btfsc	3,2
  2799  022A  2A2F               	goto	l565
  2800  022B  3007               	movlw	7
  2801  022C  0676               	xorwf	all_on@ao,w
  2802  022D  1D03               	btfss	3,2
  2803  022E  2A34               	goto	l2701
  2804  022F                     l565:	
  2805                           ;main.c: 294: do { LATF1 = 0; } while(0);
  2806                           
  2807  022F  108C               	bcf	12,1	;volatile
  2808                           
  2809                           ;main.c: 295: usec_delay(usec);
  2810  0230  0875               	movf	all_on@usec,w
  2811  0231  3184  24B3  3180   	fcall	_usec_delay
  2812  0234                     l2701:	
  2813                           ;main.c: 296: }
  2814                           ;main.c: 297: do { LATF1 = 1; } while(0);
  2815                           
  2816  0234  0027               	movlb	7	; select bank7
  2817  0235  148C               	bsf	12,1	;volatile
  2818                           
  2819                           ;main.c: 300: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2820  0236  0376               	decf	all_on@ao,w
  2821  0237  1903               	btfsc	3,2
  2822  0238  2A45               	goto	l572
  2823  0239  3003               	movlw	3
  2824  023A  0676               	xorwf	all_on@ao,w
  2825  023B  1903               	btfsc	3,2
  2826  023C  2A45               	goto	l572
  2827  023D  3005               	movlw	5
  2828  023E  0676               	xorwf	all_on@ao,w
  2829  023F  1903               	btfsc	3,2
  2830  0240  2A45               	goto	l572
  2831  0241  3007               	movlw	7
  2832  0242  0676               	xorwf	all_on@ao,w
  2833  0243  1D03               	btfss	3,2
  2834  0244  2A4A               	goto	l2713
  2835  0245                     l572:	
  2836                           ;main.c: 301: do { LATF2 = 0; } while(0);
  2837                           
  2838  0245  110C               	bcf	12,2	;volatile
  2839                           
  2840                           ;main.c: 302: usec_delay(usec);
  2841  0246  0875               	movf	all_on@usec,w
  2842  0247  3184  24B3  3180   	fcall	_usec_delay
  2843  024A                     l2713:	
  2844                           ;main.c: 303: }
  2845                           ;main.c: 304: do { LATF2 = 1; } while(0);
  2846                           
  2847  024A  0027               	movlb	7	; select bank7
  2848  024B  150C               	bsf	12,2	;volatile
  2849                           
  2850                           ;main.c: 305: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2851  024C  3002               	movlw	2
  2852  024D  0676               	xorwf	all_on@ao,w
  2853  024E  1903               	btfsc	3,2
  2854  024F  2A5C               	goto	l579
  2855  0250  3003               	movlw	3
  2856  0251  0676               	xorwf	all_on@ao,w
  2857  0252  1903               	btfsc	3,2
  2858  0253  2A5C               	goto	l579
  2859  0254  3006               	movlw	6
  2860  0255  0676               	xorwf	all_on@ao,w
  2861  0256  1903               	btfsc	3,2
  2862  0257  2A5C               	goto	l579
  2863  0258  3007               	movlw	7
  2864  0259  0676               	xorwf	all_on@ao,w
  2865  025A  1D03               	btfss	3,2
  2866  025B  2A61               	goto	l2725
  2867  025C                     l579:	
  2868                           ;main.c: 306: do { LATF3 = 0; } while(0);
  2869                           
  2870  025C  118C               	bcf	12,3	;volatile
  2871                           
  2872                           ;main.c: 307: usec_delay(usec);
  2873  025D  0875               	movf	all_on@usec,w
  2874  025E  3184  24B3  3180   	fcall	_usec_delay
  2875  0261                     l2725:	
  2876                           ;main.c: 308: }
  2877                           ;main.c: 309: do { LATF3 = 1; } while(0);
  2878                           
  2879  0261  0027               	movlb	7	; select bank7
  2880  0262  158C               	bsf	12,3	;volatile
  2881                           
  2882                           ;main.c: 310: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2883  0263  3004               	movlw	4
  2884  0264  0676               	xorwf	all_on@ao,w
  2885  0265  1903               	btfsc	3,2
  2886  0266  2A73               	goto	l586
  2887  0267  3005               	movlw	5
  2888  0268  0676               	xorwf	all_on@ao,w
  2889  0269  1903               	btfsc	3,2
  2890  026A  2A73               	goto	l586
  2891  026B  3006               	movlw	6
  2892  026C  0676               	xorwf	all_on@ao,w
  2893  026D  1903               	btfsc	3,2
  2894  026E  2A73               	goto	l586
  2895  026F  3007               	movlw	7
  2896  0270  0676               	xorwf	all_on@ao,w
  2897  0271  1D03               	btfss	3,2
  2898  0272  2A78               	goto	l2737
  2899  0273                     l586:	
  2900                           ;main.c: 311: do { LATF4 = 0; } while(0);
  2901                           
  2902  0273  120C               	bcf	12,4	;volatile
  2903                           
  2904                           ;main.c: 312: usec_delay(usec);
  2905  0274  0875               	movf	all_on@usec,w
  2906  0275  3184  24B3  3180   	fcall	_usec_delay
  2907  0278                     l2737:	
  2908                           ;main.c: 313: }
  2909                           ;main.c: 314: do { LATF4 = 1; } while(0);
  2910                           
  2911  0278  0027               	movlb	7	; select bank7
  2912  0279  160C               	bsf	12,4	;volatile
  2913                           
  2914                           ;main.c: 317: if ((ao == 0x01)||(ao == 0x03)||(ao == 0x05)||(ao == 0x07)) {
  2915  027A  0376               	decf	all_on@ao,w
  2916  027B  1903               	btfsc	3,2
  2917  027C  2A89               	goto	l593
  2918  027D  3003               	movlw	3
  2919  027E  0676               	xorwf	all_on@ao,w
  2920  027F  1903               	btfsc	3,2
  2921  0280  2A89               	goto	l593
  2922  0281  3005               	movlw	5
  2923  0282  0676               	xorwf	all_on@ao,w
  2924  0283  1903               	btfsc	3,2
  2925  0284  2A89               	goto	l593
  2926  0285  3007               	movlw	7
  2927  0286  0676               	xorwf	all_on@ao,w
  2928  0287  1D03               	btfss	3,2
  2929  0288  2A8E               	goto	l2749
  2930  0289                     l593:	
  2931                           ;main.c: 318: do { LATF5 = 0; } while(0);
  2932                           
  2933  0289  128C               	bcf	12,5	;volatile
  2934                           
  2935                           ;main.c: 319: usec_delay(usec);
  2936  028A  0875               	movf	all_on@usec,w
  2937  028B  3184  24B3  3180   	fcall	_usec_delay
  2938  028E                     l2749:	
  2939                           ;main.c: 320: }
  2940                           ;main.c: 321: do { LATF5 = 1; } while(0);
  2941                           
  2942  028E  0027               	movlb	7	; select bank7
  2943  028F  168C               	bsf	12,5	;volatile
  2944                           
  2945                           ;main.c: 322: if ((ao == 0x02)||(ao == 0x03)||(ao == 0x06)||(ao == 0x07)) {
  2946  0290  3002               	movlw	2
  2947  0291  0676               	xorwf	all_on@ao,w
  2948  0292  1903               	btfsc	3,2
  2949  0293  2AA0               	goto	l600
  2950  0294  3003               	movlw	3
  2951  0295  0676               	xorwf	all_on@ao,w
  2952  0296  1903               	btfsc	3,2
  2953  0297  2AA0               	goto	l600
  2954  0298  3006               	movlw	6
  2955  0299  0676               	xorwf	all_on@ao,w
  2956  029A  1903               	btfsc	3,2
  2957  029B  2AA0               	goto	l600
  2958  029C  3007               	movlw	7
  2959  029D  0676               	xorwf	all_on@ao,w
  2960  029E  1D03               	btfss	3,2
  2961  029F  2AA5               	goto	l2761
  2962  02A0                     l600:	
  2963                           ;main.c: 323: do { LATF6 = 0; } while(0);
  2964                           
  2965  02A0  130C               	bcf	12,6	;volatile
  2966                           
  2967                           ;main.c: 324: usec_delay(usec);
  2968  02A1  0875               	movf	all_on@usec,w
  2969  02A2  3184  24B3  3180   	fcall	_usec_delay
  2970  02A5                     l2761:	
  2971                           ;main.c: 325: }
  2972                           ;main.c: 326: do { LATF6 = 1; } while(0);
  2973                           
  2974  02A5  0027               	movlb	7	; select bank7
  2975  02A6  170C               	bsf	12,6	;volatile
  2976                           
  2977                           ;main.c: 327: if ((ao == 0x04)||(ao == 0x05)||(ao == 0x06)||(ao == 0x07)) {
  2978  02A7  3004               	movlw	4
  2979  02A8  0676               	xorwf	all_on@ao,w
  2980  02A9  1903               	btfsc	3,2
  2981  02AA  2AB7               	goto	l607
  2982  02AB  3005               	movlw	5
  2983  02AC  0676               	xorwf	all_on@ao,w
  2984  02AD  1903               	btfsc	3,2
  2985  02AE  2AB7               	goto	l607
  2986  02AF  3006               	movlw	6
  2987  02B0  0676               	xorwf	all_on@ao,w
  2988  02B1  1903               	btfsc	3,2
  2989  02B2  2AB7               	goto	l607
  2990  02B3  3007               	movlw	7
  2991  02B4  0676               	xorwf	all_on@ao,w
  2992  02B5  1D03               	btfss	3,2
  2993  02B6  2ABC               	goto	l2773
  2994  02B7                     l607:	
  2995                           ;main.c: 328: do { LATF7 = 0; } while(0);
  2996                           
  2997  02B7  138C               	bcf	12,7	;volatile
  2998                           
  2999                           ;main.c: 329: usec_delay(usec);
  3000  02B8  0875               	movf	all_on@usec,w
  3001  02B9  3184  24B3  3180   	fcall	_usec_delay
  3002  02BC                     l2773:	
  3003                           ;main.c: 330: }
  3004                           ;main.c: 331: do { LATF7 = 1; } while(0);
  3005                           
  3006  02BC  0027               	movlb	7	; select bank7
  3007  02BD  178C               	bsf	12,7	;volatile
  3008                           
  3009                           ;main.c: 333: do { LATB1 = 0; } while(0);
  3010  02BE  0022               	movlb	2	; select bank2
  3011  02BF  108D               	bcf	13,1	;volatile
  3012                           
  3013                           ;main.c: 334: do { LATB2 = 0; } while(0);
  3014  02C0  110D               	bcf	13,2	;volatile
  3015                           
  3016                           ;main.c: 335: do { LATB3 = 0; } while(0);
  3017  02C1  118D               	bcf	13,3	;volatile
  3018                           
  3019                           ;main.c: 336: do { LATB4 = 0; } while(0);
  3020  02C2  120D               	bcf	13,4	;volatile
  3021                           
  3022                           ;main.c: 337: do { LATB5 = 0; } while(0);
  3023  02C3  128D               	bcf	13,5	;volatile
  3024                           
  3025                           ;main.c: 338: do { LATB6 = 0; } while(0);
  3026  02C4  130D               	bcf	13,6	;volatile
  3027                           
  3028                           ;main.c: 339: do { LATB7 = 0; } while(0);
  3029  02C5  138D               	bcf	13,7	;volatile
  3030                           
  3031                           ;main.c: 340: do { LATC1 = 0; } while(0);
  3032  02C6  108E               	bcf	14,1	;volatile
  3033  02C7  3001               	movlw	1
  3034  02C8  00F3               	movwf	??_all_on
  3035  02C9  0873               	movf	??_all_on,w
  3036  02CA  07F4               	addwf	all_on@r,f
  3037  02CB                     L2:	
  3038  02CB  3008               	movlw	8
  3039  02CC  0274               	subwf	all_on@r,w
  3040  02CD  1803               	btfsc	3,0
  3041  02CE  0008               	return
  3042  02CF  0874               	movf	all_on@r,w
  3043                           
  3044                           ; Switch size 1, requested type "space"
  3045                           ; Number of cases is 8, Range of values is 0 to 7
  3046                           ; switch strategies available:
  3047                           ; Name         Instructions Cycles
  3048                           ; direct_byte           22     6 (fixed)
  3049                           ; simple_byte           25    13 (average)
  3050                           ; jumptable            260     6 (fixed)
  3051                           ;	Chosen strategy is direct_byte
  3052  02D0  0084               	movwf	4
  3053  02D1  3008               	movlw	8
  3054  02D2  0204               	subwf	4,w
  3055  02D3  1803               	skipnc
  3056  02D4  289C               	goto	l2487
  3057  02D5  3184               	movlp	high S2933
  3058  02D6  3504               	lslf	4,w
  3059  02D7  3E8B               	addlw	low S2933
  3060  02D8  0082               	movwf	2
  3061  02D9  289C               	goto	l2487
  3062  02DA                     __end_of_all_on:	
  3063                           
  3064                           	psect	swtext1
  3065  048B                     __pswtext1:	
  3066  048B                     S2933:	
  3067  048B  3180  2885         	ljmp	l419
  3068  048D  3180  2888         	ljmp	l423
  3069  048F  3180  288B         	ljmp	l426
  3070  0491  3180  288E         	ljmp	l429
  3071  0493  3180  2891         	ljmp	l432
  3072  0495  3180  2894         	ljmp	l435
  3073  0497  3180  2897         	ljmp	l438
  3074  0499  3180  289A         	ljmp	l441
  3075                           
  3076                           	psect	text3
  3077  04B3                     __ptext3:	
  3078 ;; *************** function _usec_delay *****************
  3079 ;; Defined at:
  3080 ;;		line 518 in file "main.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  usec            1    wreg     unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  usec            1    2[COMMON] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;Total ram usage:        1 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_all_on
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _usec_delay
  3110  04B3                     _usec_delay:	
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _usec_delay: [wreg+status,2+status,0]
  3114                           ;usec_delay@usec stored from wreg
  3115  04B3  00F2               	movwf	usec_delay@usec
  3116  04B4                     l2389:	
  3117                           ;main.c: 520: while (usec > 0) {
  3118                           
  3119  04B4  0872               	movf	usec_delay@usec,w
  3120  04B5  1903               	btfsc	3,2
  3121  04B6  0008               	return
  3122                           
  3123                           ;main.c: 521: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3124  04B7  3200               	nop2	;2 cycle nop
  3125  04B8  3200               	nop2	;2 cycle nop
  3126                           
  3127                           ;main.c: 522: usec--;
  3128  04B9  3001               	movlw	1
  3129  04BA  02F2               	subwf	usec_delay@usec,f
  3130  04BB  2CB4               	goto	l2389
  3131  04BC                     __end_of_usec_delay:	
  3132                           
  3133                           	psect	text4
  3134  04A7                     __ptext4:	
  3135 ;; *************** function _SYSTEM_Initialize *****************
  3136 ;; Defined at:
  3137 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;		None               void
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		_EUSART1_Initialize
  3160 ;;		_EUSART2_Initialize
  3161 ;;		_OSCILLATOR_Initialize
  3162 ;;		_PIN_MANAGER_Initialize
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _SYSTEM_Initialize
  3170  04A7                     _SYSTEM_Initialize:	
  3171                           
  3172                           ;mcc.c: 72: OSCILLATOR_Initialize();
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3176  04A7  3184  24C3  3184   	fcall	_OSCILLATOR_Initialize
  3177                           
  3178                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  3179  04AA  3183  23AE  3184   	fcall	_PIN_MANAGER_Initialize
  3180                           
  3181                           ;mcc.c: 74: EUSART1_Initialize();
  3182  04AD  3184  2471  3184   	fcall	_EUSART1_Initialize
  3183                           
  3184                           ;mcc.c: 75: EUSART2_Initialize();
  3185  04B0  3184  2457         	fcall	_EUSART2_Initialize
  3186  04B2  0008               	return
  3187  04B3                     __end_of_SYSTEM_Initialize:	
  3188                           
  3189                           	psect	text5
  3190  03AE                     __ptext5:	
  3191 ;; *************** function _PIN_MANAGER_Initialize *****************
  3192 ;; Defined at:
  3193 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;		None               void
  3200 ;; Registers used:
  3201 ;;		wreg, status,2
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    2
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_SYSTEM_Initialize
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _PIN_MANAGER_Initialize
  3223  03AE                     _PIN_MANAGER_Initialize:	
  3224                           
  3225                           ;pin_manager.c: 51: LATA = 0x00;
  3226                           
  3227                           ;incstack = 0
  3228                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3229  03AE  0022               	movlb	2	; select bank2
  3230  03AF  018C               	clrf	12	;volatile
  3231                           
  3232                           ;pin_manager.c: 52: TRISA = 0xFF;
  3233  03B0  30FF               	movlw	255
  3234  03B1  0021               	movlb	1	; select bank1
  3235  03B2  008C               	movwf	12	;volatile
  3236                           
  3237                           ;pin_manager.c: 53: ANSELA = 0x00;
  3238  03B3  0023               	movlb	3	; select bank3
  3239  03B4  018C               	clrf	12	;volatile
  3240                           
  3241                           ;pin_manager.c: 55: LATB = 0x02;
  3242  03B5  3002               	movlw	2
  3243  03B6  0022               	movlb	2	; select bank2
  3244  03B7  008D               	movwf	13	;volatile
  3245                           
  3246                           ;pin_manager.c: 56: TRISB = 0x01;
  3247  03B8  3001               	movlw	1
  3248  03B9  0021               	movlb	1	; select bank1
  3249  03BA  008D               	movwf	13	;volatile
  3250                           
  3251                           ;pin_manager.c: 57: WPUB = 0x00;
  3252  03BB  0024               	movlb	4	; select bank4
  3253  03BC  018D               	clrf	13	;volatile
  3254                           
  3255                           ;pin_manager.c: 59: LATC = 0x00;
  3256  03BD  0022               	movlb	2	; select bank2
  3257  03BE  018E               	clrf	14	;volatile
  3258                           
  3259                           ;pin_manager.c: 60: TRISC = 0xFD;
  3260  03BF  30FD               	movlw	253
  3261  03C0  0021               	movlb	1	; select bank1
  3262  03C1  008E               	movwf	14	;volatile
  3263                           
  3264                           ;pin_manager.c: 62: LATD = 0xFE;
  3265  03C2  30FE               	movlw	254
  3266  03C3  0022               	movlb	2	; select bank2
  3267  03C4  008F               	movwf	15	;volatile
  3268                           
  3269                           ;pin_manager.c: 63: TRISD = 0x00;
  3270  03C5  0021               	movlb	1	; select bank1
  3271  03C6  018F               	clrf	15	;volatile
  3272                           
  3273                           ;pin_manager.c: 65: LATE = 0xFF;
  3274  03C7  30FF               	movlw	255
  3275  03C8  0022               	movlb	2	; select bank2
  3276  03C9  0090               	movwf	16	;volatile
  3277                           
  3278                           ;pin_manager.c: 66: TRISE = 0x00;
  3279  03CA  0021               	movlb	1	; select bank1
  3280  03CB  0190               	clrf	16	;volatile
  3281                           
  3282                           ;pin_manager.c: 67: ANSELE = 0x00;
  3283  03CC  0023               	movlb	3	; select bank3
  3284  03CD  0190               	clrf	16	;volatile
  3285                           
  3286                           ;pin_manager.c: 69: LATF = 0xFF;
  3287  03CE  30FF               	movlw	255
  3288  03CF  0027               	movlb	7	; select bank7
  3289  03D0  008C               	movwf	12	;volatile
  3290                           
  3291                           ;pin_manager.c: 70: TRISF = 0x00;
  3292  03D1  0026               	movlb	6	; select bank6
  3293  03D2  018C               	clrf	12	;volatile
  3294                           
  3295                           ;pin_manager.c: 71: ANSELF = 0x00;
  3296  03D3  0028               	movlb	8	; select bank8
  3297  03D4  018C               	clrf	12	;volatile
  3298                           
  3299                           ;pin_manager.c: 73: LATG = 0x00;
  3300  03D5  0027               	movlb	7	; select bank7
  3301  03D6  018D               	clrf	13	;volatile
  3302                           
  3303                           ;pin_manager.c: 74: TRISG = 0x3F;
  3304  03D7  303F               	movlw	63
  3305  03D8  0026               	movlb	6	; select bank6
  3306  03D9  008D               	movwf	13	;volatile
  3307                           
  3308                           ;pin_manager.c: 75: ANSELG = 0x18;
  3309  03DA  3018               	movlw	24
  3310  03DB  0028               	movlb	8	; select bank8
  3311  03DC  008D               	movwf	13	;volatile
  3312                           
  3313                           ;pin_manager.c: 76: WPUG = 0x00;
  3314  03DD  0029               	movlb	9	; select bank9
  3315  03DE  018D               	clrf	13	;volatile
  3316                           
  3317                           ;pin_manager.c: 78: OPTION_REGbits.nWPUEN = 0x01;
  3318  03DF  0021               	movlb	1	; select bank1
  3319  03E0  1795               	bsf	21,7	;volatile
  3320                           
  3321                           ;pin_manager.c: 80: APFCON = 0x00;
  3322  03E1  0022               	movlb	2	; select bank2
  3323  03E2  019D               	clrf	29	;volatile
  3324                           
  3325                           ;pin_manager.c: 83: IOCBN0 = 1;
  3326  03E3  0027               	movlb	7	; select bank7
  3327  03E4  1415               	bsf	21,0	;volatile
  3328                           
  3329                           ;pin_manager.c: 86: INTCONbits.IOCIE = 1;
  3330  03E5  158B               	bsf	11,3	;volatile
  3331  03E6  0008               	return
  3332  03E7                     __end_of_PIN_MANAGER_Initialize:	
  3333                           
  3334                           	psect	text6
  3335  04C3                     __ptext6:	
  3336 ;; *************** function _OSCILLATOR_Initialize *****************
  3337 ;; Defined at:
  3338 ;;		line 78 in file "mcc_generated_files/mcc.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, status,2
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    2
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_SYSTEM_Initialize
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _OSCILLATOR_Initialize
  3368  04C3                     _OSCILLATOR_Initialize:	
  3369                           
  3370                           ;mcc.c: 80: OSCCON = 0x7A;
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3374  04C3  307A               	movlw	122
  3375  04C4  0021               	movlb	1	; select bank1
  3376  04C5  0099               	movwf	25	;volatile
  3377                           
  3378                           ;mcc.c: 82: OSCSTAT = 0x00;
  3379  04C6  019A               	clrf	26	;volatile
  3380                           
  3381                           ;mcc.c: 84: OSCTUNE = 0x00;
  3382  04C7  0198               	clrf	24	;volatile
  3383  04C8  0008               	return
  3384  04C9                     __end_of_OSCILLATOR_Initialize:	
  3385                           
  3386                           	psect	text7
  3387  0457                     __ptext7:	
  3388 ;; *************** function _EUSART2_Initialize *****************
  3389 ;; Defined at:
  3390 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;		None               void
  3397 ;; Registers used:
  3398 ;;		wreg, status,2
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;Total ram usage:        1 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    2
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_SYSTEM_Initialize
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _EUSART2_Initialize
  3420  0457                     _EUSART2_Initialize:	
  3421                           
  3422                           ;eusart2.c: 78: PIE4bits.RC2IE = 0;
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _EUSART2_Initialize: [wreg+status,2]
  3426  0457  0021               	movlb	1	; select bank1
  3427  0458  1294               	bcf	20,5	;volatile
  3428                           
  3429                           ;eusart2.c: 79: PIE4bits.TX2IE = 0;
  3430  0459  1214               	bcf	20,4	;volatile
  3431                           
  3432                           ;eusart2.c: 84: BAUD2CON = 0x48;
  3433  045A  3048               	movlw	72
  3434  045B  0029               	movlb	9	; select bank9
  3435  045C  0097               	movwf	23	;volatile
  3436                           
  3437                           ;eusart2.c: 87: RC2STA = 0x80;
  3438  045D  3080               	movlw	128
  3439  045E  0095               	movwf	21	;volatile
  3440                           
  3441                           ;eusart2.c: 90: TX2STA = 0x26;
  3442  045F  3026               	movlw	38
  3443  0460  0096               	movwf	22	;volatile
  3444                           
  3445                           ;eusart2.c: 93: SP2BRGL = 0x22;
  3446  0461  3022               	movlw	34
  3447  0462  0093               	movwf	19	;volatile
  3448                           
  3449                           ;eusart2.c: 96: SP2BRGH = 0x00;
  3450  0463  0194               	clrf	20	;volatile
  3451                           
  3452                           ;eusart2.c: 100: eusart2TxHead = 0;
  3453  0464  01FA               	clrf	_eusart2TxHead
  3454                           
  3455                           ;eusart2.c: 101: eusart2TxTail = 0;
  3456  0465  01FB               	clrf	_eusart2TxTail
  3457                           
  3458                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  3459  0466  3008               	movlw	8
  3460  0467  00F2               	movwf	??_EUSART2_Initialize
  3461  0468  0872               	movf	??_EUSART2_Initialize,w
  3462  0469  0020               	movlb	0	; select bank0
  3463  046A  00CF               	movwf	_eusart2TxBufferRemaining	;volatile
  3464                           
  3465                           ;eusart2.c: 104: eusart2RxHead = 0;
  3466  046B  01F9               	clrf	_eusart2RxHead
  3467                           
  3468                           ;eusart2.c: 105: eusart2RxTail = 0;
  3469  046C  01C7               	clrf	_eusart2RxTail
  3470                           
  3471                           ;eusart2.c: 106: eusart2RxCount = 0;
  3472  046D  01C6               	clrf	_eusart2RxCount	;volatile
  3473                           
  3474                           ;eusart2.c: 109: PIE4bits.RC2IE = 1;
  3475  046E  0021               	movlb	1	; select bank1
  3476  046F  1694               	bsf	20,5	;volatile
  3477  0470  0008               	return
  3478  0471                     __end_of_EUSART2_Initialize:	
  3479                           
  3480                           	psect	text8
  3481  0471                     __ptext8:	
  3482 ;; *************** function _EUSART1_Initialize *****************
  3483 ;; Defined at:
  3484 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;		None               void
  3491 ;; Registers used:
  3492 ;;		wreg, status,2
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;Total ram usage:        1 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    2
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_SYSTEM_Initialize
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _EUSART1_Initialize
  3514  0471                     _EUSART1_Initialize:	
  3515                           
  3516                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  3517                           
  3518                           ;incstack = 0
  3519                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  3520  0471  0021               	movlb	1	; select bank1
  3521  0472  1291               	bcf	17,5	;volatile
  3522                           
  3523                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  3524  0473  1211               	bcf	17,4	;volatile
  3525                           
  3526                           ;eusart1.c: 84: BAUD1CON = 0x48;
  3527  0474  3048               	movlw	72
  3528  0475  0023               	movlb	3	; select bank3
  3529  0476  009F               	movwf	31	;volatile
  3530                           
  3531                           ;eusart1.c: 87: RC1STA = 0x80;
  3532  0477  3080               	movlw	128
  3533  0478  009D               	movwf	29	;volatile
  3534                           
  3535                           ;eusart1.c: 90: TX1STA = 0x26;
  3536  0479  3026               	movlw	38
  3537  047A  009E               	movwf	30	;volatile
  3538                           
  3539                           ;eusart1.c: 93: SP1BRGL = 0x22;
  3540  047B  3022               	movlw	34
  3541  047C  009B               	movwf	27	;volatile
  3542                           
  3543                           ;eusart1.c: 96: SP1BRGH = 0x00;
  3544  047D  019C               	clrf	28	;volatile
  3545                           
  3546                           ;eusart1.c: 100: eusart1TxHead = 0;
  3547  047E  0020               	movlb	0	; select bank0
  3548  047F  01C4               	clrf	_eusart1TxHead
  3549                           
  3550                           ;eusart1.c: 101: eusart1TxTail = 0;
  3551  0480  01C5               	clrf	_eusart1TxTail
  3552                           
  3553                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3554  0481  3008               	movlw	8
  3555  0482  00F2               	movwf	??_EUSART1_Initialize
  3556  0483  0872               	movf	??_EUSART1_Initialize,w
  3557  0484  00CE               	movwf	_eusart1TxBufferRemaining	;volatile
  3558                           
  3559                           ;eusart1.c: 104: eusart1RxHead = 0;
  3560  0485  01C2               	clrf	_eusart1RxHead
  3561                           
  3562                           ;eusart1.c: 105: eusart1RxTail = 0;
  3563  0486  01C3               	clrf	_eusart1RxTail
  3564                           
  3565                           ;eusart1.c: 106: eusart1RxCount = 0;
  3566  0487  01C1               	clrf	_eusart1RxCount	;volatile
  3567                           
  3568                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  3569  0488  0021               	movlb	1	; select bank1
  3570  0489  1691               	bsf	17,5	;volatile
  3571  048A  0008               	return
  3572  048B                     __end_of_EUSART1_Initialize:	
  3573                           
  3574                           	psect	intentry
  3575  0004                     __pintentry:	
  3576 ;; *************** function _INTERRUPT_InterruptManager *****************
  3577 ;; Defined at:
  3578 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;		None               void
  3585 ;; Registers used:
  3586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;Total ram usage:        1 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    1
  3599 ;; This function calls:
  3600 ;;		_EUSART1_Receive_ISR
  3601 ;;		_EUSART1_Transmit_ISR
  3602 ;;		_EUSART2_Receive_ISR
  3603 ;;		_EUSART2_Transmit_ISR
  3604 ;;		_PIN_MANAGER_IOC
  3605 ;; This function is called by:
  3606 ;;		Interrupt level 1
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610  0004                     _INTERRUPT_InterruptManager:	
  3611                           
  3612                           ;incstack = 0
  3613                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3614  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3615  0005  3180               	pagesel	$
  3616  0006  0020               	movlb	0	; select bank0
  3617  0007  087F               	movf	127,w
  3618  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  3619                           
  3620                           ;interrupt_manager.c: 54: if (INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1) {
  3621  0009  198B               	btfsc	11,3	;volatile
  3622  000A  1C0B               	btfss	11,0	;volatile
  3623  000B  2811               	goto	i1l208
  3624                           
  3625                           ;interrupt_manager.c: 55: PIN_MANAGER_IOC();
  3626  000C  3184  24BC  3180   	fcall	_PIN_MANAGER_IOC
  3627                           
  3628                           ;interrupt_manager.c: 58: INTCONbits.IOCIF = 0;
  3629  000F  100B               	bcf	11,0	;volatile
  3630                           
  3631                           ;interrupt_manager.c: 59: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  3632  0010  2837               	goto	i1l218
  3633  0011                     i1l208:	
  3634  0011  0021               	movlb	1	; select bank1
  3635  0012  1E91               	btfss	17,5	;volatile
  3636  0013  281B               	goto	i1l210
  3637  0014  0020               	movlb	0	; select bank0
  3638  0015  1E91               	btfss	17,5	;volatile
  3639  0016  281B               	goto	i1l210
  3640                           
  3641                           ;interrupt_manager.c: 60: EUSART1_Receive_ISR();
  3642  0017  3184  243C  3180   	fcall	_EUSART1_Receive_ISR
  3643                           
  3644                           ;interrupt_manager.c: 61: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  3645  001A  2837               	goto	i1l218
  3646  001B                     i1l210:	
  3647  001B  0021               	movlb	1	; select bank1
  3648  001C  1E11               	btfss	17,4	;volatile
  3649  001D  2825               	goto	i1l212
  3650  001E  0020               	movlb	0	; select bank0
  3651  001F  1E11               	btfss	17,4	;volatile
  3652  0020  2825               	goto	i1l212
  3653                           
  3654                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  3655  0021  3184  2404  3180   	fcall	_EUSART1_Transmit_ISR
  3656                           
  3657                           ;interrupt_manager.c: 63: } else if (PIE4bits.RC2IE == 1 && PIR4bits.RC2IF == 1) {
  3658  0024  2837               	goto	i1l218
  3659  0025                     i1l212:	
  3660  0025  0021               	movlb	1	; select bank1
  3661  0026  1E94               	btfss	20,5	;volatile
  3662  0027  282F               	goto	i1l214
  3663  0028  0020               	movlb	0	; select bank0
  3664  0029  1E94               	btfss	20,5	;volatile
  3665  002A  282F               	goto	i1l214
  3666                           
  3667                           ;interrupt_manager.c: 64: EUSART2_Receive_ISR();
  3668  002B  3184  2421  3180   	fcall	_EUSART2_Receive_ISR
  3669                           
  3670                           ;interrupt_manager.c: 65: } else if (PIE4bits.TX2IE == 1 && PIR4bits.TX2IF == 1) {
  3671  002E  2837               	goto	i1l218
  3672  002F                     i1l214:	
  3673  002F  0021               	movlb	1	; select bank1
  3674  0030  1E14               	btfss	20,4	;volatile
  3675  0031  2837               	goto	i1l218
  3676  0032  0020               	movlb	0	; select bank0
  3677  0033  1E14               	btfss	20,4	;volatile
  3678  0034  2837               	goto	i1l218
  3679                           
  3680                           ;interrupt_manager.c: 66: EUSART2_Transmit_ISR();
  3681  0035  3183  23E7         	fcall	_EUSART2_Transmit_ISR
  3682  0037                     i1l218:	
  3683                           ;interrupt_manager.c: 67: } else {
  3684                           
  3685  0037  0871               	movf	??_INTERRUPT_InterruptManager,w
  3686  0038  0020               	movlb	0	; select bank0
  3687  0039  00FF               	movwf	127
  3688  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3689  003B  0009               	retfie
  3690  003C                     __end_of_INTERRUPT_InterruptManager:	
  3691                           
  3692                           	psect	text10
  3693  04BC                     __ptext10:	
  3694 ;; *************** function _PIN_MANAGER_IOC *****************
  3695 ;; Defined at:
  3696 ;;		line 90 in file "mcc_generated_files/pin_manager.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;		None               void
  3703 ;; Registers used:
  3704 ;;		None
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_INTERRUPT_InterruptManager
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           
  3724                           ;psect for function _PIN_MANAGER_IOC
  3725  04BC                     _PIN_MANAGER_IOC:	
  3726                           
  3727                           ;pin_manager.c: 91: if ((IOCBN0 == 1) && (IOCBF0 == 1)) {
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _PIN_MANAGER_IOC: []
  3731  04BC  0027               	movlb	7	; select bank7
  3732  04BD  1C15               	btfss	21,0	;volatile
  3733  04BE  0008               	return
  3734  04BF  1C16               	btfss	22,0	;volatile
  3735  04C0  0008               	return
  3736                           
  3737                           ;pin_manager.c: 95: IOCBF0 = 0;
  3738  04C1  1016               	bcf	22,0	;volatile
  3739  04C2  0008               	return
  3740  04C3                     __end_of_PIN_MANAGER_IOC:	
  3741                           
  3742                           	psect	text11
  3743  03E7                     __ptext11:	
  3744 ;; *************** function _EUSART2_Transmit_ISR *****************
  3745 ;; Defined at:
  3746 ;;		line 147 in file "mcc_generated_files/eusart2.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;		None               void
  3753 ;; Registers used:
  3754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;Total ram usage:        1 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_INTERRUPT_InterruptManager
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _EUSART2_Transmit_ISR
  3775  03E7                     _EUSART2_Transmit_ISR:	
  3776                           
  3777                           ;eusart2.c: 150: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  3778                           
  3779                           ;incstack = 0
  3780                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3781  03E7  3008               	movlw	8
  3782  03E8  0020               	movlb	0	; select bank0
  3783  03E9  024F               	subwf	_eusart2TxBufferRemaining,w	;volatile
  3784  03EA  1803               	skipnc
  3785  03EB  2C01               	goto	i1l56
  3786                           
  3787                           ;eusart2.c: 151: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  3788  03EC  087B               	movf	_eusart2TxTail,w
  3789  03ED  3E38               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
  3790  03EE  0086               	movwf	6
  3791  03EF  0187               	clrf	7
  3792  03F0  0801               	movf	1,w
  3793  03F1  0029               	movlb	9	; select bank9
  3794  03F2  0092               	movwf	18	;volatile
  3795  03F3  3001               	movlw	1
  3796  03F4  00F0               	movwf	??_EUSART2_Transmit_ISR
  3797  03F5  0870               	movf	??_EUSART2_Transmit_ISR,w
  3798  03F6  07FB               	addwf	_eusart2TxTail,f
  3799                           
  3800                           ;eusart2.c: 152: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  3801  03F7  3008               	movlw	8
  3802  03F8  027B               	subwf	_eusart2TxTail,w
  3803  03F9  1803               	btfsc	3,0
  3804                           
  3805                           ;eusart2.c: 153: eusart2TxTail = 0;
  3806  03FA  01FB               	clrf	_eusart2TxTail
  3807                           
  3808                           ;eusart2.c: 154: }
  3809                           ;eusart2.c: 155: eusart2TxBufferRemaining++;
  3810  03FB  3001               	movlw	1
  3811  03FC  00F0               	movwf	??_EUSART2_Transmit_ISR
  3812  03FD  0870               	movf	??_EUSART2_Transmit_ISR,w
  3813  03FE  0020               	movlb	0	; select bank0
  3814  03FF  07CF               	addwf	_eusart2TxBufferRemaining,f	;volatile
  3815                           
  3816                           ;eusart2.c: 156: } else {
  3817  0400  0008               	return
  3818  0401                     i1l56:	
  3819                           
  3820                           ;eusart2.c: 157: PIE4bits.TX2IE = 0;
  3821  0401  0021               	movlb	1	; select bank1
  3822  0402  1214               	bcf	20,4	;volatile
  3823  0403  0008               	return
  3824  0404                     __end_of_EUSART2_Transmit_ISR:	
  3825                           
  3826                           	psect	text12
  3827  0421                     __ptext12:	
  3828 ;; *************** function _EUSART2_Receive_ISR *****************
  3829 ;; Defined at:
  3830 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;Total ram usage:        1 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_INTERRUPT_InterruptManager
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function _EUSART2_Receive_ISR
  3859  0421                     _EUSART2_Receive_ISR:	
  3860                           
  3861                           ;eusart2.c: 162: if (1 == RC2STAbits.OERR) {
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3865  0421  0029               	movlb	9	; select bank9
  3866  0422  1C95               	btfss	21,1	;volatile
  3867  0423  2C26               	goto	i1l2203
  3868                           
  3869                           ;eusart2.c: 165: RC2STAbits.CREN = 0;
  3870  0424  1215               	bcf	21,4	;volatile
  3871                           
  3872                           ;eusart2.c: 166: RC2STAbits.CREN = 1;
  3873  0425  1615               	bsf	21,4	;volatile
  3874  0426                     i1l2203:	
  3875                           
  3876                           ;eusart2.c: 167: }
  3877                           ;eusart2.c: 170: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  3878  0426  0811               	movf	17,w	;volatile
  3879  0427  00F0               	movwf	??_EUSART2_Receive_ISR
  3880  0428  0879               	movf	_eusart2RxHead,w
  3881  0429  3E30               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
  3882  042A  0086               	movwf	6
  3883  042B  0187               	clrf	7
  3884  042C  0870               	movf	??_EUSART2_Receive_ISR,w
  3885  042D  0081               	movwf	1
  3886  042E  3001               	movlw	1
  3887  042F  00F0               	movwf	??_EUSART2_Receive_ISR
  3888  0430  0870               	movf	??_EUSART2_Receive_ISR,w
  3889  0431  07F9               	addwf	_eusart2RxHead,f
  3890                           
  3891                           ;eusart2.c: 171: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  3892  0432  3008               	movlw	8
  3893  0433  0279               	subwf	_eusart2RxHead,w
  3894  0434  1803               	btfsc	3,0
  3895                           
  3896                           ;eusart2.c: 172: eusart2RxHead = 0;
  3897  0435  01F9               	clrf	_eusart2RxHead
  3898                           
  3899                           ;eusart2.c: 173: }
  3900                           ;eusart2.c: 174: eusart2RxCount++;
  3901  0436  3001               	movlw	1
  3902  0437  00F0               	movwf	??_EUSART2_Receive_ISR
  3903  0438  0870               	movf	??_EUSART2_Receive_ISR,w
  3904  0439  0020               	movlb	0	; select bank0
  3905  043A  07C6               	addwf	_eusart2RxCount,f	;volatile
  3906  043B  0008               	return
  3907  043C                     __end_of_EUSART2_Receive_ISR:	
  3908                           
  3909                           	psect	text13
  3910  0404                     __ptext13:	
  3911 ;; *************** function _EUSART1_Transmit_ISR *****************
  3912 ;; Defined at:
  3913 ;;		line 147 in file "mcc_generated_files/eusart1.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;Total ram usage:        1 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_INTERRUPT_InterruptManager
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           
  3941                           ;psect for function _EUSART1_Transmit_ISR
  3942  0404                     _EUSART1_Transmit_ISR:	
  3943                           
  3944                           ;eusart1.c: 150: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3948  0404  3008               	movlw	8
  3949  0405  0020               	movlb	0	; select bank0
  3950  0406  024E               	subwf	_eusart1TxBufferRemaining,w	;volatile
  3951  0407  1803               	skipnc
  3952  0408  2C1E               	goto	i1l120
  3953                           
  3954                           ;eusart1.c: 151: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  3955  0409  0845               	movf	_eusart1TxTail,w
  3956  040A  3E28               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  3957  040B  0086               	movwf	6
  3958  040C  0187               	clrf	7
  3959  040D  0801               	movf	1,w
  3960  040E  0023               	movlb	3	; select bank3
  3961  040F  009A               	movwf	26	;volatile
  3962  0410  3001               	movlw	1
  3963  0411  00F0               	movwf	??_EUSART1_Transmit_ISR
  3964  0412  0870               	movf	??_EUSART1_Transmit_ISR,w
  3965  0413  0020               	movlb	0	; select bank0
  3966  0414  07C5               	addwf	_eusart1TxTail,f
  3967                           
  3968                           ;eusart1.c: 152: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  3969  0415  3008               	movlw	8
  3970  0416  0245               	subwf	_eusart1TxTail,w
  3971  0417  1803               	btfsc	3,0
  3972                           
  3973                           ;eusart1.c: 153: eusart1TxTail = 0;
  3974  0418  01C5               	clrf	_eusart1TxTail
  3975                           
  3976                           ;eusart1.c: 154: }
  3977                           ;eusart1.c: 155: eusart1TxBufferRemaining++;
  3978  0419  3001               	movlw	1
  3979  041A  00F0               	movwf	??_EUSART1_Transmit_ISR
  3980  041B  0870               	movf	??_EUSART1_Transmit_ISR,w
  3981  041C  07CE               	addwf	_eusart1TxBufferRemaining,f	;volatile
  3982                           
  3983                           ;eusart1.c: 156: } else {
  3984  041D  0008               	return
  3985  041E                     i1l120:	
  3986                           
  3987                           ;eusart1.c: 157: PIE1bits.TX1IE = 0;
  3988  041E  0021               	movlb	1	; select bank1
  3989  041F  1211               	bcf	17,4	;volatile
  3990  0420  0008               	return
  3991  0421                     __end_of_EUSART1_Transmit_ISR:	
  3992                           
  3993                           	psect	text14
  3994  043C                     __ptext14:	
  3995 ;; *************** function _EUSART1_Receive_ISR *****************
  3996 ;; Defined at:
  3997 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;		None
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;		None
  4002 ;; Return value:  Size  Location     Type
  4003 ;;		None               void
  4004 ;; Registers used:
  4005 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4015 ;;Total ram usage:        1 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_INTERRUPT_InterruptManager
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function _EUSART1_Receive_ISR
  4026  043C                     _EUSART1_Receive_ISR:	
  4027                           
  4028                           ;eusart1.c: 162: if (1 == RC1STAbits.OERR) {
  4029                           
  4030                           ;incstack = 0
  4031                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4032  043C  0023               	movlb	3	; select bank3
  4033  043D  1C9D               	btfss	29,1	;volatile
  4034  043E  2C41               	goto	i1l2229
  4035                           
  4036                           ;eusart1.c: 165: RC1STAbits.CREN = 0;
  4037  043F  121D               	bcf	29,4	;volatile
  4038                           
  4039                           ;eusart1.c: 166: RC1STAbits.CREN = 1;
  4040  0440  161D               	bsf	29,4	;volatile
  4041  0441                     i1l2229:	
  4042                           
  4043                           ;eusart1.c: 167: }
  4044                           ;eusart1.c: 170: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  4045  0441  0819               	movf	25,w	;volatile
  4046  0442  00F0               	movwf	??_EUSART1_Receive_ISR
  4047  0443  0020               	movlb	0	; select bank0
  4048  0444  0842               	movf	_eusart1RxHead,w
  4049  0445  3E20               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  4050  0446  0086               	movwf	6
  4051  0447  0187               	clrf	7
  4052  0448  0870               	movf	??_EUSART1_Receive_ISR,w
  4053  0449  0081               	movwf	1
  4054  044A  3001               	movlw	1
  4055  044B  00F0               	movwf	??_EUSART1_Receive_ISR
  4056  044C  0870               	movf	??_EUSART1_Receive_ISR,w
  4057  044D  07C2               	addwf	_eusart1RxHead,f
  4058                           
  4059                           ;eusart1.c: 171: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  4060  044E  3008               	movlw	8
  4061  044F  0242               	subwf	_eusart1RxHead,w
  4062  0450  1803               	btfsc	3,0
  4063                           
  4064                           ;eusart1.c: 172: eusart1RxHead = 0;
  4065  0451  01C2               	clrf	_eusart1RxHead
  4066                           
  4067                           ;eusart1.c: 173: }
  4068                           ;eusart1.c: 174: eusart1RxCount++;
  4069  0452  3001               	movlw	1
  4070  0453  00F0               	movwf	??_EUSART1_Receive_ISR
  4071  0454  0870               	movf	??_EUSART1_Receive_ISR,w
  4072  0455  07C1               	addwf	_eusart1RxCount,f	;volatile
  4073  0456  0008               	return
  4074  0457                     __end_of_EUSART1_Receive_ISR:	
  4075  007E                     btemp	set	126	;btemp
  4076  007E                     int$flags	set	126
  4077  007E                     wtemp	set	126
  4078  007E                     wtemp0	set	126
  4079  0080                     wtemp1	set	128
  4080  0082                     wtemp2	set	130
  4081  0084                     wtemp3	set	132
  4082  0086                     wtemp4	set	134
  4083  0088                     wtemp5	set	136
  4084  007F                     wtemp6	set	127
  4085  007E                     ttemp	set	126
  4086  007E                     ttemp0	set	126
  4087  0081                     ttemp1	set	129
  4088  0084                     ttemp2	set	132
  4089  0087                     ttemp3	set	135
  4090  007F                     ttemp4	set	127
  4091  007E                     ltemp	set	126
  4092  007E                     ltemp0	set	126
  4093  0082                     ltemp1	set	130
  4094  0086                     ltemp2	set	134
  4095  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      6      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_test_pattern
    _test_pattern->_all_on
    _all_on->_usec_delay
    _SYSTEM_Initialize->_EUSART1_Initialize
    _SYSTEM_Initialize->_EUSART2_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_test_pattern

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3470
                                              1 BANK0      5     5      0
                  _SYSTEM_Initialize
                       _test_pattern
 ---------------------------------------------------------------------------------
 (1) _test_pattern                                         2     2      0    3210
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                             _all_on
 ---------------------------------------------------------------------------------
 (2) _all_on                                               4     4      0    2888
                                              3 COMMON     4     4      0
                         _usec_delay
 ---------------------------------------------------------------------------------
 (3) _usec_delay                                           1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _test_pattern
     _all_on
       _usec_delay

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Dec  2 05:43:21 2015

           _eusart1TxBufferRemaining 004E                                    pc 0002  
                        __CFG_CP$OFF 0000                                  l502 0162  
                                l423 0088                                  l600 02A0  
                                l432 0091                                  l441 009A  
                                l530 01BC                                  l426 008B  
                                l523 01A6                                  l435 0094  
                                l419 0085                                  l516 018F  
                                l460 00DA                                  l509 0178  
                                l453 00C3                                  l429 008E  
                                l446 00AB                                  l438 0097  
                                l607 02B7                                  l551 0200  
                                l544 01EA                                  l537 01D3  
                                l481 011E                                  l474 0107  
                                l467 00F0                                  l572 0245  
                                l565 022F                                  l558 0217  
                                l495 014B                                  l488 0134  
                                l593 0289                                  l586 0273  
                                l579 025C                         __CFG_CPD$OFF 0000  
                       __CFG_BORV$LO 0000                         __CFG_IESO$ON 0000  
                               S2933 048B                         __CFG_LVP$OFF 0000  
                               l2521 00DF                                 l2701 0234  
                               l2605 017D                                 l2533 00F5  
                               l2509 00C8                                 l2471 0077  
                               l2463 0067                                 l2713 024A  
                               l2641 01C1                                 l2617 0194  
                               l2545 010C                                 l2473 007B  
                               l2465 006B                                 l2389 04B4  
                               l2725 0261                                 l2653 01D8  
                               l2629 01AB                                 l2581 0150  
                               l2557 0123                                 l2477 0083  
                               l2813 02EC                                 l2487 009C  
                               l2831 0304                                 l2807 02E2  
                               l2911 03AA                                 l2761 02A5  
                               l2737 0278                                 l2665 01EF  
                               l2593 0167                                 l2569 0139  
                               l2497 00B1                                 l2825 02FD  
                               l2905 0372                                 l2843 0315  
                               l2819 02F3                                 l2773 02BC  
                               l2749 028E                                 l2677 0205  
                               l2861 0330                                 l2837 030E  
                               l2855 0326                                 l2689 021D  
                               l2873 0341                                 l2849 031F  
                               l2867 0337                                 l2893 0359  
                               l2899 036D              _current_column_position 0040  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _LATF 038C  
                               _LATG 038D                                 i1l56 0401  
                               _WPUB 020D                                 _WPUG 048D  
              ??_EUSART2_Receive_ISR 0070                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0350  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 003C  
                               ttemp 007E                                 wtemp 007E  
       __end_of_EUSART2_Transmit_ISR 0404                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 04C9                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _LATB1 0869  
                              _LATB2 086A                                _LATC1 0871  
                              _LATB3 086B                                _LATD0 0878  
                              _LATB4 086C                                _LATD1 0879  
                              _LATB5 086D                                _LATE0 0880  
                              _LATD2 087A                                _LATB6 086E  
                              _LATE1 0881                                _LATD3 087B  
                              _LATB7 086F                                _LATF0 1C60  
                              _LATE2 0882                                _LATD4 087C  
                              _LATF1 1C61                                _LATE3 0883  
                              _LATD5 087D                                _LATF2 1C62  
                              _LATE4 0884                                _LATD6 087E  
                              _LATF3 1C63                                _LATE5 0885  
                              _LATD7 087F                                _LATF4 1C64  
                              _LATE6 0886                                _LATF5 1C65  
                              _LATE7 0887                                _LATF6 1C66  
                              _LATF7 1C67                                i1l120 041E  
                              i1l210 001B                                i1l212 0025  
                              i1l214 002F                                i1l208 0011  
                              i1l218 0037                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISD 008F                                _TRISE 0090  
                              _TRISF 030C                                _TRISG 030D  
               _EUSART1_Transmit_ISR 0404              __end_of_PIN_MANAGER_IOC 04C3  
                              main@x 004D                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                      test_pattern@r 0048                      __initialization 003E  
         __end_of_EUSART1_Initialize 048B                         __end_of_main 03AE  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 0049  
              ?_EUSART1_Transmit_ISR 0070           __end_of_EUSART2_Initialize 0471  
           _eusart2TxBufferRemaining 004F                               _APFCON 011D  
                             _ANSELA 018C                               _ANSELE 0190  
                             _ANSELF 040C                               _ANSELG 040D  
                             _IOCBF0 1CB0                               _IOCBN0 1CA8  
                             _RC1REG 0199                               _RC2REG 0491  
                             _RC1STA 019D                               _RC2STA 0495  
                             i1l2203 0426                               i1l2229 0441  
                             _OSCCON 0099                               _TX1REG 019A  
                             _TX2REG 0492                               _TX1STA 019E  
                             _TX2STA 0496                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                               _all_on 005B  
               _EUSART2_Transmit_ISR 03E7                     ?_PIN_MANAGER_IOC 0070  
                    _eusart1RxBuffer 0020                      _eusart2RxBuffer 0030  
                    _eusart1TxBuffer 0028                    _SYSTEM_Initialize 04A7  
                    _eusart2TxBuffer 0038              __end_of__initialization 0057  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073               ??_EUSART1_Transmit_ISR 0070  
                     _OPTION_REGbits 0095                ?_EUSART2_Transmit_ISR 0070  
        __end_of_EUSART1_Receive_ISR 0457            __end_of_SYSTEM_Initialize 04B3  
                      _eusart1RxHead 0042                        _eusart1TxHead 0044  
                      _eusart2RxHead 0079                        _eusart1RxTail 0043  
                      _eusart2TxHead 007A                           __pbssBANK0 0020  
                      _eusart2RxTail 0047                        _eusart1TxTail 0045  
                      _eusart2TxTail 007B                      __CFG_VCAPEN$OFF 0000  
                         _delay_time 2330                           __pmaintext 0350  
                            ?_all_on 0070                           __pintentry 0004  
                            _SP1BRGH 019C                              _SP1BRGL 019B  
                            _SP2BRGH 0494                              _SP2BRGL 0493  
        __end_of_EUSART2_Receive_ISR 043C                              _OSCSTAT 009A  
                            _OSCTUNE 0098                      __size_of_all_on 027F  
                            __ptext1 02DA                              __ptext2 005B  
                            __ptext3 04B3                              __ptext4 04A7  
                            __ptext5 03AE                              __ptext6 04C3  
                            __ptext7 0457                              __ptext8 0471  
              _OSCILLATOR_Initialize 04C3               ??_EUSART2_Transmit_ISR 0070  
                            all_on@r 0074                   _EUSART1_Initialize 0471  
           ??_PIN_MANAGER_Initialize 0072                           all_on@usec 0075  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 049C  
               end_of_initialization 0057                  ?_EUSART1_Initialize 0070  
                 _EUSART2_Initialize 0457                 ??_EUSART1_Initialize 0072  
                ?_EUSART2_Initialize 0070                     __CFG_FOSC$INTOSC 0000  
                      ?_test_pattern 0070                           _usec_delay 04B3  
               ??_EUSART2_Initialize 0072                       __end_of_all_on 02DA  
             ?_OSCILLATOR_Initialize 0070                       ??_test_pattern 0077  
                start_initialization 003E      __size_of_PIN_MANAGER_Initialize 0039  
           __size_of_PIN_MANAGER_IOC 0007                             ??_all_on 0073  
                     _eusart1RxCount 0041                       _eusart2RxCount 0046  
                        __pbssBIGRAM 2330                          __pbssCOMMON 0078  
                          ___latbits 0003        __size_of_EUSART1_Transmit_ISR 001D  
                      __pcstackBANK0 0048                          ?_usec_delay 0070  
       __size_of_EUSART1_Receive_ISR 001B                            __pnvBANK0 004E  
             _PIN_MANAGER_Initialize 03AE                            _delay_ptr 0078  
       ??_INTERRUPT_InterruptManager 0071                            __pswtext1 048B  
                           _BAUD1CON 019F                             _BAUD2CON 0497  
       __size_of_EUSART2_Receive_ISR 001B                            clear_ram0 049B  
                           _PIE1bits 0091                             _PIE4bits 0094  
               __end_of_test_pattern 0350  __size_of_INTERRUPT_InterruptManager 0038  
                           _PIR1bits 0011                             _PIR4bits 0014  
                  ??_PIN_MANAGER_IOC 0070                  __size_of_usec_delay 0009  
      __size_of_EUSART2_Transmit_ISR 001D                       usec_delay@usec 0072  
            ??_OSCILLATOR_Initialize 0072          __size_of_EUSART1_Initialize 001A  
                           __ptext10 04BC                             __ptext11 03E7  
                           __ptext12 0421                             __ptext13 0404  
                           __ptext14 043C          __size_of_EUSART2_Initialize 001A  
                      __size_of_main 005E                             all_on@ao 0076  
                         _RC1STAbits 019D                           _RC2STAbits 0495  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 003C  
         _INTERRUPT_InterruptManager 0004                  _EUSART1_Receive_ISR 043C  
                         _INTCONbits 000B                         ??_usec_delay 0072  
                           intlevel1 0000                __size_of_test_pattern 0076  
               ?_EUSART1_Receive_ISR 0070              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000         __end_of_EUSART1_Transmit_ISR 0421  
                 __end_of_usec_delay 04BC                  _EUSART2_Receive_ISR 0421  
                       _test_pattern 02DA                ??_EUSART1_Receive_ISR 0070  
     __end_of_PIN_MANAGER_Initialize 03E7                 ?_EUSART2_Receive_ISR 0070  
                    _PIN_MANAGER_IOC 04BC  
