

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Nov 16 07:59:27 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x620,48
    28                           	dabs	1,0x5A0,80
    29                           	dabs	1,0x530,64
    30                           	dabs	1,0x2330,0,_delay_time
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000F                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  008F                     	;# 
    68  0090                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  0110                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011B                     	;# 
   100  011D                     	;# 
   101  011E                     	;# 
   102  011F                     	;# 
   103  018C                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0199                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  019F                     	;# 
   130  020D                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0219                     	;# 
   147  021A                     	;# 
   148  021B                     	;# 
   149  021C                     	;# 
   150  021D                     	;# 
   151  021E                     	;# 
   152  021F                     	;# 
   153  028C                     	;# 
   154  028D                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029C                     	;# 
   169  029C                     	;# 
   170  029D                     	;# 
   171  029E                     	;# 
   172  029F                     	;# 
   173  030C                     	;# 
   174  030D                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  038C                     	;# 
   192  038D                     	;# 
   193  0394                     	;# 
   194  0395                     	;# 
   195  0396                     	;# 
   196  040C                     	;# 
   197  040D                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  048D                     	;# 
   205  0491                     	;# 
   206  0492                     	;# 
   207  0493                     	;# 
   208  0493                     	;# 
   209  0494                     	;# 
   210  0495                     	;# 
   211  0496                     	;# 
   212  0497                     	;# 
   213  0791                     	;# 
   214  0792                     	;# 
   215  0793                     	;# 
   216  0794                     	;# 
   217  0795                     	;# 
   218  0798                     	;# 
   219  0799                     	;# 
   220  079A                     	;# 
   221  079B                     	;# 
   222  079C                     	;# 
   223  079D                     	;# 
   224  07A0                     	;# 
   225  07A1                     	;# 
   226  07A2                     	;# 
   227  07A3                     	;# 
   228  07A4                     	;# 
   229  07A5                     	;# 
   230  07A6                     	;# 
   231  07A7                     	;# 
   232  07A8                     	;# 
   233  07A9                     	;# 
   234  07AA                     	;# 
   235  07AB                     	;# 
   236  07AC                     	;# 
   237  07AD                     	;# 
   238  07AE                     	;# 
   239  07AF                     	;# 
   240  07B0                     	;# 
   241  07B1                     	;# 
   242  07B2                     	;# 
   243  07B3                     	;# 
   244  07B4                     	;# 
   245  07B5                     	;# 
   246  07B6                     	;# 
   247  07B7                     	;# 
   248  0FE4                     	;# 
   249  0FE5                     	;# 
   250  0FE6                     	;# 
   251  0FE7                     	;# 
   252  0FE8                     	;# 
   253  0FE9                     	;# 
   254  0FEA                     	;# 
   255  0FEB                     	;# 
   256  0FED                     	;# 
   257  0FEE                     	;# 
   258  0FEF                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  0008                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0014                     	;# 
   280  0015                     	;# 
   281  0016                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001B                     	;# 
   288  001C                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0110                     	;# 
   316  0111                     	;# 
   317  0112                     	;# 
   318  0113                     	;# 
   319  0114                     	;# 
   320  0115                     	;# 
   321  0116                     	;# 
   322  0117                     	;# 
   323  0118                     	;# 
   324  0119                     	;# 
   325  011A                     	;# 
   326  011B                     	;# 
   327  011D                     	;# 
   328  011E                     	;# 
   329  011F                     	;# 
   330  018C                     	;# 
   331  0190                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0199                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019A                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019C                     	;# 
   350  019C                     	;# 
   351  019D                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019E                     	;# 
   355  019F                     	;# 
   356  019F                     	;# 
   357  020D                     	;# 
   358  0211                     	;# 
   359  0211                     	;# 
   360  0212                     	;# 
   361  0212                     	;# 
   362  0213                     	;# 
   363  0213                     	;# 
   364  0214                     	;# 
   365  0214                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0219                     	;# 
   374  021A                     	;# 
   375  021B                     	;# 
   376  021C                     	;# 
   377  021D                     	;# 
   378  021E                     	;# 
   379  021F                     	;# 
   380  028C                     	;# 
   381  028D                     	;# 
   382  0291                     	;# 
   383  0291                     	;# 
   384  0292                     	;# 
   385  0293                     	;# 
   386  0294                     	;# 
   387  0295                     	;# 
   388  0295                     	;# 
   389  0296                     	;# 
   390  0298                     	;# 
   391  0298                     	;# 
   392  0299                     	;# 
   393  029A                     	;# 
   394  029B                     	;# 
   395  029C                     	;# 
   396  029C                     	;# 
   397  029D                     	;# 
   398  029E                     	;# 
   399  029F                     	;# 
   400  030C                     	;# 
   401  030D                     	;# 
   402  0311                     	;# 
   403  0311                     	;# 
   404  0312                     	;# 
   405  0313                     	;# 
   406  0314                     	;# 
   407  0315                     	;# 
   408  0315                     	;# 
   409  0316                     	;# 
   410  0318                     	;# 
   411  0318                     	;# 
   412  0319                     	;# 
   413  031A                     	;# 
   414  031C                     	;# 
   415  031C                     	;# 
   416  031D                     	;# 
   417  031E                     	;# 
   418  038C                     	;# 
   419  038D                     	;# 
   420  0394                     	;# 
   421  0395                     	;# 
   422  0396                     	;# 
   423  040C                     	;# 
   424  040D                     	;# 
   425  0415                     	;# 
   426  0416                     	;# 
   427  0417                     	;# 
   428  041C                     	;# 
   429  041D                     	;# 
   430  041E                     	;# 
   431  048D                     	;# 
   432  0491                     	;# 
   433  0492                     	;# 
   434  0493                     	;# 
   435  0493                     	;# 
   436  0494                     	;# 
   437  0495                     	;# 
   438  0496                     	;# 
   439  0497                     	;# 
   440  0791                     	;# 
   441  0792                     	;# 
   442  0793                     	;# 
   443  0794                     	;# 
   444  0795                     	;# 
   445  0798                     	;# 
   446  0799                     	;# 
   447  079A                     	;# 
   448  079B                     	;# 
   449  079C                     	;# 
   450  079D                     	;# 
   451  07A0                     	;# 
   452  07A1                     	;# 
   453  07A2                     	;# 
   454  07A3                     	;# 
   455  07A4                     	;# 
   456  07A5                     	;# 
   457  07A6                     	;# 
   458  07A7                     	;# 
   459  07A8                     	;# 
   460  07A9                     	;# 
   461  07AA                     	;# 
   462  07AB                     	;# 
   463  07AC                     	;# 
   464  07AD                     	;# 
   465  07AE                     	;# 
   466  07AF                     	;# 
   467  07B0                     	;# 
   468  07B1                     	;# 
   469  07B2                     	;# 
   470  07B3                     	;# 
   471  07B4                     	;# 
   472  07B5                     	;# 
   473  07B6                     	;# 
   474  07B7                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  000F                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0013                     	;# 
   506  0014                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009B                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  010C                     	;# 
   539  010D                     	;# 
   540  010E                     	;# 
   541  010F                     	;# 
   542  0110                     	;# 
   543  0111                     	;# 
   544  0112                     	;# 
   545  0113                     	;# 
   546  0114                     	;# 
   547  0115                     	;# 
   548  0116                     	;# 
   549  0117                     	;# 
   550  0118                     	;# 
   551  0119                     	;# 
   552  011A                     	;# 
   553  011B                     	;# 
   554  011D                     	;# 
   555  011E                     	;# 
   556  011F                     	;# 
   557  018C                     	;# 
   558  0190                     	;# 
   559  0191                     	;# 
   560  0191                     	;# 
   561  0192                     	;# 
   562  0193                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0194                     	;# 
   566  0195                     	;# 
   567  0196                     	;# 
   568  0199                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019A                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  019C                     	;# 
   578  019D                     	;# 
   579  019D                     	;# 
   580  019E                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  019F                     	;# 
   584  020D                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  0212                     	;# 
   588  0212                     	;# 
   589  0213                     	;# 
   590  0213                     	;# 
   591  0214                     	;# 
   592  0214                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0216                     	;# 
   597  0216                     	;# 
   598  0217                     	;# 
   599  0217                     	;# 
   600  0219                     	;# 
   601  021A                     	;# 
   602  021B                     	;# 
   603  021C                     	;# 
   604  021D                     	;# 
   605  021E                     	;# 
   606  021F                     	;# 
   607  028C                     	;# 
   608  028D                     	;# 
   609  0291                     	;# 
   610  0291                     	;# 
   611  0292                     	;# 
   612  0293                     	;# 
   613  0294                     	;# 
   614  0295                     	;# 
   615  0295                     	;# 
   616  0296                     	;# 
   617  0298                     	;# 
   618  0298                     	;# 
   619  0299                     	;# 
   620  029A                     	;# 
   621  029B                     	;# 
   622  029C                     	;# 
   623  029C                     	;# 
   624  029D                     	;# 
   625  029E                     	;# 
   626  029F                     	;# 
   627  030C                     	;# 
   628  030D                     	;# 
   629  0311                     	;# 
   630  0311                     	;# 
   631  0312                     	;# 
   632  0313                     	;# 
   633  0314                     	;# 
   634  0315                     	;# 
   635  0315                     	;# 
   636  0316                     	;# 
   637  0318                     	;# 
   638  0318                     	;# 
   639  0319                     	;# 
   640  031A                     	;# 
   641  031C                     	;# 
   642  031C                     	;# 
   643  031D                     	;# 
   644  031E                     	;# 
   645  038C                     	;# 
   646  038D                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  040C                     	;# 
   651  040D                     	;# 
   652  0415                     	;# 
   653  0416                     	;# 
   654  0417                     	;# 
   655  041C                     	;# 
   656  041D                     	;# 
   657  041E                     	;# 
   658  048D                     	;# 
   659  0491                     	;# 
   660  0492                     	;# 
   661  0493                     	;# 
   662  0493                     	;# 
   663  0494                     	;# 
   664  0495                     	;# 
   665  0496                     	;# 
   666  0497                     	;# 
   667  0791                     	;# 
   668  0792                     	;# 
   669  0793                     	;# 
   670  0794                     	;# 
   671  0795                     	;# 
   672  0798                     	;# 
   673  0799                     	;# 
   674  079A                     	;# 
   675  079B                     	;# 
   676  079C                     	;# 
   677  079D                     	;# 
   678  07A0                     	;# 
   679  07A1                     	;# 
   680  07A2                     	;# 
   681  07A3                     	;# 
   682  07A4                     	;# 
   683  07A5                     	;# 
   684  07A6                     	;# 
   685  07A7                     	;# 
   686  07A8                     	;# 
   687  07A9                     	;# 
   688  07AA                     	;# 
   689  07AB                     	;# 
   690  07AC                     	;# 
   691  07AD                     	;# 
   692  07AE                     	;# 
   693  07AF                     	;# 
   694  07B0                     	;# 
   695  07B1                     	;# 
   696  07B2                     	;# 
   697  07B3                     	;# 
   698  07B4                     	;# 
   699  07B5                     	;# 
   700  07B6                     	;# 
   701  07B7                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000D                     	;# 
   727  000E                     	;# 
   728  000F                     	;# 
   729  0010                     	;# 
   730  0011                     	;# 
   731  0012                     	;# 
   732  0013                     	;# 
   733  0014                     	;# 
   734  0015                     	;# 
   735  0016                     	;# 
   736  0016                     	;# 
   737  0017                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  001A                     	;# 
   741  001B                     	;# 
   742  001C                     	;# 
   743  001E                     	;# 
   744  001F                     	;# 
   745  008C                     	;# 
   746  008D                     	;# 
   747  008E                     	;# 
   748  008F                     	;# 
   749  0090                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0093                     	;# 
   753  0094                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010F                     	;# 
   769  0110                     	;# 
   770  0111                     	;# 
   771  0112                     	;# 
   772  0113                     	;# 
   773  0114                     	;# 
   774  0115                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0118                     	;# 
   778  0119                     	;# 
   779  011A                     	;# 
   780  011B                     	;# 
   781  011D                     	;# 
   782  011E                     	;# 
   783  011F                     	;# 
   784  018C                     	;# 
   785  0190                     	;# 
   786  0191                     	;# 
   787  0191                     	;# 
   788  0192                     	;# 
   789  0193                     	;# 
   790  0193                     	;# 
   791  0193                     	;# 
   792  0194                     	;# 
   793  0195                     	;# 
   794  0196                     	;# 
   795  0199                     	;# 
   796  0199                     	;# 
   797  019A                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019D                     	;# 
   807  019E                     	;# 
   808  019E                     	;# 
   809  019F                     	;# 
   810  019F                     	;# 
   811  020D                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  0219                     	;# 
   828  021A                     	;# 
   829  021B                     	;# 
   830  021C                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  028C                     	;# 
   835  028D                     	;# 
   836  0291                     	;# 
   837  0291                     	;# 
   838  0292                     	;# 
   839  0293                     	;# 
   840  0294                     	;# 
   841  0295                     	;# 
   842  0295                     	;# 
   843  0296                     	;# 
   844  0298                     	;# 
   845  0298                     	;# 
   846  0299                     	;# 
   847  029A                     	;# 
   848  029B                     	;# 
   849  029C                     	;# 
   850  029C                     	;# 
   851  029D                     	;# 
   852  029E                     	;# 
   853  029F                     	;# 
   854  030C                     	;# 
   855  030D                     	;# 
   856  0311                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0314                     	;# 
   861  0315                     	;# 
   862  0315                     	;# 
   863  0316                     	;# 
   864  0318                     	;# 
   865  0318                     	;# 
   866  0319                     	;# 
   867  031A                     	;# 
   868  031C                     	;# 
   869  031C                     	;# 
   870  031D                     	;# 
   871  031E                     	;# 
   872  038C                     	;# 
   873  038D                     	;# 
   874  0394                     	;# 
   875  0395                     	;# 
   876  0396                     	;# 
   877  040C                     	;# 
   878  040D                     	;# 
   879  0415                     	;# 
   880  0416                     	;# 
   881  0417                     	;# 
   882  041C                     	;# 
   883  041D                     	;# 
   884  041E                     	;# 
   885  048D                     	;# 
   886  0491                     	;# 
   887  0492                     	;# 
   888  0493                     	;# 
   889  0493                     	;# 
   890  0494                     	;# 
   891  0495                     	;# 
   892  0496                     	;# 
   893  0497                     	;# 
   894  0791                     	;# 
   895  0792                     	;# 
   896  0793                     	;# 
   897  0794                     	;# 
   898  0795                     	;# 
   899  0798                     	;# 
   900  0799                     	;# 
   901  079A                     	;# 
   902  079B                     	;# 
   903  079C                     	;# 
   904  079D                     	;# 
   905  07A0                     	;# 
   906  07A1                     	;# 
   907  07A2                     	;# 
   908  07A3                     	;# 
   909  07A4                     	;# 
   910  07A5                     	;# 
   911  07A6                     	;# 
   912  07A7                     	;# 
   913  07A8                     	;# 
   914  07A9                     	;# 
   915  07AA                     	;# 
   916  07AB                     	;# 
   917  07AC                     	;# 
   918  07AD                     	;# 
   919  07AE                     	;# 
   920  07AF                     	;# 
   921  07B0                     	;# 
   922  07B1                     	;# 
   923  07B2                     	;# 
   924  07B3                     	;# 
   925  07B4                     	;# 
   926  07B5                     	;# 
   927  07B6                     	;# 
   928  07B7                     	;# 
   929  0FE4                     	;# 
   930  0FE5                     	;# 
   931  0FE6                     	;# 
   932  0FE7                     	;# 
   933  0FE8                     	;# 
   934  0FE9                     	;# 
   935  0FEA                     	;# 
   936  0FEB                     	;# 
   937  0FED                     	;# 
   938  0FEE                     	;# 
   939  0FEF                     	;# 
   940  0000                     	;# 
   941  0001                     	;# 
   942  0002                     	;# 
   943  0003                     	;# 
   944  0004                     	;# 
   945  0005                     	;# 
   946  0006                     	;# 
   947  0007                     	;# 
   948  0008                     	;# 
   949  0009                     	;# 
   950  000A                     	;# 
   951  000B                     	;# 
   952  000C                     	;# 
   953  000D                     	;# 
   954  000E                     	;# 
   955  000F                     	;# 
   956  0010                     	;# 
   957  0011                     	;# 
   958  0012                     	;# 
   959  0013                     	;# 
   960  0014                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0016                     	;# 
   964  0017                     	;# 
   965  0018                     	;# 
   966  0019                     	;# 
   967  001A                     	;# 
   968  001B                     	;# 
   969  001C                     	;# 
   970  001E                     	;# 
   971  001F                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  008F                     	;# 
   976  0090                     	;# 
   977  0091                     	;# 
   978  0092                     	;# 
   979  0093                     	;# 
   980  0094                     	;# 
   981  0095                     	;# 
   982  0096                     	;# 
   983  0097                     	;# 
   984  0098                     	;# 
   985  0099                     	;# 
   986  009A                     	;# 
   987  009B                     	;# 
   988  009B                     	;# 
   989  009C                     	;# 
   990  009D                     	;# 
   991  009E                     	;# 
   992  010C                     	;# 
   993  010D                     	;# 
   994  010E                     	;# 
   995  010F                     	;# 
   996  0110                     	;# 
   997  0111                     	;# 
   998  0112                     	;# 
   999  0113                     	;# 
  1000  0114                     	;# 
  1001  0115                     	;# 
  1002  0116                     	;# 
  1003  0117                     	;# 
  1004  0118                     	;# 
  1005  0119                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011D                     	;# 
  1009  011E                     	;# 
  1010  011F                     	;# 
  1011  018C                     	;# 
  1012  0190                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0193                     	;# 
  1019  0194                     	;# 
  1020  0195                     	;# 
  1021  0196                     	;# 
  1022  0199                     	;# 
  1023  0199                     	;# 
  1024  019A                     	;# 
  1025  019A                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019E                     	;# 
  1036  019F                     	;# 
  1037  019F                     	;# 
  1038  020D                     	;# 
  1039  0211                     	;# 
  1040  0211                     	;# 
  1041  0212                     	;# 
  1042  0212                     	;# 
  1043  0213                     	;# 
  1044  0213                     	;# 
  1045  0214                     	;# 
  1046  0214                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0216                     	;# 
  1051  0216                     	;# 
  1052  0217                     	;# 
  1053  0217                     	;# 
  1054  0219                     	;# 
  1055  021A                     	;# 
  1056  021B                     	;# 
  1057  021C                     	;# 
  1058  021D                     	;# 
  1059  021E                     	;# 
  1060  021F                     	;# 
  1061  028C                     	;# 
  1062  028D                     	;# 
  1063  0291                     	;# 
  1064  0291                     	;# 
  1065  0292                     	;# 
  1066  0293                     	;# 
  1067  0294                     	;# 
  1068  0295                     	;# 
  1069  0295                     	;# 
  1070  0296                     	;# 
  1071  0298                     	;# 
  1072  0298                     	;# 
  1073  0299                     	;# 
  1074  029A                     	;# 
  1075  029B                     	;# 
  1076  029C                     	;# 
  1077  029C                     	;# 
  1078  029D                     	;# 
  1079  029E                     	;# 
  1080  029F                     	;# 
  1081  030C                     	;# 
  1082  030D                     	;# 
  1083  0311                     	;# 
  1084  0311                     	;# 
  1085  0312                     	;# 
  1086  0313                     	;# 
  1087  0314                     	;# 
  1088  0315                     	;# 
  1089  0315                     	;# 
  1090  0316                     	;# 
  1091  0318                     	;# 
  1092  0318                     	;# 
  1093  0319                     	;# 
  1094  031A                     	;# 
  1095  031C                     	;# 
  1096  031C                     	;# 
  1097  031D                     	;# 
  1098  031E                     	;# 
  1099  038C                     	;# 
  1100  038D                     	;# 
  1101  0394                     	;# 
  1102  0395                     	;# 
  1103  0396                     	;# 
  1104  040C                     	;# 
  1105  040D                     	;# 
  1106  0415                     	;# 
  1107  0416                     	;# 
  1108  0417                     	;# 
  1109  041C                     	;# 
  1110  041D                     	;# 
  1111  041E                     	;# 
  1112  048D                     	;# 
  1113  0491                     	;# 
  1114  0492                     	;# 
  1115  0493                     	;# 
  1116  0493                     	;# 
  1117  0494                     	;# 
  1118  0495                     	;# 
  1119  0496                     	;# 
  1120  0497                     	;# 
  1121  0791                     	;# 
  1122  0792                     	;# 
  1123  0793                     	;# 
  1124  0794                     	;# 
  1125  0795                     	;# 
  1126  0798                     	;# 
  1127  0799                     	;# 
  1128  079A                     	;# 
  1129  079B                     	;# 
  1130  079C                     	;# 
  1131  079D                     	;# 
  1132  07A0                     	;# 
  1133  07A1                     	;# 
  1134  07A2                     	;# 
  1135  07A3                     	;# 
  1136  07A4                     	;# 
  1137  07A5                     	;# 
  1138  07A6                     	;# 
  1139  07A7                     	;# 
  1140  07A8                     	;# 
  1141  07A9                     	;# 
  1142  07AA                     	;# 
  1143  07AB                     	;# 
  1144  07AC                     	;# 
  1145  07AD                     	;# 
  1146  07AE                     	;# 
  1147  07AF                     	;# 
  1148  07B0                     	;# 
  1149  07B1                     	;# 
  1150  07B2                     	;# 
  1151  07B3                     	;# 
  1152  07B4                     	;# 
  1153  07B5                     	;# 
  1154  07B6                     	;# 
  1155  07B7                     	;# 
  1156  0FE4                     	;# 
  1157  0FE5                     	;# 
  1158  0FE6                     	;# 
  1159  0FE7                     	;# 
  1160  0FE8                     	;# 
  1161  0FE9                     	;# 
  1162  0FEA                     	;# 
  1163  0FEB                     	;# 
  1164  0FED                     	;# 
  1165  0FEE                     	;# 
  1166  0FEF                     	;# 
  1167  0000                     	;# 
  1168  0001                     	;# 
  1169  0002                     	;# 
  1170  0003                     	;# 
  1171  0004                     	;# 
  1172  0005                     	;# 
  1173  0006                     	;# 
  1174  0007                     	;# 
  1175  0008                     	;# 
  1176  0009                     	;# 
  1177  000A                     	;# 
  1178  000B                     	;# 
  1179  000C                     	;# 
  1180  000D                     	;# 
  1181  000E                     	;# 
  1182  000F                     	;# 
  1183  0010                     	;# 
  1184  0011                     	;# 
  1185  0012                     	;# 
  1186  0013                     	;# 
  1187  0014                     	;# 
  1188  0015                     	;# 
  1189  0016                     	;# 
  1190  0016                     	;# 
  1191  0017                     	;# 
  1192  0018                     	;# 
  1193  0019                     	;# 
  1194  001A                     	;# 
  1195  001B                     	;# 
  1196  001C                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  008F                     	;# 
  1203  0090                     	;# 
  1204  0091                     	;# 
  1205  0092                     	;# 
  1206  0093                     	;# 
  1207  0094                     	;# 
  1208  0095                     	;# 
  1209  0096                     	;# 
  1210  0097                     	;# 
  1211  0098                     	;# 
  1212  0099                     	;# 
  1213  009A                     	;# 
  1214  009B                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  010F                     	;# 
  1223  0110                     	;# 
  1224  0111                     	;# 
  1225  0112                     	;# 
  1226  0113                     	;# 
  1227  0114                     	;# 
  1228  0115                     	;# 
  1229  0116                     	;# 
  1230  0117                     	;# 
  1231  0118                     	;# 
  1232  0119                     	;# 
  1233  011A                     	;# 
  1234  011B                     	;# 
  1235  011D                     	;# 
  1236  011E                     	;# 
  1237  011F                     	;# 
  1238  018C                     	;# 
  1239  0190                     	;# 
  1240  0191                     	;# 
  1241  0191                     	;# 
  1242  0192                     	;# 
  1243  0193                     	;# 
  1244  0193                     	;# 
  1245  0193                     	;# 
  1246  0194                     	;# 
  1247  0195                     	;# 
  1248  0196                     	;# 
  1249  0199                     	;# 
  1250  0199                     	;# 
  1251  019A                     	;# 
  1252  019A                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  020D                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0214                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  028C                     	;# 
  1289  028D                     	;# 
  1290  0291                     	;# 
  1291  0291                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0298                     	;# 
  1299  0298                     	;# 
  1300  0299                     	;# 
  1301  029A                     	;# 
  1302  029B                     	;# 
  1303  029C                     	;# 
  1304  029C                     	;# 
  1305  029D                     	;# 
  1306  029E                     	;# 
  1307  029F                     	;# 
  1308  030C                     	;# 
  1309  030D                     	;# 
  1310  0311                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0315                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  031C                     	;# 
  1323  031C                     	;# 
  1324  031D                     	;# 
  1325  031E                     	;# 
  1326  038C                     	;# 
  1327  038D                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  040C                     	;# 
  1332  040D                     	;# 
  1333  0415                     	;# 
  1334  0416                     	;# 
  1335  0417                     	;# 
  1336  041C                     	;# 
  1337  041D                     	;# 
  1338  041E                     	;# 
  1339  048D                     	;# 
  1340  0491                     	;# 
  1341  0492                     	;# 
  1342  0493                     	;# 
  1343  0493                     	;# 
  1344  0494                     	;# 
  1345  0495                     	;# 
  1346  0496                     	;# 
  1347  0497                     	;# 
  1348  0791                     	;# 
  1349  0792                     	;# 
  1350  0793                     	;# 
  1351  0794                     	;# 
  1352  0795                     	;# 
  1353  0798                     	;# 
  1354  0799                     	;# 
  1355  079A                     	;# 
  1356  079B                     	;# 
  1357  079C                     	;# 
  1358  079D                     	;# 
  1359  07A0                     	;# 
  1360  07A1                     	;# 
  1361  07A2                     	;# 
  1362  07A3                     	;# 
  1363  07A4                     	;# 
  1364  07A5                     	;# 
  1365  07A6                     	;# 
  1366  07A7                     	;# 
  1367  07A8                     	;# 
  1368  07A9                     	;# 
  1369  07AA                     	;# 
  1370  07AB                     	;# 
  1371  07AC                     	;# 
  1372  07AD                     	;# 
  1373  07AE                     	;# 
  1374  07AF                     	;# 
  1375  07B0                     	;# 
  1376  07B1                     	;# 
  1377  07B2                     	;# 
  1378  07B3                     	;# 
  1379  07B4                     	;# 
  1380  07B5                     	;# 
  1381  07B6                     	;# 
  1382  07B7                     	;# 
  1383  0FE4                     	;# 
  1384  0FE5                     	;# 
  1385  0FE6                     	;# 
  1386  0FE7                     	;# 
  1387  0FE8                     	;# 
  1388  0FE9                     	;# 
  1389  0FEA                     	;# 
  1390  0FEB                     	;# 
  1391  0FED                     	;# 
  1392  0FEE                     	;# 
  1393  0FEF                     	;_delay_time
  1394                           
  1395                           	psect	nvBANK0
  1396  0048                     __pnvBANK0:	
  1397  0048                     _eusart1TxBufferRemaining:	
  1398  0048                     	ds	1
  1399  0049                     _eusart2TxBufferRemaining:	
  1400  0049                     	ds	1
  1401  000B                     _INTCONbits	set	11
  1402  0011                     _PIR1bits	set	17
  1403  0014                     _PIR4bits	set	20
  1404  0095                     _OPTION_REGbits	set	149
  1405  0099                     _OSCCON	set	153
  1406  009A                     _OSCSTAT	set	154
  1407  0098                     _OSCTUNE	set	152
  1408  0091                     _PIE1bits	set	145
  1409  0094                     _PIE4bits	set	148
  1410  008C                     _TRISA	set	140
  1411  008D                     _TRISB	set	141
  1412  008E                     _TRISC	set	142
  1413  008F                     _TRISD	set	143
  1414  0090                     _TRISE	set	144
  1415  011D                     _APFCON	set	285
  1416  010C                     _LATA	set	268
  1417  010D                     _LATB	set	269
  1418  010E                     _LATC	set	270
  1419  010F                     _LATD	set	271
  1420  0110                     _LATE	set	272
  1421  0869                     _LATB1	set	2153
  1422  086A                     _LATB2	set	2154
  1423  086B                     _LATB3	set	2155
  1424  086C                     _LATB4	set	2156
  1425  086D                     _LATB5	set	2157
  1426  086F                     _LATB7	set	2159
  1427  0871                     _LATC1	set	2161
  1428  0878                     _LATD0	set	2168
  1429  0879                     _LATD1	set	2169
  1430  087A                     _LATD2	set	2170
  1431  087B                     _LATD3	set	2171
  1432  087C                     _LATD4	set	2172
  1433  087D                     _LATD5	set	2173
  1434  087E                     _LATD6	set	2174
  1435  087F                     _LATD7	set	2175
  1436  0880                     _LATE0	set	2176
  1437  0881                     _LATE1	set	2177
  1438  0882                     _LATE2	set	2178
  1439  0883                     _LATE3	set	2179
  1440  0884                     _LATE4	set	2180
  1441  0885                     _LATE5	set	2181
  1442  0886                     _LATE6	set	2182
  1443  0887                     _LATE7	set	2183
  1444  018C                     _ANSELA	set	396
  1445  0190                     _ANSELE	set	400
  1446  019F                     _BAUD1CON	set	415
  1447  0199                     _RC1REG	set	409
  1448  019D                     _RC1STA	set	413
  1449  019D                     _RC1STAbits	set	413
  1450  019C                     _SP1BRGH	set	412
  1451  019B                     _SP1BRGL	set	411
  1452  019A                     _TX1REG	set	410
  1453  019E                     _TX1STA	set	414
  1454  020D                     _WPUB	set	525
  1455  030C                     _TRISF	set	780
  1456  030D                     _TRISG	set	781
  1457  038C                     _LATF	set	908
  1458  038D                     _LATG	set	909
  1459  1CB0                     _IOCBF0	set	7344
  1460  1CA8                     _IOCBN0	set	7336
  1461  1C60                     _LATF0	set	7264
  1462  1C61                     _LATF1	set	7265
  1463  1C62                     _LATF2	set	7266
  1464  1C63                     _LATF3	set	7267
  1465  1C64                     _LATF4	set	7268
  1466  1C65                     _LATF5	set	7269
  1467  1C66                     _LATF6	set	7270
  1468  1C67                     _LATF7	set	7271
  1469  040C                     _ANSELF	set	1036
  1470  040D                     _ANSELG	set	1037
  1471  0497                     _BAUD2CON	set	1175
  1472  0491                     _RC2REG	set	1169
  1473  0495                     _RC2STA	set	1173
  1474  0495                     _RC2STAbits	set	1173
  1475  0494                     _SP2BRGH	set	1172
  1476  0493                     _SP2BRGL	set	1171
  1477  0492                     _TX2REG	set	1170
  1478  0496                     _TX2STA	set	1174
  1479  048D                     _WPUG	set	1165
  1480                           
  1481                           ; #config settings
  1482  0000                     
  1483                           	psect	cinit
  1484  003E                     start_initialization:	
  1485  003E                     __initialization:		;BIGRAM
  1486                           
  1487                           ; Clear objects allocated to BIGRAM
  1488  003E  3030               	movlw	low (0+9008)
  1489  003F  0084               	movwf	4
  1490  0040  3023               	movlw	high (0+9008)
  1491  0041  0085               	movwf	5
  1492  0042  30C0               	movlw	192
  1493  0043  00FE               	movwf	btemp
  1494  0044  3000               	movlw	0
  1495  0045  00FF               	movwf	btemp+1
  1496  0046  3183  2333  3180   	fcall	clear_ram0
  1497                           
  1498                           ; Clear objects allocated to COMMON
  1499  0049  01F8               	clrf	__pbssCOMMON& (0+127)
  1500  004A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1501  004B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1502  004C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1503                           
  1504                           ; Clear objects allocated to BANK0
  1505  004D  3020               	movlw	low __pbssBANK0
  1506  004E  0084               	movwf	4
  1507  004F  3000               	movlw	high __pbssBANK0
  1508  0050  0085               	movwf	5
  1509  0051  3028               	movlw	40
  1510  0052  00FE               	movwf	btemp
  1511  0053  3000               	movlw	0
  1512  0054  00FF               	movwf	btemp+1
  1513  0055  3183  2333         	fcall	clear_ram0
  1514  0057                     end_of_initialization:	
  1515                           ;End of C runtime variable initialization code
  1516                           
  1517  0057                     __end_of__initialization:	
  1518  0057  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1519  0058  0020               	movlb	0
  1520  0059  3182  2A5F         	ljmp	_main	;jump to C main() function
  1521                           
  1522                           	psect	bssCOMMON
  1523  0078                     __pbssCOMMON:	
  1524  0078                     _delay_ptr:	
  1525  0078                     	ds	1
  1526  0079                     _eusart2RxHead:	
  1527  0079                     	ds	1
  1528  007A                     _eusart2TxHead:	
  1529  007A                     	ds	1
  1530  007B                     _eusart2TxTail:	
  1531  007B                     	ds	1
  1532                           
  1533                           	psect	bssBANK0
  1534  0020                     __pbssBANK0:	
  1535  0020                     _eusart1RxBuffer:	
  1536  0020                     	ds	8
  1537  0028                     _eusart1TxBuffer:	
  1538  0028                     	ds	8
  1539  0030                     _eusart2RxBuffer:	
  1540  0030                     	ds	8
  1541  0038                     _eusart2TxBuffer:	
  1542  0038                     	ds	8
  1543  0040                     _current_column_position:	
  1544  0040                     	ds	1
  1545  0041                     _eusart1RxCount:	
  1546  0041                     	ds	1
  1547  0042                     _eusart1RxHead:	
  1548  0042                     	ds	1
  1549  0043                     _eusart1RxTail:	
  1550  0043                     	ds	1
  1551  0044                     _eusart1TxHead:	
  1552  0044                     	ds	1
  1553  0045                     _eusart1TxTail:	
  1554  0045                     	ds	1
  1555  0046                     _eusart2RxCount:	
  1556  0046                     	ds	1
  1557  0047                     _eusart2RxTail:	
  1558  0047                     	ds	1
  1559                           
  1560                           	psect	clrtext
  1561  0333                     clear_ram0:	
  1562                           ;	Called with FSR0 containing the base address, and
  1563                           ;	btemp/btemp+1 has the size to clear
  1564                           
  1565  0333  0064               	clrwdt	;clear the watchdog before getting into this loop
  1566  0334                     clrloop0:	
  1567  0334  0180               	clrf	0	;clear RAM location pointed to by FSR
  1568  0335  3101               	addfsr 0,1
  1569  0336  3001               	movlw	1
  1570  0337  02FE               	subwf	126,f
  1571  0338  3000               	movlw	0
  1572  0339  3BFF               	subwfb	127,f
  1573  033A  087F               	movf	127,w
  1574  033B  047E               	iorwf	126,w
  1575  033C  1903               	btfsc	3,2
  1576  033D  3400               	retlw	0	;all done for this memory range, return
  1577  033E  2B34               	goto	clrloop0	;have we reached the end yet?
  1578                           
  1579                           	psect	cstackCOMMON
  1580  0070                     __pcstackCOMMON:	
  1581  0070                     ?_OSCILLATOR_Initialize:	
  1582  0070                     ?_strobe_all:	
  1583                           ; 0 bytes @ 0x0
  1584                           
  1585  0070                     ?_big_switch_rows:	
  1586                           ; 0 bytes @ 0x0
  1587                           
  1588  0070                     ?_big_switch_columns:	
  1589                           ; 0 bytes @ 0x0
  1590                           
  1591  0070                     ?_my_delay:	
  1592                           ; 0 bytes @ 0x0
  1593                           
  1594  0070                     ?_EUSART2_Initialize:	
  1595                           ; 0 bytes @ 0x0
  1596                           
  1597  0070                     ?_EUSART2_Transmit_ISR:	
  1598                           ; 0 bytes @ 0x0
  1599                           
  1600  0070                     ??_EUSART2_Transmit_ISR:	
  1601                           ; 0 bytes @ 0x0
  1602                           
  1603  0070                     ?_EUSART2_Receive_ISR:	
  1604                           ; 0 bytes @ 0x0
  1605                           
  1606  0070                     ??_EUSART2_Receive_ISR:	
  1607                           ; 0 bytes @ 0x0
  1608                           
  1609  0070                     ?_EUSART1_Initialize:	
  1610                           ; 0 bytes @ 0x0
  1611                           
  1612  0070                     ?_EUSART1_Transmit_ISR:	
  1613                           ; 0 bytes @ 0x0
  1614                           
  1615  0070                     ??_EUSART1_Transmit_ISR:	
  1616                           ; 0 bytes @ 0x0
  1617                           
  1618  0070                     ?_EUSART1_Receive_ISR:	
  1619                           ; 0 bytes @ 0x0
  1620                           
  1621  0070                     ??_EUSART1_Receive_ISR:	
  1622                           ; 0 bytes @ 0x0
  1623                           
  1624  0070                     ?_PIN_MANAGER_Initialize:	
  1625                           ; 0 bytes @ 0x0
  1626                           
  1627  0070                     ?_PIN_MANAGER_IOC:	
  1628                           ; 0 bytes @ 0x0
  1629                           
  1630  0070                     ??_PIN_MANAGER_IOC:	
  1631                           ; 0 bytes @ 0x0
  1632                           
  1633  0070                     ?_INTERRUPT_InterruptManager:	
  1634                           ; 0 bytes @ 0x0
  1635                           
  1636  0070                     ?_SYSTEM_Initialize:	
  1637                           ; 0 bytes @ 0x0
  1638                           
  1639  0070                     ?_main:	
  1640                           ; 0 bytes @ 0x0
  1641                           
  1642  0070                     my_delay@dly:	
  1643                           ; 0 bytes @ 0x0
  1644                           
  1645                           
  1646                           ; 1 bytes @ 0x0
  1647  0070                     	ds	1
  1648  0071                     ??_INTERRUPT_InterruptManager:	
  1649                           
  1650                           ; 0 bytes @ 0x1
  1651  0071                     	ds	1
  1652  0072                     ??_OSCILLATOR_Initialize:	
  1653  0072                     ??_my_delay:	
  1654                           ; 0 bytes @ 0x2
  1655                           
  1656  0072                     ??_EUSART2_Initialize:	
  1657                           ; 0 bytes @ 0x2
  1658                           
  1659  0072                     ??_EUSART1_Initialize:	
  1660                           ; 0 bytes @ 0x2
  1661                           
  1662  0072                     ??_PIN_MANAGER_Initialize:	
  1663                           ; 0 bytes @ 0x2
  1664                           
  1665                           
  1666                           ; 0 bytes @ 0x2
  1667  0072                     	ds	1
  1668  0073                     ??_big_switch_columns:	
  1669  0073                     ??_SYSTEM_Initialize:	
  1670                           ; 0 bytes @ 0x3
  1671                           
  1672                           
  1673                           ; 0 bytes @ 0x3
  1674  0073                     	ds	1
  1675  0074                     ??_big_switch_rows:	
  1676  0074                     big_switch_rows@pos:	
  1677                           ; 0 bytes @ 0x4
  1678                           
  1679                           
  1680                           ; 1 bytes @ 0x4
  1681  0074                     	ds	1
  1682  0075                     ??_strobe_all:	
  1683                           
  1684                           ; 0 bytes @ 0x5
  1685  0075                     	ds	1
  1686  0076                     strobe_all@x:	
  1687                           
  1688                           ; 1 bytes @ 0x6
  1689  0076                     	ds	1
  1690  0077                     main@x:	
  1691                           
  1692                           ; 1 bytes @ 0x7
  1693  0077                     	ds	1
  1694                           
  1695                           	psect	cstackBANK0
  1696  004A                     __pcstackBANK0:	
  1697  004A                     ??_main:	
  1698                           
  1699                           ; 0 bytes @ 0x0
  1700  004A                     	ds	2
  1701                           
  1702                           	psect	maintext
  1703  025F                     __pmaintext:	
  1704 ;;
  1705 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1706 ;;
  1707 ;; *************** function _main *****************
  1708 ;; Defined at:
  1709 ;;		line 63 in file "main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  x               1    7[COMMON] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;		None               void
  1716 ;; Registers used:
  1717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : B1F/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;Total ram usage:        3 bytes
  1728 ;; Hardware stack levels required when called:    6
  1729 ;; This function calls:
  1730 ;;		_SYSTEM_Initialize
  1731 ;;		_strobe_all
  1732 ;; This function is called by:
  1733 ;;		Startup code after reset
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _main
  1739  025F                     _main:	
  1740                           
  1741                           ;main.c: 65: unsigned char x;
  1742                           ;main.c: 67: SYSTEM_Initialize();
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1746  025F  3183  233F  3182   	fcall	_SYSTEM_Initialize
  1747                           
  1748                           ;main.c: 76: for(x=0; x<192; x++)
  1749  0262  01F7               	clrf	main@x
  1750  0263  30C0               	movlw	192
  1751  0264  0277               	subwf	main@x,w
  1752  0265  1803               	btfsc	3,0
  1753  0266  2A7C               	goto	l1574
  1754  0267                     l1568:	
  1755                           
  1756                           ;main.c: 77: delay_time[x] = 100;
  1757  0267  0877               	movf	main@x,w
  1758  0268  3E30               	addlw	48
  1759  0269  0020               	movlb	0	; select bank0
  1760  026A  00CA               	movwf	??_main
  1761  026B  01CB               	clrf	??_main+1
  1762  026C  3023               	movlw	35
  1763  026D  3DCB               	addwfc	??_main+1,f
  1764  026E  084A               	movf	??_main,w
  1765  026F  0086               	movwf	6
  1766  0270  084B               	movf	??_main+1,w
  1767  0271  0087               	movwf	7
  1768  0272  3064               	movlw	100
  1769  0273  0081               	movwf	1
  1770  0274  3001               	movlw	1
  1771  0275  00CA               	movwf	??_main
  1772  0276  084A               	movf	??_main,w
  1773  0277  07F7               	addwf	main@x,f
  1774  0278  30C0               	movlw	192
  1775  0279  0277               	subwf	main@x,w
  1776  027A  1C03               	skipc
  1777  027B  2A67               	goto	l1568
  1778  027C                     l1574:	
  1779                           ;main.c: 79: while (1)
  1780                           
  1781                           
  1782                           ;main.c: 80: {
  1783                           ;main.c: 81: strobe_all();
  1784  027C  3183  2324  3182   	fcall	_strobe_all
  1785  027F  2A7C               	goto	l1574
  1786  0280                     __end_of_main:	
  1787                           
  1788                           	psect	text1
  1789  0324                     __ptext1:	
  1790 ;; *************** function _strobe_all *****************
  1791 ;; Defined at:
  1792 ;;		line 86 in file "main.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  x               1    6[COMMON] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;		None               void
  1799 ;; Registers used:
  1800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1810 ;;Total ram usage:        2 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    5
  1813 ;; This function calls:
  1814 ;;		_big_switch_rows
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _strobe_all
  1822  0324                     _strobe_all:	
  1823                           
  1824                           ;main.c: 88: unsigned char x;
  1825                           ;main.c: 90: delay_ptr=0;
  1826                           
  1827                           ;incstack = 0
  1828                           ; Regs used in _strobe_all: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1829  0324  01F8               	clrf	_delay_ptr
  1830                           
  1831                           ;main.c: 91: x=0x80;
  1832  0325  3080               	movlw	128
  1833  0326  00F5               	movwf	??_strobe_all
  1834  0327  0875               	movf	??_strobe_all,w
  1835  0328  00F6               	movwf	strobe_all@x
  1836  0329                     l1252:	
  1837                           ;main.c: 92: while(x)
  1838                           
  1839  0329  0876               	movf	strobe_all@x,w
  1840  032A  1903               	btfsc	3,2
  1841  032B  0008               	return
  1842                           
  1843                           ;main.c: 93: {
  1844                           ;main.c: 94: big_switch_rows(x);
  1845  032C  0876               	movf	strobe_all@x,w
  1846  032D  3182  222E  3183   	fcall	_big_switch_rows
  1847                           
  1848                           ;main.c: 95: x >>= 1;
  1849  0330  1003               	clrc
  1850  0331  0CF6               	rrf	strobe_all@x,f
  1851  0332  2B29               	goto	l1252
  1852  0333                     __end_of_strobe_all:	
  1853                           
  1854                           	psect	text2
  1855  022E                     __ptext2:	
  1856 ;; *************** function _big_switch_rows *****************
  1857 ;; Defined at:
  1858 ;;		line 102 in file "main.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  pos             1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  pos             1    4[COMMON] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;		None               void
  1865 ;; Registers used:
  1866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    4
  1879 ;; This function calls:
  1880 ;;		_big_switch_columns
  1881 ;; This function is called by:
  1882 ;;		_strobe_all
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _big_switch_rows
  1888  022E                     _big_switch_rows:	
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _big_switch_rows: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1892                           ;big_switch_rows@pos stored from wreg
  1893  022E  00F4               	movwf	big_switch_rows@pos
  1894                           
  1895                           ;main.c: 104: if(pos & 0x80)
  1896  022F  1FF4               	btfss	big_switch_rows@pos,7
  1897  0230  2A35               	goto	l1168
  1898                           
  1899                           ;main.c: 105: {
  1900                           ;main.c: 106: do { LATC1 = 0; } while(0);
  1901  0231  0022               	movlb	2	; select bank2
  1902  0232  108E               	bcf	14,1	;volatile
  1903                           
  1904                           ;main.c: 107: do { LATB1 = 1; } while(0);
  1905  0233  148D               	bsf	13,1	;volatile
  1906                           
  1907                           ;main.c: 108: }
  1908  0234  2A5C               	goto	l1182
  1909  0235                     l1168:	
  1910                           
  1911                           ;main.c: 109: else if(pos & 0x40)
  1912  0235  1F74               	btfss	big_switch_rows@pos,6
  1913  0236  2A3B               	goto	l1170
  1914                           
  1915                           ;main.c: 110: {
  1916                           ;main.c: 111: do { LATB1 = 0; } while(0);
  1917  0237  0022               	movlb	2	; select bank2
  1918  0238  108D               	bcf	13,1	;volatile
  1919                           
  1920                           ;main.c: 112: do { LATB2 = 1; } while(0);
  1921  0239  150D               	bsf	13,2	;volatile
  1922                           
  1923                           ;main.c: 113: }
  1924  023A  2A5C               	goto	l1182
  1925  023B                     l1170:	
  1926                           
  1927                           ;main.c: 114: else if(pos & 0x20)
  1928  023B  1EF4               	btfss	big_switch_rows@pos,5
  1929  023C  2A41               	goto	l1172
  1930                           
  1931                           ;main.c: 115: {
  1932                           ;main.c: 116: do { LATB2 = 0; } while(0);
  1933  023D  0022               	movlb	2	; select bank2
  1934  023E  110D               	bcf	13,2	;volatile
  1935                           
  1936                           ;main.c: 117: do { LATB3 = 1; } while(0);
  1937  023F  158D               	bsf	13,3	;volatile
  1938                           
  1939                           ;main.c: 118: }
  1940  0240  2A5C               	goto	l1182
  1941  0241                     l1172:	
  1942                           
  1943                           ;main.c: 119: else if(pos & 0x10)
  1944  0241  1E74               	btfss	big_switch_rows@pos,4
  1945  0242  2A47               	goto	l1174
  1946                           
  1947                           ;main.c: 120: {
  1948                           ;main.c: 121: do { LATB3 = 0; } while(0);
  1949  0243  0022               	movlb	2	; select bank2
  1950  0244  118D               	bcf	13,3	;volatile
  1951                           
  1952                           ;main.c: 122: do { LATB4 = 1; } while(0);
  1953  0245  160D               	bsf	13,4	;volatile
  1954                           
  1955                           ;main.c: 123: }
  1956  0246  2A5C               	goto	l1182
  1957  0247                     l1174:	
  1958                           
  1959                           ;main.c: 124: else if(pos & 0x08)
  1960  0247  1DF4               	btfss	big_switch_rows@pos,3
  1961  0248  2A4D               	goto	l1176
  1962                           
  1963                           ;main.c: 125: {
  1964                           ;main.c: 126: do { LATB4 = 0; } while(0);
  1965  0249  0022               	movlb	2	; select bank2
  1966  024A  120D               	bcf	13,4	;volatile
  1967                           
  1968                           ;main.c: 127: do { LATB5 = 1; } while(0);
  1969  024B  168D               	bsf	13,5	;volatile
  1970                           
  1971                           ;main.c: 128: }
  1972  024C  2A5C               	goto	l1182
  1973  024D                     l1176:	
  1974                           
  1975                           ;main.c: 129: else if(pos & 0x04)
  1976  024D  1D74               	btfss	big_switch_rows@pos,2
  1977  024E  2A52               	goto	l1178
  1978                           
  1979                           ;main.c: 130: {
  1980                           ;main.c: 131: do { LATB5 = 0; } while(0);
  1981  024F  0022               	movlb	2	; select bank2
  1982  0250  128D               	bcf	13,5	;volatile
  1983                           
  1984                           ;main.c: 133: }
  1985  0251  2A5C               	goto	l1182
  1986  0252                     l1178:	
  1987                           
  1988                           ;main.c: 134: else if(pos & 0x02)
  1989  0252  1CF4               	btfss	big_switch_rows@pos,1
  1990  0253  2A57               	goto	l1180
  1991                           
  1992                           ;main.c: 135: {
  1993                           ;main.c: 137: do { LATB7 = 1; } while(0);
  1994  0254  0022               	movlb	2	; select bank2
  1995  0255  178D               	bsf	13,7	;volatile
  1996                           
  1997                           ;main.c: 138: }
  1998  0256  2A5C               	goto	l1182
  1999  0257                     l1180:	
  2000                           
  2001                           ;main.c: 139: else if(pos & 0x01)
  2002  0257  1C74               	btfss	big_switch_rows@pos,0
  2003  0258  2A5C               	goto	l1182
  2004                           
  2005                           ;main.c: 140: {
  2006                           ;main.c: 141: do { LATB7 = 0; } while(0);
  2007  0259  0022               	movlb	2	; select bank2
  2008  025A  138D               	bcf	13,7	;volatile
  2009                           
  2010                           ;main.c: 142: do { LATC1 = 1; } while(0);
  2011  025B  148E               	bsf	14,1	;volatile
  2012  025C                     l1182:	
  2013                           
  2014                           ;main.c: 143: }
  2015                           ;main.c: 145: big_switch_columns();
  2016  025C  3180  205B         	fcall	_big_switch_columns
  2017  025E  0008               	return
  2018  025F                     __end_of_big_switch_rows:	
  2019                           
  2020                           	psect	text3
  2021  005B                     __ptext3:	
  2022 ;; *************** function _big_switch_columns *****************
  2023 ;; Defined at:
  2024 ;;		line 150 in file "main.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;		None               void
  2031 ;; Registers used:
  2032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2042 ;;Total ram usage:        1 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    3
  2045 ;; This function calls:
  2046 ;;		_my_delay
  2047 ;; This function is called by:
  2048 ;;		_big_switch_rows
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _big_switch_columns
  2054  005B                     _big_switch_columns:	
  2055                           
  2056                           ;incstack = 0
  2057                           ; Regs used in _big_switch_columns: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2058                           ;main.c: 152: do { LATF7 = 1; } while(0);
  2059  005B  0027               	movlb	7	; select bank7
  2060  005C  178C               	bsf	12,7	;volatile
  2061                           
  2062                           ;main.c: 153: do { LATD0 = 0; } while(0);
  2063  005D  0022               	movlb	2	; select bank2
  2064  005E  100F               	bcf	15,0	;volatile
  2065                           
  2066                           ;main.c: 155: my_delay(delay_time[delay_ptr++]);
  2067  005F  0878               	movf	_delay_ptr,w
  2068  0060  3E30               	addlw	48
  2069  0061  0086               	movwf	6
  2070  0062  0187               	clrf	7
  2071  0063  3023               	movlw	35
  2072  0064  3D87               	addwfc	7,f
  2073  0065  0801               	movf	1,w
  2074  0066  3183  2352  3180   	fcall	_my_delay
  2075  0069  3001               	movlw	1
  2076  006A  00F3               	movwf	??_big_switch_columns
  2077  006B  0873               	movf	??_big_switch_columns,w
  2078  006C  07F8               	addwf	_delay_ptr,f
  2079                           
  2080                           ;main.c: 156: do { LATD0 = 1; } while(0);
  2081  006D  0022               	movlb	2	; select bank2
  2082  006E  140F               	bsf	15,0	;volatile
  2083                           
  2084                           ;main.c: 157: do { LATD1 = 0; } while(0);
  2085  006F  108F               	bcf	15,1	;volatile
  2086                           
  2087                           ;main.c: 158: my_delay(delay_time[delay_ptr++]);
  2088  0070  0878               	movf	_delay_ptr,w
  2089  0071  3E30               	addlw	48
  2090  0072  0086               	movwf	6
  2091  0073  0187               	clrf	7
  2092  0074  3023               	movlw	35
  2093  0075  3D87               	addwfc	7,f
  2094  0076  0801               	movf	1,w
  2095  0077  3183  2352  3180   	fcall	_my_delay
  2096  007A  3001               	movlw	1
  2097  007B  00F3               	movwf	??_big_switch_columns
  2098  007C  0873               	movf	??_big_switch_columns,w
  2099  007D  07F8               	addwf	_delay_ptr,f
  2100                           
  2101                           ;main.c: 159: do { LATD1 = 1; } while(0);
  2102  007E  0022               	movlb	2	; select bank2
  2103  007F  148F               	bsf	15,1	;volatile
  2104                           
  2105                           ;main.c: 160: do { LATD2 = 0; } while(0);
  2106  0080  110F               	bcf	15,2	;volatile
  2107                           
  2108                           ;main.c: 161: my_delay(delay_time[delay_ptr++]);
  2109  0081  0878               	movf	_delay_ptr,w
  2110  0082  3E30               	addlw	48
  2111  0083  0086               	movwf	6
  2112  0084  0187               	clrf	7
  2113  0085  3023               	movlw	35
  2114  0086  3D87               	addwfc	7,f
  2115  0087  0801               	movf	1,w
  2116  0088  3183  2352  3180   	fcall	_my_delay
  2117  008B  3001               	movlw	1
  2118  008C  00F3               	movwf	??_big_switch_columns
  2119  008D  0873               	movf	??_big_switch_columns,w
  2120  008E  07F8               	addwf	_delay_ptr,f
  2121                           
  2122                           ;main.c: 162: do { LATD2 = 1; } while(0);
  2123  008F  0022               	movlb	2	; select bank2
  2124  0090  150F               	bsf	15,2	;volatile
  2125                           
  2126                           ;main.c: 163: do { LATD3 = 0; } while(0);
  2127  0091  118F               	bcf	15,3	;volatile
  2128                           
  2129                           ;main.c: 164: my_delay(delay_time[delay_ptr++]);
  2130  0092  0878               	movf	_delay_ptr,w
  2131  0093  3E30               	addlw	48
  2132  0094  0086               	movwf	6
  2133  0095  0187               	clrf	7
  2134  0096  3023               	movlw	35
  2135  0097  3D87               	addwfc	7,f
  2136  0098  0801               	movf	1,w
  2137  0099  3183  2352  3180   	fcall	_my_delay
  2138  009C  3001               	movlw	1
  2139  009D  00F3               	movwf	??_big_switch_columns
  2140  009E  0873               	movf	??_big_switch_columns,w
  2141  009F  07F8               	addwf	_delay_ptr,f
  2142                           
  2143                           ;main.c: 165: do { LATD3 = 1; } while(0);
  2144  00A0  0022               	movlb	2	; select bank2
  2145  00A1  158F               	bsf	15,3	;volatile
  2146                           
  2147                           ;main.c: 166: do { LATD4 = 0; } while(0);
  2148  00A2  120F               	bcf	15,4	;volatile
  2149                           
  2150                           ;main.c: 167: my_delay(delay_time[delay_ptr++]);
  2151  00A3  0878               	movf	_delay_ptr,w
  2152  00A4  3E30               	addlw	48
  2153  00A5  0086               	movwf	6
  2154  00A6  0187               	clrf	7
  2155  00A7  3023               	movlw	35
  2156  00A8  3D87               	addwfc	7,f
  2157  00A9  0801               	movf	1,w
  2158  00AA  3183  2352  3180   	fcall	_my_delay
  2159  00AD  3001               	movlw	1
  2160  00AE  00F3               	movwf	??_big_switch_columns
  2161  00AF  0873               	movf	??_big_switch_columns,w
  2162  00B0  07F8               	addwf	_delay_ptr,f
  2163                           
  2164                           ;main.c: 168: do { LATD4 = 1; } while(0);
  2165  00B1  0022               	movlb	2	; select bank2
  2166  00B2  160F               	bsf	15,4	;volatile
  2167                           
  2168                           ;main.c: 169: do { LATD5 = 0; } while(0);
  2169  00B3  128F               	bcf	15,5	;volatile
  2170                           
  2171                           ;main.c: 170: my_delay(delay_time[delay_ptr++]);
  2172  00B4  0878               	movf	_delay_ptr,w
  2173  00B5  3E30               	addlw	48
  2174  00B6  0086               	movwf	6
  2175  00B7  0187               	clrf	7
  2176  00B8  3023               	movlw	35
  2177  00B9  3D87               	addwfc	7,f
  2178  00BA  0801               	movf	1,w
  2179  00BB  3183  2352  3180   	fcall	_my_delay
  2180  00BE  3001               	movlw	1
  2181  00BF  00F3               	movwf	??_big_switch_columns
  2182  00C0  0873               	movf	??_big_switch_columns,w
  2183  00C1  07F8               	addwf	_delay_ptr,f
  2184                           
  2185                           ;main.c: 171: do { LATD5 = 1; } while(0);
  2186  00C2  0022               	movlb	2	; select bank2
  2187  00C3  168F               	bsf	15,5	;volatile
  2188                           
  2189                           ;main.c: 172: do { LATD6 = 0; } while(0);
  2190  00C4  130F               	bcf	15,6	;volatile
  2191                           
  2192                           ;main.c: 173: my_delay(delay_time[delay_ptr++]);
  2193  00C5  0878               	movf	_delay_ptr,w
  2194  00C6  3E30               	addlw	48
  2195  00C7  0086               	movwf	6
  2196  00C8  0187               	clrf	7
  2197  00C9  3023               	movlw	35
  2198  00CA  3D87               	addwfc	7,f
  2199  00CB  0801               	movf	1,w
  2200  00CC  3183  2352  3180   	fcall	_my_delay
  2201  00CF  3001               	movlw	1
  2202  00D0  00F3               	movwf	??_big_switch_columns
  2203  00D1  0873               	movf	??_big_switch_columns,w
  2204  00D2  07F8               	addwf	_delay_ptr,f
  2205                           
  2206                           ;main.c: 174: do { LATD6 = 1; } while(0);
  2207  00D3  0022               	movlb	2	; select bank2
  2208  00D4  170F               	bsf	15,6	;volatile
  2209                           
  2210                           ;main.c: 175: do { LATD7 = 0; } while(0);
  2211  00D5  138F               	bcf	15,7	;volatile
  2212                           
  2213                           ;main.c: 176: my_delay(delay_time[delay_ptr++]);
  2214  00D6  0878               	movf	_delay_ptr,w
  2215  00D7  3E30               	addlw	48
  2216  00D8  0086               	movwf	6
  2217  00D9  0187               	clrf	7
  2218  00DA  3023               	movlw	35
  2219  00DB  3D87               	addwfc	7,f
  2220  00DC  0801               	movf	1,w
  2221  00DD  3183  2352  3180   	fcall	_my_delay
  2222  00E0  3001               	movlw	1
  2223  00E1  00F3               	movwf	??_big_switch_columns
  2224  00E2  0873               	movf	??_big_switch_columns,w
  2225  00E3  07F8               	addwf	_delay_ptr,f
  2226                           
  2227                           ;main.c: 177: do { LATD7 = 1; } while(0);
  2228  00E4  0022               	movlb	2	; select bank2
  2229  00E5  178F               	bsf	15,7	;volatile
  2230                           
  2231                           ;main.c: 178: do { LATE0 = 0; } while(0);
  2232  00E6  1010               	bcf	16,0	;volatile
  2233                           
  2234                           ;main.c: 179: my_delay(delay_time[delay_ptr++]);
  2235  00E7  0878               	movf	_delay_ptr,w
  2236  00E8  3E30               	addlw	48
  2237  00E9  0086               	movwf	6
  2238  00EA  0187               	clrf	7
  2239  00EB  3023               	movlw	35
  2240  00EC  3D87               	addwfc	7,f
  2241  00ED  0801               	movf	1,w
  2242  00EE  3183  2352  3180   	fcall	_my_delay
  2243  00F1  3001               	movlw	1
  2244  00F2  00F3               	movwf	??_big_switch_columns
  2245  00F3  0873               	movf	??_big_switch_columns,w
  2246  00F4  07F8               	addwf	_delay_ptr,f
  2247                           
  2248                           ;main.c: 180: do { LATE0 = 1; } while(0);
  2249  00F5  0022               	movlb	2	; select bank2
  2250  00F6  1410               	bsf	16,0	;volatile
  2251                           
  2252                           ;main.c: 181: do { LATE1 = 0; } while(0);
  2253  00F7  1090               	bcf	16,1	;volatile
  2254                           
  2255                           ;main.c: 182: my_delay(delay_time[delay_ptr++]);
  2256  00F8  0878               	movf	_delay_ptr,w
  2257  00F9  3E30               	addlw	48
  2258  00FA  0086               	movwf	6
  2259  00FB  0187               	clrf	7
  2260  00FC  3023               	movlw	35
  2261  00FD  3D87               	addwfc	7,f
  2262  00FE  0801               	movf	1,w
  2263  00FF  3183  2352  3180   	fcall	_my_delay
  2264  0102  3001               	movlw	1
  2265  0103  00F3               	movwf	??_big_switch_columns
  2266  0104  0873               	movf	??_big_switch_columns,w
  2267  0105  07F8               	addwf	_delay_ptr,f
  2268                           
  2269                           ;main.c: 183: do { LATE1 = 1; } while(0);
  2270  0106  0022               	movlb	2	; select bank2
  2271  0107  1490               	bsf	16,1	;volatile
  2272                           
  2273                           ;main.c: 184: do { LATE2 = 0; } while(0);
  2274  0108  1110               	bcf	16,2	;volatile
  2275                           
  2276                           ;main.c: 185: my_delay(delay_time[delay_ptr++]);
  2277  0109  0878               	movf	_delay_ptr,w
  2278  010A  3E30               	addlw	48
  2279  010B  0086               	movwf	6
  2280  010C  0187               	clrf	7
  2281  010D  3023               	movlw	35
  2282  010E  3D87               	addwfc	7,f
  2283  010F  0801               	movf	1,w
  2284  0110  3183  2352  3180   	fcall	_my_delay
  2285  0113  3001               	movlw	1
  2286  0114  00F3               	movwf	??_big_switch_columns
  2287  0115  0873               	movf	??_big_switch_columns,w
  2288  0116  07F8               	addwf	_delay_ptr,f
  2289                           
  2290                           ;main.c: 186: do { LATE2 = 1; } while(0);
  2291  0117  0022               	movlb	2	; select bank2
  2292  0118  1510               	bsf	16,2	;volatile
  2293                           
  2294                           ;main.c: 187: do { LATE3 = 0; } while(0);
  2295  0119  1190               	bcf	16,3	;volatile
  2296                           
  2297                           ;main.c: 188: my_delay(delay_time[delay_ptr++]);
  2298  011A  0878               	movf	_delay_ptr,w
  2299  011B  3E30               	addlw	48
  2300  011C  0086               	movwf	6
  2301  011D  0187               	clrf	7
  2302  011E  3023               	movlw	35
  2303  011F  3D87               	addwfc	7,f
  2304  0120  0801               	movf	1,w
  2305  0121  3183  2352  3180   	fcall	_my_delay
  2306  0124  3001               	movlw	1
  2307  0125  00F3               	movwf	??_big_switch_columns
  2308  0126  0873               	movf	??_big_switch_columns,w
  2309  0127  07F8               	addwf	_delay_ptr,f
  2310                           
  2311                           ;main.c: 189: do { LATE3 = 1; } while(0);
  2312  0128  0022               	movlb	2	; select bank2
  2313  0129  1590               	bsf	16,3	;volatile
  2314                           
  2315                           ;main.c: 190: do { LATE4 = 0; } while(0);
  2316  012A  1210               	bcf	16,4	;volatile
  2317                           
  2318                           ;main.c: 191: my_delay(delay_time[delay_ptr++]);
  2319  012B  0878               	movf	_delay_ptr,w
  2320  012C  3E30               	addlw	48
  2321  012D  0086               	movwf	6
  2322  012E  0187               	clrf	7
  2323  012F  3023               	movlw	35
  2324  0130  3D87               	addwfc	7,f
  2325  0131  0801               	movf	1,w
  2326  0132  3183  2352  3180   	fcall	_my_delay
  2327  0135  3001               	movlw	1
  2328  0136  00F3               	movwf	??_big_switch_columns
  2329  0137  0873               	movf	??_big_switch_columns,w
  2330  0138  07F8               	addwf	_delay_ptr,f
  2331                           
  2332                           ;main.c: 192: do { LATE4 = 1; } while(0);
  2333  0139  0022               	movlb	2	; select bank2
  2334  013A  1610               	bsf	16,4	;volatile
  2335                           
  2336                           ;main.c: 193: do { LATE5 = 0; } while(0);
  2337  013B  1290               	bcf	16,5	;volatile
  2338                           
  2339                           ;main.c: 194: my_delay(delay_time[delay_ptr++]);
  2340  013C  0878               	movf	_delay_ptr,w
  2341  013D  3E30               	addlw	48
  2342  013E  0086               	movwf	6
  2343  013F  0187               	clrf	7
  2344  0140  3023               	movlw	35
  2345  0141  3D87               	addwfc	7,f
  2346  0142  0801               	movf	1,w
  2347  0143  3183  2352  3180   	fcall	_my_delay
  2348  0146  3001               	movlw	1
  2349  0147  00F3               	movwf	??_big_switch_columns
  2350  0148  0873               	movf	??_big_switch_columns,w
  2351  0149  07F8               	addwf	_delay_ptr,f
  2352                           
  2353                           ;main.c: 195: do { LATE5 = 1; } while(0);
  2354  014A  0022               	movlb	2	; select bank2
  2355  014B  1690               	bsf	16,5	;volatile
  2356                           
  2357                           ;main.c: 196: do { LATE6 = 0; } while(0);
  2358  014C  1310               	bcf	16,6	;volatile
  2359                           
  2360                           ;main.c: 197: my_delay(delay_time[delay_ptr++]);
  2361  014D  0878               	movf	_delay_ptr,w
  2362  014E  3E30               	addlw	48
  2363  014F  0086               	movwf	6
  2364  0150  0187               	clrf	7
  2365  0151  3023               	movlw	35
  2366  0152  3D87               	addwfc	7,f
  2367  0153  0801               	movf	1,w
  2368  0154  3183  2352  3180   	fcall	_my_delay
  2369  0157  3001               	movlw	1
  2370  0158  00F3               	movwf	??_big_switch_columns
  2371  0159  0873               	movf	??_big_switch_columns,w
  2372  015A  07F8               	addwf	_delay_ptr,f
  2373                           
  2374                           ;main.c: 198: do { LATE6 = 1; } while(0);
  2375  015B  0022               	movlb	2	; select bank2
  2376  015C  1710               	bsf	16,6	;volatile
  2377                           
  2378                           ;main.c: 199: do { LATE7 = 0; } while(0);
  2379  015D  1390               	bcf	16,7	;volatile
  2380                           
  2381                           ;main.c: 200: my_delay(delay_time[delay_ptr++]);
  2382  015E  0878               	movf	_delay_ptr,w
  2383  015F  3E30               	addlw	48
  2384  0160  0086               	movwf	6
  2385  0161  0187               	clrf	7
  2386  0162  3023               	movlw	35
  2387  0163  3D87               	addwfc	7,f
  2388  0164  0801               	movf	1,w
  2389  0165  3183  2352  3180   	fcall	_my_delay
  2390  0168  3001               	movlw	1
  2391  0169  00F3               	movwf	??_big_switch_columns
  2392  016A  0873               	movf	??_big_switch_columns,w
  2393  016B  07F8               	addwf	_delay_ptr,f
  2394                           
  2395                           ;main.c: 201: do { LATE7 = 1; } while(0);
  2396  016C  0022               	movlb	2	; select bank2
  2397  016D  1790               	bsf	16,7	;volatile
  2398                           
  2399                           ;main.c: 202: do { LATF0 = 0; } while(0);
  2400  016E  0027               	movlb	7	; select bank7
  2401  016F  100C               	bcf	12,0	;volatile
  2402                           
  2403                           ;main.c: 203: my_delay(delay_time[delay_ptr++]);
  2404  0170  0878               	movf	_delay_ptr,w
  2405  0171  3E30               	addlw	48
  2406  0172  0086               	movwf	6
  2407  0173  0187               	clrf	7
  2408  0174  3023               	movlw	35
  2409  0175  3D87               	addwfc	7,f
  2410  0176  0801               	movf	1,w
  2411  0177  3183  2352  3180   	fcall	_my_delay
  2412  017A  3001               	movlw	1
  2413  017B  00F3               	movwf	??_big_switch_columns
  2414  017C  0873               	movf	??_big_switch_columns,w
  2415  017D  07F8               	addwf	_delay_ptr,f
  2416                           
  2417                           ;main.c: 204: do { LATF0 = 1; } while(0);
  2418  017E  0027               	movlb	7	; select bank7
  2419  017F  140C               	bsf	12,0	;volatile
  2420                           
  2421                           ;main.c: 205: do { LATF1 = 0; } while(0);
  2422  0180  108C               	bcf	12,1	;volatile
  2423                           
  2424                           ;main.c: 206: my_delay(delay_time[delay_ptr++]);
  2425  0181  0878               	movf	_delay_ptr,w
  2426  0182  3E30               	addlw	48
  2427  0183  0086               	movwf	6
  2428  0184  0187               	clrf	7
  2429  0185  3023               	movlw	35
  2430  0186  3D87               	addwfc	7,f
  2431  0187  0801               	movf	1,w
  2432  0188  3183  2352  3180   	fcall	_my_delay
  2433  018B  3001               	movlw	1
  2434  018C  00F3               	movwf	??_big_switch_columns
  2435  018D  0873               	movf	??_big_switch_columns,w
  2436  018E  07F8               	addwf	_delay_ptr,f
  2437                           
  2438                           ;main.c: 207: do { LATF1 = 1; } while(0);
  2439  018F  0027               	movlb	7	; select bank7
  2440  0190  148C               	bsf	12,1	;volatile
  2441                           
  2442                           ;main.c: 208: do { LATF2 = 0; } while(0);
  2443  0191  110C               	bcf	12,2	;volatile
  2444                           
  2445                           ;main.c: 209: my_delay(delay_time[delay_ptr++]);
  2446  0192  0878               	movf	_delay_ptr,w
  2447  0193  3E30               	addlw	48
  2448  0194  0086               	movwf	6
  2449  0195  0187               	clrf	7
  2450  0196  3023               	movlw	35
  2451  0197  3D87               	addwfc	7,f
  2452  0198  0801               	movf	1,w
  2453  0199  3183  2352  3180   	fcall	_my_delay
  2454  019C  3001               	movlw	1
  2455  019D  00F3               	movwf	??_big_switch_columns
  2456  019E  0873               	movf	??_big_switch_columns,w
  2457  019F  07F8               	addwf	_delay_ptr,f
  2458                           
  2459                           ;main.c: 210: do { LATF2 = 1; } while(0);
  2460  01A0  0027               	movlb	7	; select bank7
  2461  01A1  150C               	bsf	12,2	;volatile
  2462                           
  2463                           ;main.c: 211: do { LATF3 = 0; } while(0);
  2464  01A2  118C               	bcf	12,3	;volatile
  2465                           
  2466                           ;main.c: 212: my_delay(delay_time[delay_ptr++]);
  2467  01A3  0878               	movf	_delay_ptr,w
  2468  01A4  3E30               	addlw	48
  2469  01A5  0086               	movwf	6
  2470  01A6  0187               	clrf	7
  2471  01A7  3023               	movlw	35
  2472  01A8  3D87               	addwfc	7,f
  2473  01A9  0801               	movf	1,w
  2474  01AA  3183  2352  3180   	fcall	_my_delay
  2475  01AD  3001               	movlw	1
  2476  01AE  00F3               	movwf	??_big_switch_columns
  2477  01AF  0873               	movf	??_big_switch_columns,w
  2478  01B0  07F8               	addwf	_delay_ptr,f
  2479                           
  2480                           ;main.c: 213: do { LATF3 = 1; } while(0);
  2481  01B1  0027               	movlb	7	; select bank7
  2482  01B2  158C               	bsf	12,3	;volatile
  2483                           
  2484                           ;main.c: 214: do { LATF4 = 0; } while(0);
  2485  01B3  120C               	bcf	12,4	;volatile
  2486                           
  2487                           ;main.c: 215: my_delay(delay_time[delay_ptr++]);
  2488  01B4  0878               	movf	_delay_ptr,w
  2489  01B5  3E30               	addlw	48
  2490  01B6  0086               	movwf	6
  2491  01B7  0187               	clrf	7
  2492  01B8  3023               	movlw	35
  2493  01B9  3D87               	addwfc	7,f
  2494  01BA  0801               	movf	1,w
  2495  01BB  3183  2352  3180   	fcall	_my_delay
  2496  01BE  3001               	movlw	1
  2497  01BF  00F3               	movwf	??_big_switch_columns
  2498  01C0  0873               	movf	??_big_switch_columns,w
  2499  01C1  07F8               	addwf	_delay_ptr,f
  2500                           
  2501                           ;main.c: 216: do { LATF4 = 1; } while(0);
  2502  01C2  0027               	movlb	7	; select bank7
  2503  01C3  160C               	bsf	12,4	;volatile
  2504                           
  2505                           ;main.c: 217: do { LATF5 = 0; } while(0);
  2506  01C4  128C               	bcf	12,5	;volatile
  2507                           
  2508                           ;main.c: 218: my_delay(delay_time[delay_ptr++]);
  2509  01C5  0878               	movf	_delay_ptr,w
  2510  01C6  3E30               	addlw	48
  2511  01C7  0086               	movwf	6
  2512  01C8  0187               	clrf	7
  2513  01C9  3023               	movlw	35
  2514  01CA  3D87               	addwfc	7,f
  2515  01CB  0801               	movf	1,w
  2516  01CC  3183  2352  3180   	fcall	_my_delay
  2517  01CF  3001               	movlw	1
  2518  01D0  00F3               	movwf	??_big_switch_columns
  2519  01D1  0873               	movf	??_big_switch_columns,w
  2520  01D2  07F8               	addwf	_delay_ptr,f
  2521                           
  2522                           ;main.c: 219: do { LATF5 = 1; } while(0);
  2523  01D3  0027               	movlb	7	; select bank7
  2524  01D4  168C               	bsf	12,5	;volatile
  2525                           
  2526                           ;main.c: 220: do { LATF6 = 0; } while(0);
  2527  01D5  130C               	bcf	12,6	;volatile
  2528                           
  2529                           ;main.c: 221: my_delay(delay_time[delay_ptr++]);
  2530  01D6  0878               	movf	_delay_ptr,w
  2531  01D7  3E30               	addlw	48
  2532  01D8  0086               	movwf	6
  2533  01D9  0187               	clrf	7
  2534  01DA  3023               	movlw	35
  2535  01DB  3D87               	addwfc	7,f
  2536  01DC  0801               	movf	1,w
  2537  01DD  3183  2352  3180   	fcall	_my_delay
  2538  01E0  3001               	movlw	1
  2539  01E1  00F3               	movwf	??_big_switch_columns
  2540  01E2  0873               	movf	??_big_switch_columns,w
  2541  01E3  07F8               	addwf	_delay_ptr,f
  2542                           
  2543                           ;main.c: 222: do { LATF6 = 1; } while(0);
  2544  01E4  0027               	movlb	7	; select bank7
  2545  01E5  170C               	bsf	12,6	;volatile
  2546                           
  2547                           ;main.c: 223: do { LATF7 = 0; } while(0);
  2548  01E6  138C               	bcf	12,7	;volatile
  2549                           
  2550                           ;main.c: 224: my_delay(delay_time[delay_ptr++]);
  2551  01E7  0878               	movf	_delay_ptr,w
  2552  01E8  3E30               	addlw	48
  2553  01E9  0086               	movwf	6
  2554  01EA  0187               	clrf	7
  2555  01EB  3023               	movlw	35
  2556  01EC  3D87               	addwfc	7,f
  2557  01ED  0801               	movf	1,w
  2558  01EE  3183  2352         	fcall	_my_delay
  2559  01F0  3001               	movlw	1
  2560  01F1  00F3               	movwf	??_big_switch_columns
  2561  01F2  0873               	movf	??_big_switch_columns,w
  2562  01F3  07F8               	addwf	_delay_ptr,f
  2563  01F4  0008               	return
  2564  01F5                     __end_of_big_switch_columns:	
  2565                           
  2566                           	psect	text4
  2567  0352                     __ptext4:	
  2568 ;; *************** function _my_delay *****************
  2569 ;; Defined at:
  2570 ;;		line 231 in file "main.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  dly             1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  dly             1    0[COMMON] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;		None               void
  2577 ;; Registers used:
  2578 ;;		wreg
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;Total ram usage:        1 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    2
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_big_switch_columns
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _my_delay
  2600  0352                     _my_delay:	
  2601                           
  2602                           ;main.c: 234: _delay((unsigned long)((50)*(16000000/4000000.0)));
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _my_delay: [wreg]
  2606  0352  3042               	movlw	66
  2607  0353  00F2               	movwf	??_my_delay
  2608  0354                     u747:	
  2609  0354  0BF2               	decfsz	??_my_delay,f
  2610  0355  2B54               	goto	u747
  2611  0356  0000               	nop
  2612  0357  0008               	return
  2613  0358                     __end_of_my_delay:	
  2614                           
  2615                           	psect	text5
  2616  033F                     __ptext5:	
  2617 ;; *************** function _SYSTEM_Initialize *****************
  2618 ;; Defined at:
  2619 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    3
  2640 ;; This function calls:
  2641 ;;		_EUSART1_Initialize
  2642 ;;		_EUSART2_Initialize
  2643 ;;		_OSCILLATOR_Initialize
  2644 ;;		_PIN_MANAGER_Initialize
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _SYSTEM_Initialize
  2652  033F                     _SYSTEM_Initialize:	
  2653                           
  2654                           ;mcc.c: 72: OSCILLATOR_Initialize();
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2658  033F  3183  2358  3183   	fcall	_OSCILLATOR_Initialize
  2659                           
  2660                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2661  0342  3181  21F5  3183   	fcall	_PIN_MANAGER_Initialize
  2662                           
  2663                           ;mcc.c: 74: EUSART1_Initialize();
  2664  0345  3183  230A  3183   	fcall	_EUSART1_Initialize
  2665                           
  2666                           ;mcc.c: 75: EUSART2_Initialize();
  2667  0348  3182  22F0         	fcall	_EUSART2_Initialize
  2668  034A  0008               	return
  2669  034B                     __end_of_SYSTEM_Initialize:	
  2670                           
  2671                           	psect	text6
  2672  01F5                     __ptext6:	
  2673 ;; *************** function _PIN_MANAGER_Initialize *****************
  2674 ;; Defined at:
  2675 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;		None               void
  2682 ;; Registers used:
  2683 ;;		wreg, status,2
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    2
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_SYSTEM_Initialize
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _PIN_MANAGER_Initialize
  2705  01F5                     _PIN_MANAGER_Initialize:	
  2706                           
  2707                           ;pin_manager.c: 51: LATA = 0x00;
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2711  01F5  0022               	movlb	2	; select bank2
  2712  01F6  018C               	clrf	12	;volatile
  2713                           
  2714                           ;pin_manager.c: 52: TRISA = 0xFF;
  2715  01F7  30FF               	movlw	255
  2716  01F8  0021               	movlb	1	; select bank1
  2717  01F9  008C               	movwf	12	;volatile
  2718                           
  2719                           ;pin_manager.c: 53: ANSELA = 0x00;
  2720  01FA  0023               	movlb	3	; select bank3
  2721  01FB  018C               	clrf	12	;volatile
  2722                           
  2723                           ;pin_manager.c: 55: LATB = 0x02;
  2724  01FC  3002               	movlw	2
  2725  01FD  0022               	movlb	2	; select bank2
  2726  01FE  008D               	movwf	13	;volatile
  2727                           
  2728                           ;pin_manager.c: 56: TRISB = 0x01;
  2729  01FF  3001               	movlw	1
  2730  0200  0021               	movlb	1	; select bank1
  2731  0201  008D               	movwf	13	;volatile
  2732                           
  2733                           ;pin_manager.c: 57: WPUB = 0x00;
  2734  0202  0024               	movlb	4	; select bank4
  2735  0203  018D               	clrf	13	;volatile
  2736                           
  2737                           ;pin_manager.c: 59: LATC = 0x00;
  2738  0204  0022               	movlb	2	; select bank2
  2739  0205  018E               	clrf	14	;volatile
  2740                           
  2741                           ;pin_manager.c: 60: TRISC = 0xFD;
  2742  0206  30FD               	movlw	253
  2743  0207  0021               	movlb	1	; select bank1
  2744  0208  008E               	movwf	14	;volatile
  2745                           
  2746                           ;pin_manager.c: 62: LATD = 0xFE;
  2747  0209  30FE               	movlw	254
  2748  020A  0022               	movlb	2	; select bank2
  2749  020B  008F               	movwf	15	;volatile
  2750                           
  2751                           ;pin_manager.c: 63: TRISD = 0x00;
  2752  020C  0021               	movlb	1	; select bank1
  2753  020D  018F               	clrf	15	;volatile
  2754                           
  2755                           ;pin_manager.c: 65: LATE = 0xFF;
  2756  020E  30FF               	movlw	255
  2757  020F  0022               	movlb	2	; select bank2
  2758  0210  0090               	movwf	16	;volatile
  2759                           
  2760                           ;pin_manager.c: 66: TRISE = 0x00;
  2761  0211  0021               	movlb	1	; select bank1
  2762  0212  0190               	clrf	16	;volatile
  2763                           
  2764                           ;pin_manager.c: 67: ANSELE = 0x00;
  2765  0213  0023               	movlb	3	; select bank3
  2766  0214  0190               	clrf	16	;volatile
  2767                           
  2768                           ;pin_manager.c: 69: LATF = 0xFF;
  2769  0215  30FF               	movlw	255
  2770  0216  0027               	movlb	7	; select bank7
  2771  0217  008C               	movwf	12	;volatile
  2772                           
  2773                           ;pin_manager.c: 70: TRISF = 0x00;
  2774  0218  0026               	movlb	6	; select bank6
  2775  0219  018C               	clrf	12	;volatile
  2776                           
  2777                           ;pin_manager.c: 71: ANSELF = 0x00;
  2778  021A  0028               	movlb	8	; select bank8
  2779  021B  018C               	clrf	12	;volatile
  2780                           
  2781                           ;pin_manager.c: 73: LATG = 0x00;
  2782  021C  0027               	movlb	7	; select bank7
  2783  021D  018D               	clrf	13	;volatile
  2784                           
  2785                           ;pin_manager.c: 74: TRISG = 0x3F;
  2786  021E  303F               	movlw	63
  2787  021F  0026               	movlb	6	; select bank6
  2788  0220  008D               	movwf	13	;volatile
  2789                           
  2790                           ;pin_manager.c: 75: ANSELG = 0x18;
  2791  0221  3018               	movlw	24
  2792  0222  0028               	movlb	8	; select bank8
  2793  0223  008D               	movwf	13	;volatile
  2794                           
  2795                           ;pin_manager.c: 76: WPUG = 0x00;
  2796  0224  0029               	movlb	9	; select bank9
  2797  0225  018D               	clrf	13	;volatile
  2798                           
  2799                           ;pin_manager.c: 78: OPTION_REGbits.nWPUEN = 0x01;
  2800  0226  0021               	movlb	1	; select bank1
  2801  0227  1795               	bsf	21,7	;volatile
  2802                           
  2803                           ;pin_manager.c: 80: APFCON = 0x00;
  2804  0228  0022               	movlb	2	; select bank2
  2805  0229  019D               	clrf	29	;volatile
  2806                           
  2807                           ;pin_manager.c: 83: IOCBN0 = 1;
  2808  022A  0027               	movlb	7	; select bank7
  2809  022B  1415               	bsf	21,0	;volatile
  2810                           
  2811                           ;pin_manager.c: 86: INTCONbits.IOCIE = 1;
  2812  022C  158B               	bsf	11,3	;volatile
  2813  022D  0008               	return
  2814  022E                     __end_of_PIN_MANAGER_Initialize:	
  2815                           
  2816                           	psect	text7
  2817  0358                     __ptext7:	
  2818 ;; *************** function _OSCILLATOR_Initialize *****************
  2819 ;; Defined at:
  2820 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;		None               void
  2827 ;; Registers used:
  2828 ;;		wreg, status,2
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    2
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_SYSTEM_Initialize
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _OSCILLATOR_Initialize
  2850  0358                     _OSCILLATOR_Initialize:	
  2851                           
  2852                           ;mcc.c: 80: OSCCON = 0x7A;
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2856  0358  307A               	movlw	122
  2857  0359  0021               	movlb	1	; select bank1
  2858  035A  0099               	movwf	25	;volatile
  2859                           
  2860                           ;mcc.c: 82: OSCSTAT = 0x00;
  2861  035B  019A               	clrf	26	;volatile
  2862                           
  2863                           ;mcc.c: 84: OSCTUNE = 0x00;
  2864  035C  0198               	clrf	24	;volatile
  2865  035D  0008               	return
  2866  035E                     __end_of_OSCILLATOR_Initialize:	
  2867                           
  2868                           	psect	text8
  2869  02F0                     __ptext8:	
  2870 ;; *************** function _EUSART2_Initialize *****************
  2871 ;; Defined at:
  2872 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;		None               void
  2879 ;; Registers used:
  2880 ;;		wreg, status,2
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2890 ;;Total ram usage:        1 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    2
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_SYSTEM_Initialize
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _EUSART2_Initialize
  2902  02F0                     _EUSART2_Initialize:	
  2903                           
  2904                           ;eusart2.c: 78: PIE4bits.RC2IE = 0;
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in _EUSART2_Initialize: [wreg+status,2]
  2908  02F0  0021               	movlb	1	; select bank1
  2909  02F1  1294               	bcf	20,5	;volatile
  2910                           
  2911                           ;eusart2.c: 79: PIE4bits.TX2IE = 0;
  2912  02F2  1214               	bcf	20,4	;volatile
  2913                           
  2914                           ;eusart2.c: 84: BAUD2CON = 0x48;
  2915  02F3  3048               	movlw	72
  2916  02F4  0029               	movlb	9	; select bank9
  2917  02F5  0097               	movwf	23	;volatile
  2918                           
  2919                           ;eusart2.c: 87: RC2STA = 0x80;
  2920  02F6  3080               	movlw	128
  2921  02F7  0095               	movwf	21	;volatile
  2922                           
  2923                           ;eusart2.c: 90: TX2STA = 0x26;
  2924  02F8  3026               	movlw	38
  2925  02F9  0096               	movwf	22	;volatile
  2926                           
  2927                           ;eusart2.c: 93: SP2BRGL = 0x22;
  2928  02FA  3022               	movlw	34
  2929  02FB  0093               	movwf	19	;volatile
  2930                           
  2931                           ;eusart2.c: 96: SP2BRGH = 0x00;
  2932  02FC  0194               	clrf	20	;volatile
  2933                           
  2934                           ;eusart2.c: 100: eusart2TxHead = 0;
  2935  02FD  01FA               	clrf	_eusart2TxHead
  2936                           
  2937                           ;eusart2.c: 101: eusart2TxTail = 0;
  2938  02FE  01FB               	clrf	_eusart2TxTail
  2939                           
  2940                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  2941  02FF  3008               	movlw	8
  2942  0300  00F2               	movwf	??_EUSART2_Initialize
  2943  0301  0872               	movf	??_EUSART2_Initialize,w
  2944  0302  0020               	movlb	0	; select bank0
  2945  0303  00C9               	movwf	_eusart2TxBufferRemaining	;volatile
  2946                           
  2947                           ;eusart2.c: 104: eusart2RxHead = 0;
  2948  0304  01F9               	clrf	_eusart2RxHead
  2949                           
  2950                           ;eusart2.c: 105: eusart2RxTail = 0;
  2951  0305  01C7               	clrf	_eusart2RxTail
  2952                           
  2953                           ;eusart2.c: 106: eusart2RxCount = 0;
  2954  0306  01C6               	clrf	_eusart2RxCount	;volatile
  2955                           
  2956                           ;eusart2.c: 109: PIE4bits.RC2IE = 1;
  2957  0307  0021               	movlb	1	; select bank1
  2958  0308  1694               	bsf	20,5	;volatile
  2959  0309  0008               	return
  2960  030A                     __end_of_EUSART2_Initialize:	
  2961                           
  2962                           	psect	text9
  2963  030A                     __ptext9:	
  2964 ;; *************** function _EUSART1_Initialize *****************
  2965 ;; Defined at:
  2966 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;		None               void
  2973 ;; Registers used:
  2974 ;;		wreg, status,2
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;Total ram usage:        1 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    2
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_SYSTEM_Initialize
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _EUSART1_Initialize
  2996  030A                     _EUSART1_Initialize:	
  2997                           
  2998                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  2999                           
  3000                           ;incstack = 0
  3001                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  3002  030A  0021               	movlb	1	; select bank1
  3003  030B  1291               	bcf	17,5	;volatile
  3004                           
  3005                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  3006  030C  1211               	bcf	17,4	;volatile
  3007                           
  3008                           ;eusart1.c: 84: BAUD1CON = 0x48;
  3009  030D  3048               	movlw	72
  3010  030E  0023               	movlb	3	; select bank3
  3011  030F  009F               	movwf	31	;volatile
  3012                           
  3013                           ;eusart1.c: 87: RC1STA = 0x80;
  3014  0310  3080               	movlw	128
  3015  0311  009D               	movwf	29	;volatile
  3016                           
  3017                           ;eusart1.c: 90: TX1STA = 0x26;
  3018  0312  3026               	movlw	38
  3019  0313  009E               	movwf	30	;volatile
  3020                           
  3021                           ;eusart1.c: 93: SP1BRGL = 0x22;
  3022  0314  3022               	movlw	34
  3023  0315  009B               	movwf	27	;volatile
  3024                           
  3025                           ;eusart1.c: 96: SP1BRGH = 0x00;
  3026  0316  019C               	clrf	28	;volatile
  3027                           
  3028                           ;eusart1.c: 100: eusart1TxHead = 0;
  3029  0317  0020               	movlb	0	; select bank0
  3030  0318  01C4               	clrf	_eusart1TxHead
  3031                           
  3032                           ;eusart1.c: 101: eusart1TxTail = 0;
  3033  0319  01C5               	clrf	_eusart1TxTail
  3034                           
  3035                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3036  031A  3008               	movlw	8
  3037  031B  00F2               	movwf	??_EUSART1_Initialize
  3038  031C  0872               	movf	??_EUSART1_Initialize,w
  3039  031D  00C8               	movwf	_eusart1TxBufferRemaining	;volatile
  3040                           
  3041                           ;eusart1.c: 104: eusart1RxHead = 0;
  3042  031E  01C2               	clrf	_eusart1RxHead
  3043                           
  3044                           ;eusart1.c: 105: eusart1RxTail = 0;
  3045  031F  01C3               	clrf	_eusart1RxTail
  3046                           
  3047                           ;eusart1.c: 106: eusart1RxCount = 0;
  3048  0320  01C1               	clrf	_eusart1RxCount	;volatile
  3049                           
  3050                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  3051  0321  0021               	movlb	1	; select bank1
  3052  0322  1691               	bsf	17,5	;volatile
  3053  0323  0008               	return
  3054  0324                     __end_of_EUSART1_Initialize:	
  3055                           
  3056                           	psect	intentry
  3057  0004                     __pintentry:	
  3058 ;; *************** function _INTERRUPT_InterruptManager *****************
  3059 ;; Defined at:
  3060 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;Total ram usage:        1 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    1
  3081 ;; This function calls:
  3082 ;;		_EUSART1_Receive_ISR
  3083 ;;		_EUSART1_Transmit_ISR
  3084 ;;		_EUSART2_Receive_ISR
  3085 ;;		_EUSART2_Transmit_ISR
  3086 ;;		_PIN_MANAGER_IOC
  3087 ;; This function is called by:
  3088 ;;		Interrupt level 1
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092  0004                     _INTERRUPT_InterruptManager:	
  3093                           
  3094                           ;incstack = 0
  3095                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3096  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3097  0005  3180               	pagesel	$
  3098  0006  0020               	movlb	0	; select bank0
  3099  0007  087F               	movf	127,w
  3100  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  3101                           
  3102                           ;interrupt_manager.c: 54: if (INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1) {
  3103  0009  198B               	btfsc	11,3	;volatile
  3104  000A  1C0B               	btfss	11,0	;volatile
  3105  000B  2811               	goto	i1l208
  3106                           
  3107                           ;interrupt_manager.c: 55: PIN_MANAGER_IOC();
  3108  000C  3183  234B  3180   	fcall	_PIN_MANAGER_IOC
  3109                           
  3110                           ;interrupt_manager.c: 58: INTCONbits.IOCIF = 0;
  3111  000F  100B               	bcf	11,0	;volatile
  3112                           
  3113                           ;interrupt_manager.c: 59: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  3114  0010  2837               	goto	i1l218
  3115  0011                     i1l208:	
  3116  0011  0021               	movlb	1	; select bank1
  3117  0012  1E91               	btfss	17,5	;volatile
  3118  0013  281B               	goto	i1l210
  3119  0014  0020               	movlb	0	; select bank0
  3120  0015  1E91               	btfss	17,5	;volatile
  3121  0016  281B               	goto	i1l210
  3122                           
  3123                           ;interrupt_manager.c: 60: EUSART1_Receive_ISR();
  3124  0017  3182  22D5  3180   	fcall	_EUSART1_Receive_ISR
  3125                           
  3126                           ;interrupt_manager.c: 61: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  3127  001A  2837               	goto	i1l218
  3128  001B                     i1l210:	
  3129  001B  0021               	movlb	1	; select bank1
  3130  001C  1E11               	btfss	17,4	;volatile
  3131  001D  2825               	goto	i1l212
  3132  001E  0020               	movlb	0	; select bank0
  3133  001F  1E11               	btfss	17,4	;volatile
  3134  0020  2825               	goto	i1l212
  3135                           
  3136                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  3137  0021  3182  229D  3180   	fcall	_EUSART1_Transmit_ISR
  3138                           
  3139                           ;interrupt_manager.c: 63: } else if (PIE4bits.RC2IE == 1 && PIR4bits.RC2IF == 1) {
  3140  0024  2837               	goto	i1l218
  3141  0025                     i1l212:	
  3142  0025  0021               	movlb	1	; select bank1
  3143  0026  1E94               	btfss	20,5	;volatile
  3144  0027  282F               	goto	i1l214
  3145  0028  0020               	movlb	0	; select bank0
  3146  0029  1E94               	btfss	20,5	;volatile
  3147  002A  282F               	goto	i1l214
  3148                           
  3149                           ;interrupt_manager.c: 64: EUSART2_Receive_ISR();
  3150  002B  3182  22BA  3180   	fcall	_EUSART2_Receive_ISR
  3151                           
  3152                           ;interrupt_manager.c: 65: } else if (PIE4bits.TX2IE == 1 && PIR4bits.TX2IF == 1) {
  3153  002E  2837               	goto	i1l218
  3154  002F                     i1l214:	
  3155  002F  0021               	movlb	1	; select bank1
  3156  0030  1E14               	btfss	20,4	;volatile
  3157  0031  2837               	goto	i1l218
  3158  0032  0020               	movlb	0	; select bank0
  3159  0033  1E14               	btfss	20,4	;volatile
  3160  0034  2837               	goto	i1l218
  3161                           
  3162                           ;interrupt_manager.c: 66: EUSART2_Transmit_ISR();
  3163  0035  3182  2280         	fcall	_EUSART2_Transmit_ISR
  3164  0037                     i1l218:	
  3165                           ;interrupt_manager.c: 67: } else {
  3166                           
  3167  0037  0871               	movf	??_INTERRUPT_InterruptManager,w
  3168  0038  0020               	movlb	0	; select bank0
  3169  0039  00FF               	movwf	127
  3170  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3171  003B  0009               	retfie
  3172  003C                     __end_of_INTERRUPT_InterruptManager:	
  3173                           
  3174                           	psect	text11
  3175  034B                     __ptext11:	
  3176 ;; *************** function _PIN_MANAGER_IOC *****************
  3177 ;; Defined at:
  3178 ;;		line 90 in file "mcc_generated_files/pin_manager.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;		None               void
  3185 ;; Registers used:
  3186 ;;		None
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;Total ram usage:        0 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_INTERRUPT_InterruptManager
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _PIN_MANAGER_IOC
  3207  034B                     _PIN_MANAGER_IOC:	
  3208                           
  3209                           ;pin_manager.c: 91: if ((IOCBN0 == 1) && (IOCBF0 == 1)) {
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _PIN_MANAGER_IOC: []
  3213  034B  0027               	movlb	7	; select bank7
  3214  034C  1C15               	btfss	21,0	;volatile
  3215  034D  0008               	return
  3216  034E  1C16               	btfss	22,0	;volatile
  3217  034F  0008               	return
  3218                           
  3219                           ;pin_manager.c: 95: IOCBF0 = 0;
  3220  0350  1016               	bcf	22,0	;volatile
  3221  0351  0008               	return
  3222  0352                     __end_of_PIN_MANAGER_IOC:	
  3223                           
  3224                           	psect	text12
  3225  0280                     __ptext12:	
  3226 ;; *************** function _EUSART2_Transmit_ISR *****************
  3227 ;; Defined at:
  3228 ;;		line 147 in file "mcc_generated_files/eusart2.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;		None               void
  3235 ;; Registers used:
  3236 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;Total ram usage:        1 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_INTERRUPT_InterruptManager
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           
  3256                           ;psect for function _EUSART2_Transmit_ISR
  3257  0280                     _EUSART2_Transmit_ISR:	
  3258                           
  3259                           ;eusart2.c: 150: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3263  0280  3008               	movlw	8
  3264  0281  0020               	movlb	0	; select bank0
  3265  0282  0249               	subwf	_eusart2TxBufferRemaining,w	;volatile
  3266  0283  1803               	skipnc
  3267  0284  2A9A               	goto	i1l56
  3268                           
  3269                           ;eusart2.c: 151: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  3270  0285  087B               	movf	_eusart2TxTail,w
  3271  0286  3E38               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
  3272  0287  0086               	movwf	6
  3273  0288  0187               	clrf	7
  3274  0289  0801               	movf	1,w
  3275  028A  0029               	movlb	9	; select bank9
  3276  028B  0092               	movwf	18	;volatile
  3277  028C  3001               	movlw	1
  3278  028D  00F0               	movwf	??_EUSART2_Transmit_ISR
  3279  028E  0870               	movf	??_EUSART2_Transmit_ISR,w
  3280  028F  07FB               	addwf	_eusart2TxTail,f
  3281                           
  3282                           ;eusart2.c: 152: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  3283  0290  3008               	movlw	8
  3284  0291  027B               	subwf	_eusart2TxTail,w
  3285  0292  1803               	btfsc	3,0
  3286                           
  3287                           ;eusart2.c: 153: eusart2TxTail = 0;
  3288  0293  01FB               	clrf	_eusart2TxTail
  3289                           
  3290                           ;eusart2.c: 154: }
  3291                           ;eusart2.c: 155: eusart2TxBufferRemaining++;
  3292  0294  3001               	movlw	1
  3293  0295  00F0               	movwf	??_EUSART2_Transmit_ISR
  3294  0296  0870               	movf	??_EUSART2_Transmit_ISR,w
  3295  0297  0020               	movlb	0	; select bank0
  3296  0298  07C9               	addwf	_eusart2TxBufferRemaining,f	;volatile
  3297                           
  3298                           ;eusart2.c: 156: } else {
  3299  0299  0008               	return
  3300  029A                     i1l56:	
  3301                           
  3302                           ;eusart2.c: 157: PIE4bits.TX2IE = 0;
  3303  029A  0021               	movlb	1	; select bank1
  3304  029B  1214               	bcf	20,4	;volatile
  3305  029C  0008               	return
  3306  029D                     __end_of_EUSART2_Transmit_ISR:	
  3307                           
  3308                           	psect	text13
  3309  02BA                     __ptext13:	
  3310 ;; *************** function _EUSART2_Receive_ISR *****************
  3311 ;; Defined at:
  3312 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_INTERRUPT_InterruptManager
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _EUSART2_Receive_ISR
  3341  02BA                     _EUSART2_Receive_ISR:	
  3342                           
  3343                           ;eusart2.c: 162: if (1 == RC2STAbits.OERR) {
  3344                           
  3345                           ;incstack = 0
  3346                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3347  02BA  0029               	movlb	9	; select bank9
  3348  02BB  1C95               	btfss	21,1	;volatile
  3349  02BC  2ABF               	goto	i1l1410
  3350                           
  3351                           ;eusart2.c: 165: RC2STAbits.CREN = 0;
  3352  02BD  1215               	bcf	21,4	;volatile
  3353                           
  3354                           ;eusart2.c: 166: RC2STAbits.CREN = 1;
  3355  02BE  1615               	bsf	21,4	;volatile
  3356  02BF                     i1l1410:	
  3357                           
  3358                           ;eusart2.c: 167: }
  3359                           ;eusart2.c: 170: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  3360  02BF  0811               	movf	17,w	;volatile
  3361  02C0  00F0               	movwf	??_EUSART2_Receive_ISR
  3362  02C1  0879               	movf	_eusart2RxHead,w
  3363  02C2  3E30               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
  3364  02C3  0086               	movwf	6
  3365  02C4  0187               	clrf	7
  3366  02C5  0870               	movf	??_EUSART2_Receive_ISR,w
  3367  02C6  0081               	movwf	1
  3368  02C7  3001               	movlw	1
  3369  02C8  00F0               	movwf	??_EUSART2_Receive_ISR
  3370  02C9  0870               	movf	??_EUSART2_Receive_ISR,w
  3371  02CA  07F9               	addwf	_eusart2RxHead,f
  3372                           
  3373                           ;eusart2.c: 171: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  3374  02CB  3008               	movlw	8
  3375  02CC  0279               	subwf	_eusart2RxHead,w
  3376  02CD  1803               	btfsc	3,0
  3377                           
  3378                           ;eusart2.c: 172: eusart2RxHead = 0;
  3379  02CE  01F9               	clrf	_eusart2RxHead
  3380                           
  3381                           ;eusart2.c: 173: }
  3382                           ;eusart2.c: 174: eusart2RxCount++;
  3383  02CF  3001               	movlw	1
  3384  02D0  00F0               	movwf	??_EUSART2_Receive_ISR
  3385  02D1  0870               	movf	??_EUSART2_Receive_ISR,w
  3386  02D2  0020               	movlb	0	; select bank0
  3387  02D3  07C6               	addwf	_eusart2RxCount,f	;volatile
  3388  02D4  0008               	return
  3389  02D5                     __end_of_EUSART2_Receive_ISR:	
  3390                           
  3391                           	psect	text14
  3392  029D                     __ptext14:	
  3393 ;; *************** function _EUSART1_Transmit_ISR *****************
  3394 ;; Defined at:
  3395 ;;		line 147 in file "mcc_generated_files/eusart1.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;		None               void
  3402 ;; Registers used:
  3403 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_INTERRUPT_InterruptManager
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function _EUSART1_Transmit_ISR
  3424  029D                     _EUSART1_Transmit_ISR:	
  3425                           
  3426                           ;eusart1.c: 150: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3430  029D  3008               	movlw	8
  3431  029E  0020               	movlb	0	; select bank0
  3432  029F  0248               	subwf	_eusart1TxBufferRemaining,w	;volatile
  3433  02A0  1803               	skipnc
  3434  02A1  2AB7               	goto	i1l120
  3435                           
  3436                           ;eusart1.c: 151: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  3437  02A2  0845               	movf	_eusart1TxTail,w
  3438  02A3  3E28               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  3439  02A4  0086               	movwf	6
  3440  02A5  0187               	clrf	7
  3441  02A6  0801               	movf	1,w
  3442  02A7  0023               	movlb	3	; select bank3
  3443  02A8  009A               	movwf	26	;volatile
  3444  02A9  3001               	movlw	1
  3445  02AA  00F0               	movwf	??_EUSART1_Transmit_ISR
  3446  02AB  0870               	movf	??_EUSART1_Transmit_ISR,w
  3447  02AC  0020               	movlb	0	; select bank0
  3448  02AD  07C5               	addwf	_eusart1TxTail,f
  3449                           
  3450                           ;eusart1.c: 152: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  3451  02AE  3008               	movlw	8
  3452  02AF  0245               	subwf	_eusart1TxTail,w
  3453  02B0  1803               	btfsc	3,0
  3454                           
  3455                           ;eusart1.c: 153: eusart1TxTail = 0;
  3456  02B1  01C5               	clrf	_eusart1TxTail
  3457                           
  3458                           ;eusart1.c: 154: }
  3459                           ;eusart1.c: 155: eusart1TxBufferRemaining++;
  3460  02B2  3001               	movlw	1
  3461  02B3  00F0               	movwf	??_EUSART1_Transmit_ISR
  3462  02B4  0870               	movf	??_EUSART1_Transmit_ISR,w
  3463  02B5  07C8               	addwf	_eusart1TxBufferRemaining,f	;volatile
  3464                           
  3465                           ;eusart1.c: 156: } else {
  3466  02B6  0008               	return
  3467  02B7                     i1l120:	
  3468                           
  3469                           ;eusart1.c: 157: PIE1bits.TX1IE = 0;
  3470  02B7  0021               	movlb	1	; select bank1
  3471  02B8  1211               	bcf	17,4	;volatile
  3472  02B9  0008               	return
  3473  02BA                     __end_of_EUSART1_Transmit_ISR:	
  3474                           
  3475                           	psect	text15
  3476  02D5                     __ptext15:	
  3477 ;; *************** function _EUSART1_Receive_ISR *****************
  3478 ;; Defined at:
  3479 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;		None               void
  3486 ;; Registers used:
  3487 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;Total ram usage:        1 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_INTERRUPT_InterruptManager
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _EUSART1_Receive_ISR
  3508  02D5                     _EUSART1_Receive_ISR:	
  3509                           
  3510                           ;eusart1.c: 162: if (1 == RC1STAbits.OERR) {
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3514  02D5  0023               	movlb	3	; select bank3
  3515  02D6  1C9D               	btfss	29,1	;volatile
  3516  02D7  2ADA               	goto	i1l1436
  3517                           
  3518                           ;eusart1.c: 165: RC1STAbits.CREN = 0;
  3519  02D8  121D               	bcf	29,4	;volatile
  3520                           
  3521                           ;eusart1.c: 166: RC1STAbits.CREN = 1;
  3522  02D9  161D               	bsf	29,4	;volatile
  3523  02DA                     i1l1436:	
  3524                           
  3525                           ;eusart1.c: 167: }
  3526                           ;eusart1.c: 170: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  3527  02DA  0819               	movf	25,w	;volatile
  3528  02DB  00F0               	movwf	??_EUSART1_Receive_ISR
  3529  02DC  0020               	movlb	0	; select bank0
  3530  02DD  0842               	movf	_eusart1RxHead,w
  3531  02DE  3E20               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  3532  02DF  0086               	movwf	6
  3533  02E0  0187               	clrf	7
  3534  02E1  0870               	movf	??_EUSART1_Receive_ISR,w
  3535  02E2  0081               	movwf	1
  3536  02E3  3001               	movlw	1
  3537  02E4  00F0               	movwf	??_EUSART1_Receive_ISR
  3538  02E5  0870               	movf	??_EUSART1_Receive_ISR,w
  3539  02E6  07C2               	addwf	_eusart1RxHead,f
  3540                           
  3541                           ;eusart1.c: 171: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  3542  02E7  3008               	movlw	8
  3543  02E8  0242               	subwf	_eusart1RxHead,w
  3544  02E9  1803               	btfsc	3,0
  3545                           
  3546                           ;eusart1.c: 172: eusart1RxHead = 0;
  3547  02EA  01C2               	clrf	_eusart1RxHead
  3548                           
  3549                           ;eusart1.c: 173: }
  3550                           ;eusart1.c: 174: eusart1RxCount++;
  3551  02EB  3001               	movlw	1
  3552  02EC  00F0               	movwf	??_EUSART1_Receive_ISR
  3553  02ED  0870               	movf	??_EUSART1_Receive_ISR,w
  3554  02EE  07C1               	addwf	_eusart1RxCount,f	;volatile
  3555  02EF  0008               	return
  3556  02F0                     __end_of_EUSART1_Receive_ISR:	
  3557  007E                     btemp	set	126	;btemp
  3558  007E                     int$flags	set	126
  3559  007E                     wtemp	set	126
  3560  007E                     wtemp0	set	126
  3561  0080                     wtemp1	set	128
  3562  0082                     wtemp2	set	130
  3563  0084                     wtemp3	set	132
  3564  0086                     wtemp4	set	134
  3565  0088                     wtemp5	set	136
  3566  007F                     wtemp6	set	127
  3567  007E                     ttemp	set	126
  3568  007E                     ttemp0	set	126
  3569  0081                     ttemp1	set	129
  3570  0084                     ttemp2	set	132
  3571  0087                     ttemp3	set	135
  3572  007F                     ttemp4	set	127
  3573  007E                     ltemp	set	126
  3574  007E                     ltemp0	set	126
  3575  0082                     ltemp1	set	130
  3576  0086                     ltemp2	set	134
  3577  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      2      44
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_strobe_all
    _strobe_all->_big_switch_rows
    _big_switch_rows->_big_switch_columns
    _big_switch_columns->_my_delay
    _SYSTEM_Initialize->_EUSART1_Initialize
    _SYSTEM_Initialize->_EUSART2_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     249
                                              7 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
                         _strobe_all
 ---------------------------------------------------------------------------------
 (1) _strobe_all                                           2     2      0     150
                                              5 COMMON     2     2      0
                    _big_switch_rows
 ---------------------------------------------------------------------------------
 (2) _big_switch_rows                                      1     1      0     120
                                              4 COMMON     1     1      0
                 _big_switch_columns
 ---------------------------------------------------------------------------------
 (3) _big_switch_columns                                   1     1      0       0
                                              3 COMMON     1     1      0
                           _my_delay
 ---------------------------------------------------------------------------------
 (4) _my_delay                                             2     2      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _strobe_all
     _big_switch_rows
       _big_switch_columns
         _my_delay

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      2C       5       55.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      38      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      38      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Nov 16 07:59:27 2015

           _eusart1TxBufferRemaining 0048                          __CFG_CP$OFF 0000  
                       __CFG_CPD$OFF 0000                                  u747 0354  
                  ??_big_switch_rows 0074                         __CFG_BORV$LO 0000  
                       __CFG_IESO$ON 0000                         __CFG_LVP$OFF 0000  
                               l1170 023B                                 l1180 0257  
                               l1172 0241                                 l1252 0329  
                               l1174 0247                                 l1182 025C  
                               l1176 024D                                 l1168 0235  
                               l1178 0252                                 l1574 027C  
                               l1568 0267              _current_column_position 0040  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _LATF 038C  
                               _LATG 038D                                 i1l56 029A  
                               _WPUB 020D                                 _WPUG 048D  
              ??_EUSART2_Receive_ISR 0070                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 025F  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 003C  
                               ttemp 007E                                 wtemp 007E  
       __end_of_EUSART2_Transmit_ISR 029D                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 035E                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _LATB1 0869  
                              _LATB2 086A                                _LATC1 0871  
                              _LATB3 086B                                _LATD0 0878  
                              _LATB4 086C                                _LATD1 0879  
                              _LATB5 086D                                _LATE0 0880  
                              _LATD2 087A                                _LATE1 0881  
                              _LATD3 087B                                _LATB7 086F  
                              _LATF0 1C60                                _LATE2 0882  
                              _LATD4 087C                                _LATF1 1C61  
                              _LATE3 0883                                _LATD5 087D  
                              _LATF2 1C62                                _LATE4 0884  
                              _LATD6 087E                                _LATF3 1C63  
                              _LATE5 0885                                _LATD7 087F  
                              _LATF4 1C64                                _LATE6 0886  
                              _LATF5 1C65                                _LATE7 0887  
                              _LATF6 1C66                                _LATF7 1C67  
                              i1l120 02B7                                i1l210 001B  
                              i1l212 0025                                i1l214 002F  
                              i1l208 0011                                i1l218 0037  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISD 008F  
                              _TRISE 0090                                _TRISF 030C  
                              _TRISG 030D                 _EUSART1_Transmit_ISR 029D  
            __end_of_PIN_MANAGER_IOC 0352                                main@x 0077  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      __initialization 003E  
         __end_of_EUSART1_Initialize 0324                         __end_of_main 0280  
                 _big_switch_columns 005B          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 004A                  ?_big_switch_columns 0070  
              ?_EUSART1_Transmit_ISR 0070           __end_of_EUSART2_Initialize 030A  
           _eusart2TxBufferRemaining 0049                               _APFCON 011D  
                             _ANSELA 018C                               _ANSELE 0190  
                             _ANSELF 040C                               _ANSELG 040D  
                             _IOCBF0 1CB0                               _IOCBN0 1CA8  
                             _RC1REG 0199                               _RC2REG 0491  
                             _RC1STA 019D                               _RC2STA 0495  
                             i1l1410 02BF                               i1l1436 02DA  
                             _OSCCON 0099                               _TX1REG 019A  
                             _TX2REG 0492                               _TX1STA 019E  
                             _TX2STA 0496                 ??_big_switch_columns 0073  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                   __end_of_my_delay 0358                 _EUSART2_Transmit_ISR 0280  
                   ?_PIN_MANAGER_IOC 0070                      _eusart1RxBuffer 0020  
                    _eusart2RxBuffer 0030                      _eusart1TxBuffer 0028  
                  _SYSTEM_Initialize 033F                      _eusart2TxBuffer 0038  
            __end_of__initialization 0057                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                      _big_switch_rows 022E  
                ??_SYSTEM_Initialize 0073               ??_EUSART1_Transmit_ISR 0070  
                     _OPTION_REGbits 0095                ?_EUSART2_Transmit_ISR 0070  
        __end_of_EUSART1_Receive_ISR 02F0            __end_of_SYSTEM_Initialize 034B  
                      _eusart1RxHead 0042                        _eusart1TxHead 0044  
                      _eusart2RxHead 0079                        _eusart1RxTail 0043  
                      _eusart2TxHead 007A                           __pbssBANK0 0020  
                      _eusart2RxTail 0047                        _eusart1TxTail 0045  
                      _eusart2TxTail 007B                      __CFG_VCAPEN$OFF 0000  
                         _delay_time 2330                           __pmaintext 025F  
                         __pintentry 0004                              _SP1BRGH 019C  
                            _SP1BRGL 019B                              _SP2BRGH 0494  
                            _SP2BRGL 0493          __end_of_EUSART2_Receive_ISR 02D5  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
            __end_of_big_switch_rows 025F                            ?_my_delay 0070  
                        my_delay@dly 0070                              __ptext1 0324  
                            __ptext2 022E                              __ptext3 005B  
                            __ptext4 0352                              __ptext5 033F  
                            __ptext6 01F5                              __ptext7 0358  
                            __ptext8 02F0                              __ptext9 030A  
              _OSCILLATOR_Initialize 0358               ??_EUSART2_Transmit_ISR 0070  
                 _EUSART1_Initialize 030A             ??_PIN_MANAGER_Initialize 0072  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0334  
               end_of_initialization 0057                  ?_EUSART1_Initialize 0070  
                         ??_my_delay 0072                   _EUSART2_Initialize 02F0  
               ??_EUSART1_Initialize 0072                  ?_EUSART2_Initialize 0070  
                   __CFG_FOSC$INTOSC 0000                 ??_EUSART2_Initialize 0072  
                   ?_big_switch_rows 0070          __size_of_big_switch_columns 019A  
                         _strobe_all 0324               ?_OSCILLATOR_Initialize 0070  
                start_initialization 003E      __size_of_PIN_MANAGER_Initialize 0039  
           __size_of_PIN_MANAGER_IOC 0007                       _eusart1RxCount 0041  
                     _eusart2RxCount 0046                          __pbssBIGRAM 2330  
                        __pbssCOMMON 0078                            ___latbits 0003  
      __size_of_EUSART1_Transmit_ISR 001D                        __pcstackBANK0 004A  
       __size_of_EUSART1_Receive_ISR 001B                            __pnvBANK0 0048  
             _PIN_MANAGER_Initialize 01F5                            _delay_ptr 0078  
                        ?_strobe_all 0070                    __size_of_my_delay 0006  
       ??_INTERRUPT_InterruptManager 0071                             _BAUD1CON 019F  
                           _BAUD2CON 0497                          strobe_all@x 0076  
       __size_of_EUSART2_Receive_ISR 001B                            clear_ram0 0333  
                           _PIE1bits 0091                             _PIE4bits 0094  
__size_of_INTERRUPT_InterruptManager 0038                             _PIR1bits 0011  
                           _PIR4bits 0014                    ??_PIN_MANAGER_IOC 0070  
      __size_of_EUSART2_Transmit_ISR 001D                  __size_of_strobe_all 000F  
            ??_OSCILLATOR_Initialize 0072          __size_of_EUSART1_Initialize 001A  
                           __ptext11 034B                             __ptext12 0280  
                           __ptext13 02BA                             __ptext14 029D  
                           __ptext15 02D5          __size_of_EUSART2_Initialize 001A  
         __end_of_big_switch_columns 01F5                        __size_of_main 0021  
                           _my_delay 0352                           _RC1STAbits 019D  
                         _RC2STAbits 0495                             int$flags 007E  
           __size_of_big_switch_rows 0031   __end_of_INTERRUPT_InterruptManager 003C  
         _INTERRUPT_InterruptManager 0004                  _EUSART1_Receive_ISR 02D5  
                         _INTCONbits 000B                             intlevel1 0000  
               ?_EUSART1_Receive_ISR 0070              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000         __end_of_EUSART1_Transmit_ISR 02BA  
                       ??_strobe_all 0075                  _EUSART2_Receive_ISR 02BA  
                 big_switch_rows@pos 0074                   __end_of_strobe_all 0333  
              ??_EUSART1_Receive_ISR 0070       __end_of_PIN_MANAGER_Initialize 022E  
               ?_EUSART2_Receive_ISR 0070                      _PIN_MANAGER_IOC 034B  
