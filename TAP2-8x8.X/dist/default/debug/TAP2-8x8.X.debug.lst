

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 17 14:41:47 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1947
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x620,48
    28                           	dabs	1,0x5A0,80
    29                           	dabs	1,0x530,64
    30                           	dabs	1,0x2330,0,_delay_time
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000F                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  008F                     	;# 
    68  0090                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  0110                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011B                     	;# 
   100  011D                     	;# 
   101  011E                     	;# 
   102  011F                     	;# 
   103  018C                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0199                     	;# 
   115  0199                     	;# 
   116  019A                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  019F                     	;# 
   130  020D                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0219                     	;# 
   147  021A                     	;# 
   148  021B                     	;# 
   149  021C                     	;# 
   150  021D                     	;# 
   151  021E                     	;# 
   152  021F                     	;# 
   153  028C                     	;# 
   154  028D                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029C                     	;# 
   169  029C                     	;# 
   170  029D                     	;# 
   171  029E                     	;# 
   172  029F                     	;# 
   173  030C                     	;# 
   174  030D                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  038C                     	;# 
   192  038D                     	;# 
   193  0394                     	;# 
   194  0395                     	;# 
   195  0396                     	;# 
   196  040C                     	;# 
   197  040D                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  048D                     	;# 
   205  0491                     	;# 
   206  0492                     	;# 
   207  0493                     	;# 
   208  0493                     	;# 
   209  0494                     	;# 
   210  0495                     	;# 
   211  0496                     	;# 
   212  0497                     	;# 
   213  0791                     	;# 
   214  0792                     	;# 
   215  0793                     	;# 
   216  0794                     	;# 
   217  0795                     	;# 
   218  0798                     	;# 
   219  0799                     	;# 
   220  079A                     	;# 
   221  079B                     	;# 
   222  079C                     	;# 
   223  079D                     	;# 
   224  07A0                     	;# 
   225  07A1                     	;# 
   226  07A2                     	;# 
   227  07A3                     	;# 
   228  07A4                     	;# 
   229  07A5                     	;# 
   230  07A6                     	;# 
   231  07A7                     	;# 
   232  07A8                     	;# 
   233  07A9                     	;# 
   234  07AA                     	;# 
   235  07AB                     	;# 
   236  07AC                     	;# 
   237  07AD                     	;# 
   238  07AE                     	;# 
   239  07AF                     	;# 
   240  07B0                     	;# 
   241  07B1                     	;# 
   242  07B2                     	;# 
   243  07B3                     	;# 
   244  07B4                     	;# 
   245  07B5                     	;# 
   246  07B6                     	;# 
   247  07B7                     	;# 
   248  0FE4                     	;# 
   249  0FE5                     	;# 
   250  0FE6                     	;# 
   251  0FE7                     	;# 
   252  0FE8                     	;# 
   253  0FE9                     	;# 
   254  0FEA                     	;# 
   255  0FEB                     	;# 
   256  0FED                     	;# 
   257  0FEE                     	;# 
   258  0FEF                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  0008                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  000D                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0014                     	;# 
   280  0015                     	;# 
   281  0016                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001B                     	;# 
   288  001C                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  008F                     	;# 
   295  0090                     	;# 
   296  0091                     	;# 
   297  0092                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0110                     	;# 
   316  0111                     	;# 
   317  0112                     	;# 
   318  0113                     	;# 
   319  0114                     	;# 
   320  0115                     	;# 
   321  0116                     	;# 
   322  0117                     	;# 
   323  0118                     	;# 
   324  0119                     	;# 
   325  011A                     	;# 
   326  011B                     	;# 
   327  011D                     	;# 
   328  011E                     	;# 
   329  011F                     	;# 
   330  018C                     	;# 
   331  0190                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0199                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019A                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019C                     	;# 
   350  019C                     	;# 
   351  019D                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019E                     	;# 
   355  019F                     	;# 
   356  019F                     	;# 
   357  020D                     	;# 
   358  0211                     	;# 
   359  0211                     	;# 
   360  0212                     	;# 
   361  0212                     	;# 
   362  0213                     	;# 
   363  0213                     	;# 
   364  0214                     	;# 
   365  0214                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0219                     	;# 
   374  021A                     	;# 
   375  021B                     	;# 
   376  021C                     	;# 
   377  021D                     	;# 
   378  021E                     	;# 
   379  021F                     	;# 
   380  028C                     	;# 
   381  028D                     	;# 
   382  0291                     	;# 
   383  0291                     	;# 
   384  0292                     	;# 
   385  0293                     	;# 
   386  0294                     	;# 
   387  0295                     	;# 
   388  0295                     	;# 
   389  0296                     	;# 
   390  0298                     	;# 
   391  0298                     	;# 
   392  0299                     	;# 
   393  029A                     	;# 
   394  029B                     	;# 
   395  029C                     	;# 
   396  029C                     	;# 
   397  029D                     	;# 
   398  029E                     	;# 
   399  029F                     	;# 
   400  030C                     	;# 
   401  030D                     	;# 
   402  0311                     	;# 
   403  0311                     	;# 
   404  0312                     	;# 
   405  0313                     	;# 
   406  0314                     	;# 
   407  0315                     	;# 
   408  0315                     	;# 
   409  0316                     	;# 
   410  0318                     	;# 
   411  0318                     	;# 
   412  0319                     	;# 
   413  031A                     	;# 
   414  031C                     	;# 
   415  031C                     	;# 
   416  031D                     	;# 
   417  031E                     	;# 
   418  038C                     	;# 
   419  038D                     	;# 
   420  0394                     	;# 
   421  0395                     	;# 
   422  0396                     	;# 
   423  040C                     	;# 
   424  040D                     	;# 
   425  0415                     	;# 
   426  0416                     	;# 
   427  0417                     	;# 
   428  041C                     	;# 
   429  041D                     	;# 
   430  041E                     	;# 
   431  048D                     	;# 
   432  0491                     	;# 
   433  0492                     	;# 
   434  0493                     	;# 
   435  0493                     	;# 
   436  0494                     	;# 
   437  0495                     	;# 
   438  0496                     	;# 
   439  0497                     	;# 
   440  0791                     	;# 
   441  0792                     	;# 
   442  0793                     	;# 
   443  0794                     	;# 
   444  0795                     	;# 
   445  0798                     	;# 
   446  0799                     	;# 
   447  079A                     	;# 
   448  079B                     	;# 
   449  079C                     	;# 
   450  079D                     	;# 
   451  07A0                     	;# 
   452  07A1                     	;# 
   453  07A2                     	;# 
   454  07A3                     	;# 
   455  07A4                     	;# 
   456  07A5                     	;# 
   457  07A6                     	;# 
   458  07A7                     	;# 
   459  07A8                     	;# 
   460  07A9                     	;# 
   461  07AA                     	;# 
   462  07AB                     	;# 
   463  07AC                     	;# 
   464  07AD                     	;# 
   465  07AE                     	;# 
   466  07AF                     	;# 
   467  07B0                     	;# 
   468  07B1                     	;# 
   469  07B2                     	;# 
   470  07B3                     	;# 
   471  07B4                     	;# 
   472  07B5                     	;# 
   473  07B6                     	;# 
   474  07B7                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  000F                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0013                     	;# 
   506  0014                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  001E                     	;# 
   517  001F                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009B                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  010C                     	;# 
   539  010D                     	;# 
   540  010E                     	;# 
   541  010F                     	;# 
   542  0110                     	;# 
   543  0111                     	;# 
   544  0112                     	;# 
   545  0113                     	;# 
   546  0114                     	;# 
   547  0115                     	;# 
   548  0116                     	;# 
   549  0117                     	;# 
   550  0118                     	;# 
   551  0119                     	;# 
   552  011A                     	;# 
   553  011B                     	;# 
   554  011D                     	;# 
   555  011E                     	;# 
   556  011F                     	;# 
   557  018C                     	;# 
   558  0190                     	;# 
   559  0191                     	;# 
   560  0191                     	;# 
   561  0192                     	;# 
   562  0193                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0194                     	;# 
   566  0195                     	;# 
   567  0196                     	;# 
   568  0199                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019A                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019C                     	;# 
   577  019C                     	;# 
   578  019D                     	;# 
   579  019D                     	;# 
   580  019E                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  019F                     	;# 
   584  020D                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  0212                     	;# 
   588  0212                     	;# 
   589  0213                     	;# 
   590  0213                     	;# 
   591  0214                     	;# 
   592  0214                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0216                     	;# 
   597  0216                     	;# 
   598  0217                     	;# 
   599  0217                     	;# 
   600  0219                     	;# 
   601  021A                     	;# 
   602  021B                     	;# 
   603  021C                     	;# 
   604  021D                     	;# 
   605  021E                     	;# 
   606  021F                     	;# 
   607  028C                     	;# 
   608  028D                     	;# 
   609  0291                     	;# 
   610  0291                     	;# 
   611  0292                     	;# 
   612  0293                     	;# 
   613  0294                     	;# 
   614  0295                     	;# 
   615  0295                     	;# 
   616  0296                     	;# 
   617  0298                     	;# 
   618  0298                     	;# 
   619  0299                     	;# 
   620  029A                     	;# 
   621  029B                     	;# 
   622  029C                     	;# 
   623  029C                     	;# 
   624  029D                     	;# 
   625  029E                     	;# 
   626  029F                     	;# 
   627  030C                     	;# 
   628  030D                     	;# 
   629  0311                     	;# 
   630  0311                     	;# 
   631  0312                     	;# 
   632  0313                     	;# 
   633  0314                     	;# 
   634  0315                     	;# 
   635  0315                     	;# 
   636  0316                     	;# 
   637  0318                     	;# 
   638  0318                     	;# 
   639  0319                     	;# 
   640  031A                     	;# 
   641  031C                     	;# 
   642  031C                     	;# 
   643  031D                     	;# 
   644  031E                     	;# 
   645  038C                     	;# 
   646  038D                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  040C                     	;# 
   651  040D                     	;# 
   652  0415                     	;# 
   653  0416                     	;# 
   654  0417                     	;# 
   655  041C                     	;# 
   656  041D                     	;# 
   657  041E                     	;# 
   658  048D                     	;# 
   659  0491                     	;# 
   660  0492                     	;# 
   661  0493                     	;# 
   662  0493                     	;# 
   663  0494                     	;# 
   664  0495                     	;# 
   665  0496                     	;# 
   666  0497                     	;# 
   667  0791                     	;# 
   668  0792                     	;# 
   669  0793                     	;# 
   670  0794                     	;# 
   671  0795                     	;# 
   672  0798                     	;# 
   673  0799                     	;# 
   674  079A                     	;# 
   675  079B                     	;# 
   676  079C                     	;# 
   677  079D                     	;# 
   678  07A0                     	;# 
   679  07A1                     	;# 
   680  07A2                     	;# 
   681  07A3                     	;# 
   682  07A4                     	;# 
   683  07A5                     	;# 
   684  07A6                     	;# 
   685  07A7                     	;# 
   686  07A8                     	;# 
   687  07A9                     	;# 
   688  07AA                     	;# 
   689  07AB                     	;# 
   690  07AC                     	;# 
   691  07AD                     	;# 
   692  07AE                     	;# 
   693  07AF                     	;# 
   694  07B0                     	;# 
   695  07B1                     	;# 
   696  07B2                     	;# 
   697  07B3                     	;# 
   698  07B4                     	;# 
   699  07B5                     	;# 
   700  07B6                     	;# 
   701  07B7                     	;# 
   702  0FE4                     	;# 
   703  0FE5                     	;# 
   704  0FE6                     	;# 
   705  0FE7                     	;# 
   706  0FE8                     	;# 
   707  0FE9                     	;# 
   708  0FEA                     	;# 
   709  0FEB                     	;# 
   710  0FED                     	;# 
   711  0FEE                     	;# 
   712  0FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000D                     	;# 
   727  000E                     	;# 
   728  000F                     	;# 
   729  0010                     	;# 
   730  0011                     	;# 
   731  0012                     	;# 
   732  0013                     	;# 
   733  0014                     	;# 
   734  0015                     	;# 
   735  0016                     	;# 
   736  0016                     	;# 
   737  0017                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  001A                     	;# 
   741  001B                     	;# 
   742  001C                     	;# 
   743  001E                     	;# 
   744  001F                     	;# 
   745  008C                     	;# 
   746  008D                     	;# 
   747  008E                     	;# 
   748  008F                     	;# 
   749  0090                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0093                     	;# 
   753  0094                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010F                     	;# 
   769  0110                     	;# 
   770  0111                     	;# 
   771  0112                     	;# 
   772  0113                     	;# 
   773  0114                     	;# 
   774  0115                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0118                     	;# 
   778  0119                     	;# 
   779  011A                     	;# 
   780  011B                     	;# 
   781  011D                     	;# 
   782  011E                     	;# 
   783  011F                     	;# 
   784  018C                     	;# 
   785  0190                     	;# 
   786  0191                     	;# 
   787  0191                     	;# 
   788  0192                     	;# 
   789  0193                     	;# 
   790  0193                     	;# 
   791  0193                     	;# 
   792  0194                     	;# 
   793  0195                     	;# 
   794  0196                     	;# 
   795  0199                     	;# 
   796  0199                     	;# 
   797  019A                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019D                     	;# 
   807  019E                     	;# 
   808  019E                     	;# 
   809  019F                     	;# 
   810  019F                     	;# 
   811  020D                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  0219                     	;# 
   828  021A                     	;# 
   829  021B                     	;# 
   830  021C                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  028C                     	;# 
   835  028D                     	;# 
   836  0291                     	;# 
   837  0291                     	;# 
   838  0292                     	;# 
   839  0293                     	;# 
   840  0294                     	;# 
   841  0295                     	;# 
   842  0295                     	;# 
   843  0296                     	;# 
   844  0298                     	;# 
   845  0298                     	;# 
   846  0299                     	;# 
   847  029A                     	;# 
   848  029B                     	;# 
   849  029C                     	;# 
   850  029C                     	;# 
   851  029D                     	;# 
   852  029E                     	;# 
   853  029F                     	;# 
   854  030C                     	;# 
   855  030D                     	;# 
   856  0311                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0314                     	;# 
   861  0315                     	;# 
   862  0315                     	;# 
   863  0316                     	;# 
   864  0318                     	;# 
   865  0318                     	;# 
   866  0319                     	;# 
   867  031A                     	;# 
   868  031C                     	;# 
   869  031C                     	;# 
   870  031D                     	;# 
   871  031E                     	;# 
   872  038C                     	;# 
   873  038D                     	;# 
   874  0394                     	;# 
   875  0395                     	;# 
   876  0396                     	;# 
   877  040C                     	;# 
   878  040D                     	;# 
   879  0415                     	;# 
   880  0416                     	;# 
   881  0417                     	;# 
   882  041C                     	;# 
   883  041D                     	;# 
   884  041E                     	;# 
   885  048D                     	;# 
   886  0491                     	;# 
   887  0492                     	;# 
   888  0493                     	;# 
   889  0493                     	;# 
   890  0494                     	;# 
   891  0495                     	;# 
   892  0496                     	;# 
   893  0497                     	;# 
   894  0791                     	;# 
   895  0792                     	;# 
   896  0793                     	;# 
   897  0794                     	;# 
   898  0795                     	;# 
   899  0798                     	;# 
   900  0799                     	;# 
   901  079A                     	;# 
   902  079B                     	;# 
   903  079C                     	;# 
   904  079D                     	;# 
   905  07A0                     	;# 
   906  07A1                     	;# 
   907  07A2                     	;# 
   908  07A3                     	;# 
   909  07A4                     	;# 
   910  07A5                     	;# 
   911  07A6                     	;# 
   912  07A7                     	;# 
   913  07A8                     	;# 
   914  07A9                     	;# 
   915  07AA                     	;# 
   916  07AB                     	;# 
   917  07AC                     	;# 
   918  07AD                     	;# 
   919  07AE                     	;# 
   920  07AF                     	;# 
   921  07B0                     	;# 
   922  07B1                     	;# 
   923  07B2                     	;# 
   924  07B3                     	;# 
   925  07B4                     	;# 
   926  07B5                     	;# 
   927  07B6                     	;# 
   928  07B7                     	;# 
   929  0FE4                     	;# 
   930  0FE5                     	;# 
   931  0FE6                     	;# 
   932  0FE7                     	;# 
   933  0FE8                     	;# 
   934  0FE9                     	;# 
   935  0FEA                     	;# 
   936  0FEB                     	;# 
   937  0FED                     	;# 
   938  0FEE                     	;# 
   939  0FEF                     	;# 
   940  0000                     	;# 
   941  0001                     	;# 
   942  0002                     	;# 
   943  0003                     	;# 
   944  0004                     	;# 
   945  0005                     	;# 
   946  0006                     	;# 
   947  0007                     	;# 
   948  0008                     	;# 
   949  0009                     	;# 
   950  000A                     	;# 
   951  000B                     	;# 
   952  000C                     	;# 
   953  000D                     	;# 
   954  000E                     	;# 
   955  000F                     	;# 
   956  0010                     	;# 
   957  0011                     	;# 
   958  0012                     	;# 
   959  0013                     	;# 
   960  0014                     	;# 
   961  0015                     	;# 
   962  0016                     	;# 
   963  0016                     	;# 
   964  0017                     	;# 
   965  0018                     	;# 
   966  0019                     	;# 
   967  001A                     	;# 
   968  001B                     	;# 
   969  001C                     	;# 
   970  001E                     	;# 
   971  001F                     	;# 
   972  008C                     	;# 
   973  008D                     	;# 
   974  008E                     	;# 
   975  008F                     	;# 
   976  0090                     	;# 
   977  0091                     	;# 
   978  0092                     	;# 
   979  0093                     	;# 
   980  0094                     	;# 
   981  0095                     	;# 
   982  0096                     	;# 
   983  0097                     	;# 
   984  0098                     	;# 
   985  0099                     	;# 
   986  009A                     	;# 
   987  009B                     	;# 
   988  009B                     	;# 
   989  009C                     	;# 
   990  009D                     	;# 
   991  009E                     	;# 
   992  010C                     	;# 
   993  010D                     	;# 
   994  010E                     	;# 
   995  010F                     	;# 
   996  0110                     	;# 
   997  0111                     	;# 
   998  0112                     	;# 
   999  0113                     	;# 
  1000  0114                     	;# 
  1001  0115                     	;# 
  1002  0116                     	;# 
  1003  0117                     	;# 
  1004  0118                     	;# 
  1005  0119                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011D                     	;# 
  1009  011E                     	;# 
  1010  011F                     	;# 
  1011  018C                     	;# 
  1012  0190                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0193                     	;# 
  1019  0194                     	;# 
  1020  0195                     	;# 
  1021  0196                     	;# 
  1022  0199                     	;# 
  1023  0199                     	;# 
  1024  019A                     	;# 
  1025  019A                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019D                     	;# 
  1033  019D                     	;# 
  1034  019E                     	;# 
  1035  019E                     	;# 
  1036  019F                     	;# 
  1037  019F                     	;# 
  1038  020D                     	;# 
  1039  0211                     	;# 
  1040  0211                     	;# 
  1041  0212                     	;# 
  1042  0212                     	;# 
  1043  0213                     	;# 
  1044  0213                     	;# 
  1045  0214                     	;# 
  1046  0214                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0215                     	;# 
  1050  0216                     	;# 
  1051  0216                     	;# 
  1052  0217                     	;# 
  1053  0217                     	;# 
  1054  0219                     	;# 
  1055  021A                     	;# 
  1056  021B                     	;# 
  1057  021C                     	;# 
  1058  021D                     	;# 
  1059  021E                     	;# 
  1060  021F                     	;# 
  1061  028C                     	;# 
  1062  028D                     	;# 
  1063  0291                     	;# 
  1064  0291                     	;# 
  1065  0292                     	;# 
  1066  0293                     	;# 
  1067  0294                     	;# 
  1068  0295                     	;# 
  1069  0295                     	;# 
  1070  0296                     	;# 
  1071  0298                     	;# 
  1072  0298                     	;# 
  1073  0299                     	;# 
  1074  029A                     	;# 
  1075  029B                     	;# 
  1076  029C                     	;# 
  1077  029C                     	;# 
  1078  029D                     	;# 
  1079  029E                     	;# 
  1080  029F                     	;# 
  1081  030C                     	;# 
  1082  030D                     	;# 
  1083  0311                     	;# 
  1084  0311                     	;# 
  1085  0312                     	;# 
  1086  0313                     	;# 
  1087  0314                     	;# 
  1088  0315                     	;# 
  1089  0315                     	;# 
  1090  0316                     	;# 
  1091  0318                     	;# 
  1092  0318                     	;# 
  1093  0319                     	;# 
  1094  031A                     	;# 
  1095  031C                     	;# 
  1096  031C                     	;# 
  1097  031D                     	;# 
  1098  031E                     	;# 
  1099  038C                     	;# 
  1100  038D                     	;# 
  1101  0394                     	;# 
  1102  0395                     	;# 
  1103  0396                     	;# 
  1104  040C                     	;# 
  1105  040D                     	;# 
  1106  0415                     	;# 
  1107  0416                     	;# 
  1108  0417                     	;# 
  1109  041C                     	;# 
  1110  041D                     	;# 
  1111  041E                     	;# 
  1112  048D                     	;# 
  1113  0491                     	;# 
  1114  0492                     	;# 
  1115  0493                     	;# 
  1116  0493                     	;# 
  1117  0494                     	;# 
  1118  0495                     	;# 
  1119  0496                     	;# 
  1120  0497                     	;# 
  1121  0791                     	;# 
  1122  0792                     	;# 
  1123  0793                     	;# 
  1124  0794                     	;# 
  1125  0795                     	;# 
  1126  0798                     	;# 
  1127  0799                     	;# 
  1128  079A                     	;# 
  1129  079B                     	;# 
  1130  079C                     	;# 
  1131  079D                     	;# 
  1132  07A0                     	;# 
  1133  07A1                     	;# 
  1134  07A2                     	;# 
  1135  07A3                     	;# 
  1136  07A4                     	;# 
  1137  07A5                     	;# 
  1138  07A6                     	;# 
  1139  07A7                     	;# 
  1140  07A8                     	;# 
  1141  07A9                     	;# 
  1142  07AA                     	;# 
  1143  07AB                     	;# 
  1144  07AC                     	;# 
  1145  07AD                     	;# 
  1146  07AE                     	;# 
  1147  07AF                     	;# 
  1148  07B0                     	;# 
  1149  07B1                     	;# 
  1150  07B2                     	;# 
  1151  07B3                     	;# 
  1152  07B4                     	;# 
  1153  07B5                     	;# 
  1154  07B6                     	;# 
  1155  07B7                     	;# 
  1156  0FE4                     	;# 
  1157  0FE5                     	;# 
  1158  0FE6                     	;# 
  1159  0FE7                     	;# 
  1160  0FE8                     	;# 
  1161  0FE9                     	;# 
  1162  0FEA                     	;# 
  1163  0FEB                     	;# 
  1164  0FED                     	;# 
  1165  0FEE                     	;# 
  1166  0FEF                     	;# 
  1167  0000                     	;# 
  1168  0001                     	;# 
  1169  0002                     	;# 
  1170  0003                     	;# 
  1171  0004                     	;# 
  1172  0005                     	;# 
  1173  0006                     	;# 
  1174  0007                     	;# 
  1175  0008                     	;# 
  1176  0009                     	;# 
  1177  000A                     	;# 
  1178  000B                     	;# 
  1179  000C                     	;# 
  1180  000D                     	;# 
  1181  000E                     	;# 
  1182  000F                     	;# 
  1183  0010                     	;# 
  1184  0011                     	;# 
  1185  0012                     	;# 
  1186  0013                     	;# 
  1187  0014                     	;# 
  1188  0015                     	;# 
  1189  0016                     	;# 
  1190  0016                     	;# 
  1191  0017                     	;# 
  1192  0018                     	;# 
  1193  0019                     	;# 
  1194  001A                     	;# 
  1195  001B                     	;# 
  1196  001C                     	;# 
  1197  001E                     	;# 
  1198  001F                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  008F                     	;# 
  1203  0090                     	;# 
  1204  0091                     	;# 
  1205  0092                     	;# 
  1206  0093                     	;# 
  1207  0094                     	;# 
  1208  0095                     	;# 
  1209  0096                     	;# 
  1210  0097                     	;# 
  1211  0098                     	;# 
  1212  0099                     	;# 
  1213  009A                     	;# 
  1214  009B                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  010F                     	;# 
  1223  0110                     	;# 
  1224  0111                     	;# 
  1225  0112                     	;# 
  1226  0113                     	;# 
  1227  0114                     	;# 
  1228  0115                     	;# 
  1229  0116                     	;# 
  1230  0117                     	;# 
  1231  0118                     	;# 
  1232  0119                     	;# 
  1233  011A                     	;# 
  1234  011B                     	;# 
  1235  011D                     	;# 
  1236  011E                     	;# 
  1237  011F                     	;# 
  1238  018C                     	;# 
  1239  0190                     	;# 
  1240  0191                     	;# 
  1241  0191                     	;# 
  1242  0192                     	;# 
  1243  0193                     	;# 
  1244  0193                     	;# 
  1245  0193                     	;# 
  1246  0194                     	;# 
  1247  0195                     	;# 
  1248  0196                     	;# 
  1249  0199                     	;# 
  1250  0199                     	;# 
  1251  019A                     	;# 
  1252  019A                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  020D                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0214                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  028C                     	;# 
  1289  028D                     	;# 
  1290  0291                     	;# 
  1291  0291                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0298                     	;# 
  1299  0298                     	;# 
  1300  0299                     	;# 
  1301  029A                     	;# 
  1302  029B                     	;# 
  1303  029C                     	;# 
  1304  029C                     	;# 
  1305  029D                     	;# 
  1306  029E                     	;# 
  1307  029F                     	;# 
  1308  030C                     	;# 
  1309  030D                     	;# 
  1310  0311                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0314                     	;# 
  1315  0315                     	;# 
  1316  0315                     	;# 
  1317  0316                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  031C                     	;# 
  1323  031C                     	;# 
  1324  031D                     	;# 
  1325  031E                     	;# 
  1326  038C                     	;# 
  1327  038D                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  040C                     	;# 
  1332  040D                     	;# 
  1333  0415                     	;# 
  1334  0416                     	;# 
  1335  0417                     	;# 
  1336  041C                     	;# 
  1337  041D                     	;# 
  1338  041E                     	;# 
  1339  048D                     	;# 
  1340  0491                     	;# 
  1341  0492                     	;# 
  1342  0493                     	;# 
  1343  0493                     	;# 
  1344  0494                     	;# 
  1345  0495                     	;# 
  1346  0496                     	;# 
  1347  0497                     	;# 
  1348  0791                     	;# 
  1349  0792                     	;# 
  1350  0793                     	;# 
  1351  0794                     	;# 
  1352  0795                     	;# 
  1353  0798                     	;# 
  1354  0799                     	;# 
  1355  079A                     	;# 
  1356  079B                     	;# 
  1357  079C                     	;# 
  1358  079D                     	;# 
  1359  07A0                     	;# 
  1360  07A1                     	;# 
  1361  07A2                     	;# 
  1362  07A3                     	;# 
  1363  07A4                     	;# 
  1364  07A5                     	;# 
  1365  07A6                     	;# 
  1366  07A7                     	;# 
  1367  07A8                     	;# 
  1368  07A9                     	;# 
  1369  07AA                     	;# 
  1370  07AB                     	;# 
  1371  07AC                     	;# 
  1372  07AD                     	;# 
  1373  07AE                     	;# 
  1374  07AF                     	;# 
  1375  07B0                     	;# 
  1376  07B1                     	;# 
  1377  07B2                     	;# 
  1378  07B3                     	;# 
  1379  07B4                     	;# 
  1380  07B5                     	;# 
  1381  07B6                     	;# 
  1382  07B7                     	;# 
  1383  0FE4                     	;# 
  1384  0FE5                     	;# 
  1385  0FE6                     	;# 
  1386  0FE7                     	;# 
  1387  0FE8                     	;# 
  1388  0FE9                     	;# 
  1389  0FEA                     	;# 
  1390  0FEB                     	;# 
  1391  0FED                     	;# 
  1392  0FEE                     	;# 
  1393  0FEF                     	;_delay_time
  1394                           
  1395                           	psect	nvBANK0
  1396  004E                     __pnvBANK0:	
  1397  004E                     _eusart1TxBufferRemaining:	
  1398  004E                     	ds	1
  1399  004F                     _eusart2TxBufferRemaining:	
  1400  004F                     	ds	1
  1401  000B                     _INTCONbits	set	11
  1402  0011                     _PIR1bits	set	17
  1403  0014                     _PIR4bits	set	20
  1404  0095                     _OPTION_REGbits	set	149
  1405  0099                     _OSCCON	set	153
  1406  009A                     _OSCSTAT	set	154
  1407  0098                     _OSCTUNE	set	152
  1408  0091                     _PIE1bits	set	145
  1409  0094                     _PIE4bits	set	148
  1410  008C                     _TRISA	set	140
  1411  008D                     _TRISB	set	141
  1412  008E                     _TRISC	set	142
  1413  008F                     _TRISD	set	143
  1414  0090                     _TRISE	set	144
  1415  011D                     _APFCON	set	285
  1416  010C                     _LATA	set	268
  1417  010D                     _LATB	set	269
  1418  010E                     _LATC	set	270
  1419  010F                     _LATD	set	271
  1420  0110                     _LATE	set	272
  1421  0869                     _LATB1	set	2153
  1422  086A                     _LATB2	set	2154
  1423  086B                     _LATB3	set	2155
  1424  086C                     _LATB4	set	2156
  1425  086D                     _LATB5	set	2157
  1426  086F                     _LATB7	set	2159
  1427  0871                     _LATC1	set	2161
  1428  0878                     _LATD0	set	2168
  1429  0879                     _LATD1	set	2169
  1430  087A                     _LATD2	set	2170
  1431  087B                     _LATD3	set	2171
  1432  087C                     _LATD4	set	2172
  1433  087D                     _LATD5	set	2173
  1434  087E                     _LATD6	set	2174
  1435  087F                     _LATD7	set	2175
  1436  0880                     _LATE0	set	2176
  1437  0881                     _LATE1	set	2177
  1438  0882                     _LATE2	set	2178
  1439  0883                     _LATE3	set	2179
  1440  0884                     _LATE4	set	2180
  1441  0885                     _LATE5	set	2181
  1442  0886                     _LATE6	set	2182
  1443  0887                     _LATE7	set	2183
  1444  018C                     _ANSELA	set	396
  1445  0190                     _ANSELE	set	400
  1446  019F                     _BAUD1CON	set	415
  1447  0199                     _RC1REG	set	409
  1448  019D                     _RC1STA	set	413
  1449  019D                     _RC1STAbits	set	413
  1450  019C                     _SP1BRGH	set	412
  1451  019B                     _SP1BRGL	set	411
  1452  019A                     _TX1REG	set	410
  1453  019E                     _TX1STA	set	414
  1454  020D                     _WPUB	set	525
  1455  030C                     _TRISF	set	780
  1456  030D                     _TRISG	set	781
  1457  038C                     _LATF	set	908
  1458  038D                     _LATG	set	909
  1459  1CB0                     _IOCBF0	set	7344
  1460  1CA8                     _IOCBN0	set	7336
  1461  1C60                     _LATF0	set	7264
  1462  1C61                     _LATF1	set	7265
  1463  1C62                     _LATF2	set	7266
  1464  1C63                     _LATF3	set	7267
  1465  1C64                     _LATF4	set	7268
  1466  1C65                     _LATF5	set	7269
  1467  1C66                     _LATF6	set	7270
  1468  1C67                     _LATF7	set	7271
  1469  040C                     _ANSELF	set	1036
  1470  040D                     _ANSELG	set	1037
  1471  0497                     _BAUD2CON	set	1175
  1472  0491                     _RC2REG	set	1169
  1473  0495                     _RC2STA	set	1173
  1474  0495                     _RC2STAbits	set	1173
  1475  0494                     _SP2BRGH	set	1172
  1476  0493                     _SP2BRGL	set	1171
  1477  0492                     _TX2REG	set	1170
  1478  0496                     _TX2STA	set	1174
  1479  048D                     _WPUG	set	1165
  1480                           
  1481                           ; #config settings
  1482  0000                     
  1483                           	psect	cinit
  1484  003E                     start_initialization:	
  1485  003E                     __initialization:		;BIGRAM
  1486                           
  1487                           ; Clear objects allocated to BIGRAM
  1488  003E  3030               	movlw	low (0+9008)
  1489  003F  0084               	movwf	4
  1490  0040  3023               	movlw	high (0+9008)
  1491  0041  0085               	movwf	5
  1492  0042  30C0               	movlw	192
  1493  0043  00FE               	movwf	btemp
  1494  0044  3000               	movlw	0
  1495  0045  00FF               	movwf	btemp+1
  1496  0046  3183  2372  3180   	fcall	clear_ram0
  1497                           
  1498                           ; Clear objects allocated to COMMON
  1499  0049  01F8               	clrf	__pbssCOMMON& (0+127)
  1500  004A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1501  004B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1502  004C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1503                           
  1504                           ; Clear objects allocated to BANK0
  1505  004D  3020               	movlw	low __pbssBANK0
  1506  004E  0084               	movwf	4
  1507  004F  3000               	movlw	high __pbssBANK0
  1508  0050  0085               	movwf	5
  1509  0051  3028               	movlw	40
  1510  0052  00FE               	movwf	btemp
  1511  0053  3000               	movlw	0
  1512  0054  00FF               	movwf	btemp+1
  1513  0055  3183  2372         	fcall	clear_ram0
  1514  0057                     end_of_initialization:	
  1515                           ;End of C runtime variable initialization code
  1516                           
  1517  0057                     __end_of__initialization:	
  1518  0057  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1519  0058  0020               	movlb	0
  1520  0059  3181  29F5         	ljmp	_main	;jump to C main() function
  1521                           
  1522                           	psect	bssCOMMON
  1523  0078                     __pbssCOMMON:	
  1524  0078                     _delay_ptr:	
  1525  0078                     	ds	1
  1526  0079                     _eusart2RxHead:	
  1527  0079                     	ds	1
  1528  007A                     _eusart2TxHead:	
  1529  007A                     	ds	1
  1530  007B                     _eusart2TxTail:	
  1531  007B                     	ds	1
  1532                           
  1533                           	psect	bssBANK0
  1534  0020                     __pbssBANK0:	
  1535  0020                     _eusart1RxBuffer:	
  1536  0020                     	ds	8
  1537  0028                     _eusart1TxBuffer:	
  1538  0028                     	ds	8
  1539  0030                     _eusart2RxBuffer:	
  1540  0030                     	ds	8
  1541  0038                     _eusart2TxBuffer:	
  1542  0038                     	ds	8
  1543  0040                     _current_column_position:	
  1544  0040                     	ds	1
  1545  0041                     _eusart1RxCount:	
  1546  0041                     	ds	1
  1547  0042                     _eusart1RxHead:	
  1548  0042                     	ds	1
  1549  0043                     _eusart1RxTail:	
  1550  0043                     	ds	1
  1551  0044                     _eusart1TxHead:	
  1552  0044                     	ds	1
  1553  0045                     _eusart1TxTail:	
  1554  0045                     	ds	1
  1555  0046                     _eusart2RxCount:	
  1556  0046                     	ds	1
  1557  0047                     _eusart2RxTail:	
  1558  0047                     	ds	1
  1559                           
  1560                           	psect	clrtext
  1561  0372                     clear_ram0:	
  1562                           ;	Called with FSR0 containing the base address, and
  1563                           ;	btemp/btemp+1 has the size to clear
  1564                           
  1565  0372  0064               	clrwdt	;clear the watchdog before getting into this loop
  1566  0373                     clrloop0:	
  1567  0373  0180               	clrf	0	;clear RAM location pointed to by FSR
  1568  0374  3101               	addfsr 0,1
  1569  0375  3001               	movlw	1
  1570  0376  02FE               	subwf	126,f
  1571  0377  3000               	movlw	0
  1572  0378  3BFF               	subwfb	127,f
  1573  0379  087F               	movf	127,w
  1574  037A  047E               	iorwf	126,w
  1575  037B  1903               	btfsc	3,2
  1576  037C  3400               	retlw	0	;all done for this memory range, return
  1577  037D  2B73               	goto	clrloop0	;have we reached the end yet?
  1578                           
  1579                           	psect	cstackCOMMON
  1580  0070                     __pcstackCOMMON:	
  1581  0070                     ?_OSCILLATOR_Initialize:	
  1582  0070                     ?_strobe_all:	
  1583                           ; 0 bytes @ 0x0
  1584                           
  1585  0070                     ?_big_switch_rows:	
  1586                           ; 0 bytes @ 0x0
  1587                           
  1588  0070                     ?_big_switch_columns:	
  1589                           ; 0 bytes @ 0x0
  1590                           
  1591  0070                     ?_my_delay:	
  1592                           ; 0 bytes @ 0x0
  1593                           
  1594  0070                     ?_EUSART2_Initialize:	
  1595                           ; 0 bytes @ 0x0
  1596                           
  1597  0070                     ?_EUSART2_Transmit_ISR:	
  1598                           ; 0 bytes @ 0x0
  1599                           
  1600  0070                     ??_EUSART2_Transmit_ISR:	
  1601                           ; 0 bytes @ 0x0
  1602                           
  1603  0070                     ?_EUSART2_Receive_ISR:	
  1604                           ; 0 bytes @ 0x0
  1605                           
  1606  0070                     ??_EUSART2_Receive_ISR:	
  1607                           ; 0 bytes @ 0x0
  1608                           
  1609  0070                     ?_EUSART1_Initialize:	
  1610                           ; 0 bytes @ 0x0
  1611                           
  1612  0070                     ?_EUSART1_Transmit_ISR:	
  1613                           ; 0 bytes @ 0x0
  1614                           
  1615  0070                     ??_EUSART1_Transmit_ISR:	
  1616                           ; 0 bytes @ 0x0
  1617                           
  1618  0070                     ?_EUSART1_Receive_ISR:	
  1619                           ; 0 bytes @ 0x0
  1620                           
  1621  0070                     ??_EUSART1_Receive_ISR:	
  1622                           ; 0 bytes @ 0x0
  1623                           
  1624  0070                     ?_PIN_MANAGER_Initialize:	
  1625                           ; 0 bytes @ 0x0
  1626                           
  1627  0070                     ?_PIN_MANAGER_IOC:	
  1628                           ; 0 bytes @ 0x0
  1629                           
  1630  0070                     ??_PIN_MANAGER_IOC:	
  1631                           ; 0 bytes @ 0x0
  1632                           
  1633  0070                     ?_INTERRUPT_InterruptManager:	
  1634                           ; 0 bytes @ 0x0
  1635                           
  1636  0070                     ?_SYSTEM_Initialize:	
  1637                           ; 0 bytes @ 0x0
  1638                           
  1639  0070                     ?_main:	
  1640                           ; 0 bytes @ 0x0
  1641                           
  1642                           
  1643                           ; 0 bytes @ 0x0
  1644  0070                     	ds	1
  1645  0071                     ??_INTERRUPT_InterruptManager:	
  1646                           
  1647                           ; 0 bytes @ 0x1
  1648  0071                     	ds	1
  1649  0072                     ??_OSCILLATOR_Initialize:	
  1650  0072                     ??_my_delay:	
  1651                           ; 0 bytes @ 0x2
  1652                           
  1653  0072                     ??_EUSART2_Initialize:	
  1654                           ; 0 bytes @ 0x2
  1655                           
  1656  0072                     ??_EUSART1_Initialize:	
  1657                           ; 0 bytes @ 0x2
  1658                           
  1659  0072                     ??_PIN_MANAGER_Initialize:	
  1660                           ; 0 bytes @ 0x2
  1661                           
  1662                           
  1663                           ; 0 bytes @ 0x2
  1664  0072                     	ds	1
  1665  0073                     ??_SYSTEM_Initialize:	
  1666  0073                     my_delay@dly:	
  1667                           ; 0 bytes @ 0x3
  1668                           
  1669                           
  1670                           ; 1 bytes @ 0x3
  1671  0073                     	ds	1
  1672  0074                     my_delay@x:	
  1673                           
  1674                           ; 1 bytes @ 0x4
  1675  0074                     	ds	1
  1676  0075                     ??_big_switch_columns:	
  1677                           
  1678                           ; 0 bytes @ 0x5
  1679  0075                     	ds	1
  1680  0076                     ??_big_switch_rows:	
  1681  0076                     big_switch_rows@pos:	
  1682                           ; 0 bytes @ 0x6
  1683                           
  1684                           
  1685                           ; 1 bytes @ 0x6
  1686  0076                     	ds	1
  1687  0077                     ??_strobe_all:	
  1688                           
  1689                           ; 0 bytes @ 0x7
  1690  0077                     	ds	1
  1691                           
  1692                           	psect	cstackBANK0
  1693  0048                     __pcstackBANK0:	
  1694  0048                     strobe_all@x:	
  1695                           
  1696                           ; 1 bytes @ 0x0
  1697  0048                     	ds	1
  1698  0049                     ??_main:	
  1699                           
  1700                           ; 0 bytes @ 0x1
  1701  0049                     	ds	4
  1702  004D                     main@x:	
  1703                           
  1704                           ; 1 bytes @ 0x5
  1705  004D                     	ds	1
  1706                           
  1707                           	psect	maintext
  1708  01F5                     __pmaintext:	
  1709 ;;
  1710 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1711 ;;
  1712 ;; *************** function _main *****************
  1713 ;; Defined at:
  1714 ;;		line 63 in file "main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  x               1    5[BANK0 ] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;		None               void
  1721 ;; Registers used:
  1722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : B1F/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;Total ram usage:        5 bytes
  1733 ;; Hardware stack levels required when called:    6
  1734 ;; This function calls:
  1735 ;;		_SYSTEM_Initialize
  1736 ;;		_strobe_all
  1737 ;; This function is called by:
  1738 ;;		Startup code after reset
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _main
  1744  01F5                     _main:	
  1745                           
  1746                           ;main.c: 65: unsigned char x;
  1747                           ;main.c: 67: SYSTEM_Initialize();
  1748                           
  1749                           ;incstack = 0
  1750                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1751  01F5  3183  237E  3181   	fcall	_SYSTEM_Initialize
  1752                           
  1753                           ;main.c: 77: for(x=0; x<192; x++)
  1754  01F8  0020               	movlb	0	; select bank0
  1755  01F9  01CD               	clrf	main@x
  1756  01FA  30C0               	movlw	192
  1757  01FB  024D               	subwf	main@x,w
  1758  01FC  1803               	btfsc	3,0
  1759  01FD  2A12               	goto	l1865
  1760  01FE                     l1859:	
  1761                           
  1762                           ;main.c: 78: delay_time[x] = 100;
  1763  01FE  084D               	movf	main@x,w
  1764  01FF  3E30               	addlw	48
  1765  0200  00C9               	movwf	??_main
  1766  0201  01CA               	clrf	??_main+1
  1767  0202  3023               	movlw	35
  1768  0203  3DCA               	addwfc	??_main+1,f
  1769  0204  0849               	movf	??_main,w
  1770  0205  0086               	movwf	6
  1771  0206  084A               	movf	??_main+1,w
  1772  0207  0087               	movwf	7
  1773  0208  3064               	movlw	100
  1774  0209  0081               	movwf	1
  1775  020A  3001               	movlw	1
  1776  020B  00C9               	movwf	??_main
  1777  020C  0849               	movf	??_main,w
  1778  020D  07CD               	addwf	main@x,f
  1779  020E  30C0               	movlw	192
  1780  020F  024D               	subwf	main@x,w
  1781  0210  1C03               	skipc
  1782  0211  29FE               	goto	l1859
  1783  0212                     l1865:	
  1784                           
  1785                           ;main.c: 80: for(x=0; x<192; x+=3)
  1786  0212  01CD               	clrf	main@x
  1787  0213  30C0               	movlw	192
  1788  0214  024D               	subwf	main@x,w
  1789  0215  1803               	btfsc	3,0
  1790  0216  2A4F               	goto	l1877
  1791  0217                     l1871:	
  1792                           
  1793                           ;main.c: 81: {
  1794                           ;main.c: 82: delay_time[x] = 100;
  1795  0217  084D               	movf	main@x,w
  1796  0218  3E30               	addlw	48
  1797  0219  00C9               	movwf	??_main
  1798  021A  01CA               	clrf	??_main+1
  1799  021B  3023               	movlw	35
  1800  021C  3DCA               	addwfc	??_main+1,f
  1801  021D  0849               	movf	??_main,w
  1802  021E  0086               	movwf	6
  1803  021F  084A               	movf	??_main+1,w
  1804  0220  0087               	movwf	7
  1805  0221  3064               	movlw	100
  1806  0222  0081               	movwf	1
  1807                           
  1808                           ;main.c: 83: delay_time[x+1] = 0;
  1809  0223  084D               	movf	main@x,w
  1810  0224  3E01               	addlw	1
  1811  0225  00C9               	movwf	??_main
  1812  0226  3000               	movlw	0
  1813  0227  1803               	skipnc
  1814  0228  3001               	movlw	1
  1815  0229  00CA               	movwf	??_main+1
  1816  022A  3030               	movlw	48
  1817  022B  00CB               	movwf	??_main+2
  1818  022C  3023               	movlw	35
  1819  022D  00CC               	movwf	??_main+3
  1820  022E  0849               	movf	??_main,w
  1821  022F  074B               	addwf	??_main+2,w
  1822  0230  0086               	movwf	6
  1823  0231  084A               	movf	??_main+1,w
  1824  0232  3D4C               	addwfc	??_main+3,w
  1825  0233  0087               	movwf	7
  1826  0234  0181               	clrf	1
  1827                           
  1828                           ;main.c: 84: delay_time[x+2] = 0;
  1829  0235  084D               	movf	main@x,w
  1830  0236  3E02               	addlw	2
  1831  0237  00C9               	movwf	??_main
  1832  0238  3000               	movlw	0
  1833  0239  1803               	skipnc
  1834  023A  3001               	movlw	1
  1835  023B  00CA               	movwf	??_main+1
  1836  023C  3030               	movlw	48
  1837  023D  00CB               	movwf	??_main+2
  1838  023E  3023               	movlw	35
  1839  023F  00CC               	movwf	??_main+3
  1840  0240  0849               	movf	??_main,w
  1841  0241  074B               	addwf	??_main+2,w
  1842  0242  0086               	movwf	6
  1843  0243  084A               	movf	??_main+1,w
  1844  0244  3D4C               	addwfc	??_main+3,w
  1845  0245  0087               	movwf	7
  1846  0246  0181               	clrf	1
  1847  0247  3003               	movlw	3
  1848  0248  00C9               	movwf	??_main
  1849  0249  0849               	movf	??_main,w
  1850  024A  07CD               	addwf	main@x,f
  1851  024B  30C0               	movlw	192
  1852  024C  024D               	subwf	main@x,w
  1853  024D  1C03               	skipc
  1854  024E  2A17               	goto	l1871
  1855  024F                     l1877:	
  1856                           ;main.c: 85: }
  1857                           ;main.c: 87: while (1)
  1858                           
  1859                           
  1860                           ;main.c: 88: {
  1861                           ;main.c: 89: strobe_all();
  1862  024F  3183  2361  3181   	fcall	_strobe_all
  1863  0252  2A4F               	goto	l1877
  1864  0253                     __end_of_main:	
  1865                           
  1866                           	psect	text1
  1867  0361                     __ptext1:	
  1868 ;; *************** function _strobe_all *****************
  1869 ;; Defined at:
  1870 ;;		line 94 in file "main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  x               1    0[BANK0 ] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;		None               void
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;Total ram usage:        2 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    5
  1891 ;; This function calls:
  1892 ;;		_big_switch_rows
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _strobe_all
  1900  0361                     _strobe_all:	
  1901                           
  1902                           ;main.c: 96: unsigned char x;
  1903                           ;main.c: 98: delay_ptr=0;
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _strobe_all: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1907  0361  01F8               	clrf	_delay_ptr
  1908                           
  1909                           ;main.c: 99: x=0x80;
  1910  0362  3080               	movlw	128
  1911  0363  00F7               	movwf	??_strobe_all
  1912  0364  0877               	movf	??_strobe_all,w
  1913  0365  0020               	movlb	0	; select bank0
  1914  0366  00C8               	movwf	strobe_all@x
  1915  0367                     l1849:	
  1916                           ;main.c: 100: while(x)
  1917                           
  1918  0367  0848               	movf	strobe_all@x,w
  1919  0368  1903               	btfsc	3,2
  1920  0369  0008               	return
  1921                           
  1922                           ;main.c: 101: {
  1923                           ;main.c: 102: big_switch_rows(x);
  1924  036A  0848               	movf	strobe_all@x,w
  1925  036B  3182  228C  3183   	fcall	_big_switch_rows
  1926                           
  1927                           ;main.c: 103: x >>= 1;
  1928  036E  1003               	clrc
  1929  036F  0020               	movlb	0	; select bank0
  1930  0370  0CC8               	rrf	strobe_all@x,f
  1931  0371  2B67               	goto	l1849
  1932  0372                     __end_of_strobe_all:	
  1933                           
  1934                           	psect	text2
  1935  028C                     __ptext2:	
  1936 ;; *************** function _big_switch_rows *****************
  1937 ;; Defined at:
  1938 ;;		line 110 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  pos             1    wreg     unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  pos             1    6[COMMON] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;Total ram usage:        1 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    4
  1959 ;; This function calls:
  1960 ;;		_big_switch_columns
  1961 ;; This function is called by:
  1962 ;;		_strobe_all
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _big_switch_rows
  1968  028C                     _big_switch_rows:	
  1969                           
  1970                           ;incstack = 0
  1971                           ; Regs used in _big_switch_rows: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1972                           ;big_switch_rows@pos stored from wreg
  1973  028C  00F6               	movwf	big_switch_rows@pos
  1974                           
  1975                           ;main.c: 112: if(pos & 0x80)
  1976  028D  1FF6               	btfss	big_switch_rows@pos,7
  1977  028E  2A93               	goto	l1823
  1978                           
  1979                           ;main.c: 113: {
  1980                           ;main.c: 114: do { LATC1 = 0; } while(0);
  1981  028F  0022               	movlb	2	; select bank2
  1982  0290  108E               	bcf	14,1	;volatile
  1983                           
  1984                           ;main.c: 115: do { LATB1 = 1; } while(0);
  1985  0291  148D               	bsf	13,1	;volatile
  1986                           
  1987                           ;main.c: 116: }
  1988  0292  2ABA               	goto	l1837
  1989  0293                     l1823:	
  1990                           
  1991                           ;main.c: 117: else if(pos & 0x40)
  1992  0293  1F76               	btfss	big_switch_rows@pos,6
  1993  0294  2A99               	goto	l1825
  1994                           
  1995                           ;main.c: 118: {
  1996                           ;main.c: 119: do { LATB1 = 0; } while(0);
  1997  0295  0022               	movlb	2	; select bank2
  1998  0296  108D               	bcf	13,1	;volatile
  1999                           
  2000                           ;main.c: 120: do { LATB2 = 1; } while(0);
  2001  0297  150D               	bsf	13,2	;volatile
  2002                           
  2003                           ;main.c: 121: }
  2004  0298  2ABA               	goto	l1837
  2005  0299                     l1825:	
  2006                           
  2007                           ;main.c: 122: else if(pos & 0x20)
  2008  0299  1EF6               	btfss	big_switch_rows@pos,5
  2009  029A  2A9F               	goto	l1827
  2010                           
  2011                           ;main.c: 123: {
  2012                           ;main.c: 124: do { LATB2 = 0; } while(0);
  2013  029B  0022               	movlb	2	; select bank2
  2014  029C  110D               	bcf	13,2	;volatile
  2015                           
  2016                           ;main.c: 125: do { LATB3 = 1; } while(0);
  2017  029D  158D               	bsf	13,3	;volatile
  2018                           
  2019                           ;main.c: 126: }
  2020  029E  2ABA               	goto	l1837
  2021  029F                     l1827:	
  2022                           
  2023                           ;main.c: 127: else if(pos & 0x10)
  2024  029F  1E76               	btfss	big_switch_rows@pos,4
  2025  02A0  2AA5               	goto	l1829
  2026                           
  2027                           ;main.c: 128: {
  2028                           ;main.c: 129: do { LATB3 = 0; } while(0);
  2029  02A1  0022               	movlb	2	; select bank2
  2030  02A2  118D               	bcf	13,3	;volatile
  2031                           
  2032                           ;main.c: 130: do { LATB4 = 1; } while(0);
  2033  02A3  160D               	bsf	13,4	;volatile
  2034                           
  2035                           ;main.c: 131: }
  2036  02A4  2ABA               	goto	l1837
  2037  02A5                     l1829:	
  2038                           
  2039                           ;main.c: 132: else if(pos & 0x08)
  2040  02A5  1DF6               	btfss	big_switch_rows@pos,3
  2041  02A6  2AAB               	goto	l1831
  2042                           
  2043                           ;main.c: 133: {
  2044                           ;main.c: 134: do { LATB4 = 0; } while(0);
  2045  02A7  0022               	movlb	2	; select bank2
  2046  02A8  120D               	bcf	13,4	;volatile
  2047                           
  2048                           ;main.c: 135: do { LATB5 = 1; } while(0);
  2049  02A9  168D               	bsf	13,5	;volatile
  2050                           
  2051                           ;main.c: 136: }
  2052  02AA  2ABA               	goto	l1837
  2053  02AB                     l1831:	
  2054                           
  2055                           ;main.c: 137: else if(pos & 0x04)
  2056  02AB  1D76               	btfss	big_switch_rows@pos,2
  2057  02AC  2AB0               	goto	l1833
  2058                           
  2059                           ;main.c: 138: {
  2060                           ;main.c: 139: do { LATB5 = 0; } while(0);
  2061  02AD  0022               	movlb	2	; select bank2
  2062  02AE  128D               	bcf	13,5	;volatile
  2063                           
  2064                           ;main.c: 141: }
  2065  02AF  2ABA               	goto	l1837
  2066  02B0                     l1833:	
  2067                           
  2068                           ;main.c: 142: else if(pos & 0x02)
  2069  02B0  1CF6               	btfss	big_switch_rows@pos,1
  2070  02B1  2AB5               	goto	l1835
  2071                           
  2072                           ;main.c: 143: {
  2073                           ;main.c: 145: do { LATB7 = 1; } while(0);
  2074  02B2  0022               	movlb	2	; select bank2
  2075  02B3  178D               	bsf	13,7	;volatile
  2076                           
  2077                           ;main.c: 146: }
  2078  02B4  2ABA               	goto	l1837
  2079  02B5                     l1835:	
  2080                           
  2081                           ;main.c: 147: else if(pos & 0x01)
  2082  02B5  1C76               	btfss	big_switch_rows@pos,0
  2083  02B6  2ABA               	goto	l1837
  2084                           
  2085                           ;main.c: 148: {
  2086                           ;main.c: 149: do { LATB7 = 0; } while(0);
  2087  02B7  0022               	movlb	2	; select bank2
  2088  02B8  138D               	bcf	13,7	;volatile
  2089                           
  2090                           ;main.c: 150: do { LATC1 = 1; } while(0);
  2091  02B9  148E               	bsf	14,1	;volatile
  2092  02BA                     l1837:	
  2093                           
  2094                           ;main.c: 151: }
  2095                           ;main.c: 153: big_switch_columns();
  2096  02BA  3180  205B         	fcall	_big_switch_columns
  2097  02BC  0008               	return
  2098  02BD                     __end_of_big_switch_rows:	
  2099                           
  2100                           	psect	text3
  2101  005B                     __ptext3:	
  2102 ;; *************** function _big_switch_columns *****************
  2103 ;; Defined at:
  2104 ;;		line 158 in file "main.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;		None               void
  2111 ;; Registers used:
  2112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;Total ram usage:        1 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    3
  2125 ;; This function calls:
  2126 ;;		_my_delay
  2127 ;; This function is called by:
  2128 ;;		_big_switch_rows
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           
  2133                           ;psect for function _big_switch_columns
  2134  005B                     _big_switch_columns:	
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in _big_switch_columns: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2138                           ;main.c: 160: do { LATF7 = 1; } while(0);
  2139  005B  0027               	movlb	7	; select bank7
  2140  005C  178C               	bsf	12,7	;volatile
  2141                           
  2142                           ;main.c: 161: do { LATD0 = 0; } while(0);
  2143  005D  0022               	movlb	2	; select bank2
  2144  005E  100F               	bcf	15,0	;volatile
  2145                           
  2146                           ;main.c: 163: my_delay(delay_time[delay_ptr++]);
  2147  005F  0878               	movf	_delay_ptr,w
  2148  0060  3E30               	addlw	48
  2149  0061  0086               	movwf	6
  2150  0062  0187               	clrf	7
  2151  0063  3023               	movlw	35
  2152  0064  3D87               	addwfc	7,f
  2153  0065  0801               	movf	1,w
  2154  0066  3183  238A  3180   	fcall	_my_delay
  2155  0069  3001               	movlw	1
  2156  006A  00F5               	movwf	??_big_switch_columns
  2157  006B  0875               	movf	??_big_switch_columns,w
  2158  006C  07F8               	addwf	_delay_ptr,f
  2159                           
  2160                           ;main.c: 164: do { LATD0 = 1; } while(0);
  2161  006D  0022               	movlb	2	; select bank2
  2162  006E  140F               	bsf	15,0	;volatile
  2163                           
  2164                           ;main.c: 165: do { LATD1 = 0; } while(0);
  2165  006F  108F               	bcf	15,1	;volatile
  2166                           
  2167                           ;main.c: 166: my_delay(delay_time[delay_ptr++]);
  2168  0070  0878               	movf	_delay_ptr,w
  2169  0071  3E30               	addlw	48
  2170  0072  0086               	movwf	6
  2171  0073  0187               	clrf	7
  2172  0074  3023               	movlw	35
  2173  0075  3D87               	addwfc	7,f
  2174  0076  0801               	movf	1,w
  2175  0077  3183  238A  3180   	fcall	_my_delay
  2176  007A  3001               	movlw	1
  2177  007B  00F5               	movwf	??_big_switch_columns
  2178  007C  0875               	movf	??_big_switch_columns,w
  2179  007D  07F8               	addwf	_delay_ptr,f
  2180                           
  2181                           ;main.c: 167: do { LATD1 = 1; } while(0);
  2182  007E  0022               	movlb	2	; select bank2
  2183  007F  148F               	bsf	15,1	;volatile
  2184                           
  2185                           ;main.c: 168: do { LATD2 = 0; } while(0);
  2186  0080  110F               	bcf	15,2	;volatile
  2187                           
  2188                           ;main.c: 169: my_delay(delay_time[delay_ptr++]);
  2189  0081  0878               	movf	_delay_ptr,w
  2190  0082  3E30               	addlw	48
  2191  0083  0086               	movwf	6
  2192  0084  0187               	clrf	7
  2193  0085  3023               	movlw	35
  2194  0086  3D87               	addwfc	7,f
  2195  0087  0801               	movf	1,w
  2196  0088  3183  238A  3180   	fcall	_my_delay
  2197  008B  3001               	movlw	1
  2198  008C  00F5               	movwf	??_big_switch_columns
  2199  008D  0875               	movf	??_big_switch_columns,w
  2200  008E  07F8               	addwf	_delay_ptr,f
  2201                           
  2202                           ;main.c: 170: do { LATD2 = 1; } while(0);
  2203  008F  0022               	movlb	2	; select bank2
  2204  0090  150F               	bsf	15,2	;volatile
  2205                           
  2206                           ;main.c: 171: do { LATD3 = 0; } while(0);
  2207  0091  118F               	bcf	15,3	;volatile
  2208                           
  2209                           ;main.c: 172: my_delay(delay_time[delay_ptr++]);
  2210  0092  0878               	movf	_delay_ptr,w
  2211  0093  3E30               	addlw	48
  2212  0094  0086               	movwf	6
  2213  0095  0187               	clrf	7
  2214  0096  3023               	movlw	35
  2215  0097  3D87               	addwfc	7,f
  2216  0098  0801               	movf	1,w
  2217  0099  3183  238A  3180   	fcall	_my_delay
  2218  009C  3001               	movlw	1
  2219  009D  00F5               	movwf	??_big_switch_columns
  2220  009E  0875               	movf	??_big_switch_columns,w
  2221  009F  07F8               	addwf	_delay_ptr,f
  2222                           
  2223                           ;main.c: 173: do { LATD3 = 1; } while(0);
  2224  00A0  0022               	movlb	2	; select bank2
  2225  00A1  158F               	bsf	15,3	;volatile
  2226                           
  2227                           ;main.c: 174: do { LATD4 = 0; } while(0);
  2228  00A2  120F               	bcf	15,4	;volatile
  2229                           
  2230                           ;main.c: 175: my_delay(delay_time[delay_ptr++]);
  2231  00A3  0878               	movf	_delay_ptr,w
  2232  00A4  3E30               	addlw	48
  2233  00A5  0086               	movwf	6
  2234  00A6  0187               	clrf	7
  2235  00A7  3023               	movlw	35
  2236  00A8  3D87               	addwfc	7,f
  2237  00A9  0801               	movf	1,w
  2238  00AA  3183  238A  3180   	fcall	_my_delay
  2239  00AD  3001               	movlw	1
  2240  00AE  00F5               	movwf	??_big_switch_columns
  2241  00AF  0875               	movf	??_big_switch_columns,w
  2242  00B0  07F8               	addwf	_delay_ptr,f
  2243                           
  2244                           ;main.c: 176: do { LATD4 = 1; } while(0);
  2245  00B1  0022               	movlb	2	; select bank2
  2246  00B2  160F               	bsf	15,4	;volatile
  2247                           
  2248                           ;main.c: 177: do { LATD5 = 0; } while(0);
  2249  00B3  128F               	bcf	15,5	;volatile
  2250                           
  2251                           ;main.c: 178: my_delay(delay_time[delay_ptr++]);
  2252  00B4  0878               	movf	_delay_ptr,w
  2253  00B5  3E30               	addlw	48
  2254  00B6  0086               	movwf	6
  2255  00B7  0187               	clrf	7
  2256  00B8  3023               	movlw	35
  2257  00B9  3D87               	addwfc	7,f
  2258  00BA  0801               	movf	1,w
  2259  00BB  3183  238A  3180   	fcall	_my_delay
  2260  00BE  3001               	movlw	1
  2261  00BF  00F5               	movwf	??_big_switch_columns
  2262  00C0  0875               	movf	??_big_switch_columns,w
  2263  00C1  07F8               	addwf	_delay_ptr,f
  2264                           
  2265                           ;main.c: 179: do { LATD5 = 1; } while(0);
  2266  00C2  0022               	movlb	2	; select bank2
  2267  00C3  168F               	bsf	15,5	;volatile
  2268                           
  2269                           ;main.c: 180: do { LATD6 = 0; } while(0);
  2270  00C4  130F               	bcf	15,6	;volatile
  2271                           
  2272                           ;main.c: 181: my_delay(delay_time[delay_ptr++]);
  2273  00C5  0878               	movf	_delay_ptr,w
  2274  00C6  3E30               	addlw	48
  2275  00C7  0086               	movwf	6
  2276  00C8  0187               	clrf	7
  2277  00C9  3023               	movlw	35
  2278  00CA  3D87               	addwfc	7,f
  2279  00CB  0801               	movf	1,w
  2280  00CC  3183  238A  3180   	fcall	_my_delay
  2281  00CF  3001               	movlw	1
  2282  00D0  00F5               	movwf	??_big_switch_columns
  2283  00D1  0875               	movf	??_big_switch_columns,w
  2284  00D2  07F8               	addwf	_delay_ptr,f
  2285                           
  2286                           ;main.c: 182: do { LATD6 = 1; } while(0);
  2287  00D3  0022               	movlb	2	; select bank2
  2288  00D4  170F               	bsf	15,6	;volatile
  2289                           
  2290                           ;main.c: 183: do { LATD7 = 0; } while(0);
  2291  00D5  138F               	bcf	15,7	;volatile
  2292                           
  2293                           ;main.c: 184: my_delay(delay_time[delay_ptr++]);
  2294  00D6  0878               	movf	_delay_ptr,w
  2295  00D7  3E30               	addlw	48
  2296  00D8  0086               	movwf	6
  2297  00D9  0187               	clrf	7
  2298  00DA  3023               	movlw	35
  2299  00DB  3D87               	addwfc	7,f
  2300  00DC  0801               	movf	1,w
  2301  00DD  3183  238A  3180   	fcall	_my_delay
  2302  00E0  3001               	movlw	1
  2303  00E1  00F5               	movwf	??_big_switch_columns
  2304  00E2  0875               	movf	??_big_switch_columns,w
  2305  00E3  07F8               	addwf	_delay_ptr,f
  2306                           
  2307                           ;main.c: 185: do { LATD7 = 1; } while(0);
  2308  00E4  0022               	movlb	2	; select bank2
  2309  00E5  178F               	bsf	15,7	;volatile
  2310                           
  2311                           ;main.c: 186: do { LATE0 = 0; } while(0);
  2312  00E6  1010               	bcf	16,0	;volatile
  2313                           
  2314                           ;main.c: 187: my_delay(delay_time[delay_ptr++]);
  2315  00E7  0878               	movf	_delay_ptr,w
  2316  00E8  3E30               	addlw	48
  2317  00E9  0086               	movwf	6
  2318  00EA  0187               	clrf	7
  2319  00EB  3023               	movlw	35
  2320  00EC  3D87               	addwfc	7,f
  2321  00ED  0801               	movf	1,w
  2322  00EE  3183  238A  3180   	fcall	_my_delay
  2323  00F1  3001               	movlw	1
  2324  00F2  00F5               	movwf	??_big_switch_columns
  2325  00F3  0875               	movf	??_big_switch_columns,w
  2326  00F4  07F8               	addwf	_delay_ptr,f
  2327                           
  2328                           ;main.c: 188: do { LATE0 = 1; } while(0);
  2329  00F5  0022               	movlb	2	; select bank2
  2330  00F6  1410               	bsf	16,0	;volatile
  2331                           
  2332                           ;main.c: 189: do { LATE1 = 0; } while(0);
  2333  00F7  1090               	bcf	16,1	;volatile
  2334                           
  2335                           ;main.c: 190: my_delay(delay_time[delay_ptr++]);
  2336  00F8  0878               	movf	_delay_ptr,w
  2337  00F9  3E30               	addlw	48
  2338  00FA  0086               	movwf	6
  2339  00FB  0187               	clrf	7
  2340  00FC  3023               	movlw	35
  2341  00FD  3D87               	addwfc	7,f
  2342  00FE  0801               	movf	1,w
  2343  00FF  3183  238A  3180   	fcall	_my_delay
  2344  0102  3001               	movlw	1
  2345  0103  00F5               	movwf	??_big_switch_columns
  2346  0104  0875               	movf	??_big_switch_columns,w
  2347  0105  07F8               	addwf	_delay_ptr,f
  2348                           
  2349                           ;main.c: 191: do { LATE1 = 1; } while(0);
  2350  0106  0022               	movlb	2	; select bank2
  2351  0107  1490               	bsf	16,1	;volatile
  2352                           
  2353                           ;main.c: 192: do { LATE2 = 0; } while(0);
  2354  0108  1110               	bcf	16,2	;volatile
  2355                           
  2356                           ;main.c: 193: my_delay(delay_time[delay_ptr++]);
  2357  0109  0878               	movf	_delay_ptr,w
  2358  010A  3E30               	addlw	48
  2359  010B  0086               	movwf	6
  2360  010C  0187               	clrf	7
  2361  010D  3023               	movlw	35
  2362  010E  3D87               	addwfc	7,f
  2363  010F  0801               	movf	1,w
  2364  0110  3183  238A  3180   	fcall	_my_delay
  2365  0113  3001               	movlw	1
  2366  0114  00F5               	movwf	??_big_switch_columns
  2367  0115  0875               	movf	??_big_switch_columns,w
  2368  0116  07F8               	addwf	_delay_ptr,f
  2369                           
  2370                           ;main.c: 194: do { LATE2 = 1; } while(0);
  2371  0117  0022               	movlb	2	; select bank2
  2372  0118  1510               	bsf	16,2	;volatile
  2373                           
  2374                           ;main.c: 195: do { LATE3 = 0; } while(0);
  2375  0119  1190               	bcf	16,3	;volatile
  2376                           
  2377                           ;main.c: 196: my_delay(delay_time[delay_ptr++]);
  2378  011A  0878               	movf	_delay_ptr,w
  2379  011B  3E30               	addlw	48
  2380  011C  0086               	movwf	6
  2381  011D  0187               	clrf	7
  2382  011E  3023               	movlw	35
  2383  011F  3D87               	addwfc	7,f
  2384  0120  0801               	movf	1,w
  2385  0121  3183  238A  3180   	fcall	_my_delay
  2386  0124  3001               	movlw	1
  2387  0125  00F5               	movwf	??_big_switch_columns
  2388  0126  0875               	movf	??_big_switch_columns,w
  2389  0127  07F8               	addwf	_delay_ptr,f
  2390                           
  2391                           ;main.c: 197: do { LATE3 = 1; } while(0);
  2392  0128  0022               	movlb	2	; select bank2
  2393  0129  1590               	bsf	16,3	;volatile
  2394                           
  2395                           ;main.c: 198: do { LATE4 = 0; } while(0);
  2396  012A  1210               	bcf	16,4	;volatile
  2397                           
  2398                           ;main.c: 199: my_delay(delay_time[delay_ptr++]);
  2399  012B  0878               	movf	_delay_ptr,w
  2400  012C  3E30               	addlw	48
  2401  012D  0086               	movwf	6
  2402  012E  0187               	clrf	7
  2403  012F  3023               	movlw	35
  2404  0130  3D87               	addwfc	7,f
  2405  0131  0801               	movf	1,w
  2406  0132  3183  238A  3180   	fcall	_my_delay
  2407  0135  3001               	movlw	1
  2408  0136  00F5               	movwf	??_big_switch_columns
  2409  0137  0875               	movf	??_big_switch_columns,w
  2410  0138  07F8               	addwf	_delay_ptr,f
  2411                           
  2412                           ;main.c: 200: do { LATE4 = 1; } while(0);
  2413  0139  0022               	movlb	2	; select bank2
  2414  013A  1610               	bsf	16,4	;volatile
  2415                           
  2416                           ;main.c: 201: do { LATE5 = 0; } while(0);
  2417  013B  1290               	bcf	16,5	;volatile
  2418                           
  2419                           ;main.c: 202: my_delay(delay_time[delay_ptr++]);
  2420  013C  0878               	movf	_delay_ptr,w
  2421  013D  3E30               	addlw	48
  2422  013E  0086               	movwf	6
  2423  013F  0187               	clrf	7
  2424  0140  3023               	movlw	35
  2425  0141  3D87               	addwfc	7,f
  2426  0142  0801               	movf	1,w
  2427  0143  3183  238A  3180   	fcall	_my_delay
  2428  0146  3001               	movlw	1
  2429  0147  00F5               	movwf	??_big_switch_columns
  2430  0148  0875               	movf	??_big_switch_columns,w
  2431  0149  07F8               	addwf	_delay_ptr,f
  2432                           
  2433                           ;main.c: 203: do { LATE5 = 1; } while(0);
  2434  014A  0022               	movlb	2	; select bank2
  2435  014B  1690               	bsf	16,5	;volatile
  2436                           
  2437                           ;main.c: 204: do { LATE6 = 0; } while(0);
  2438  014C  1310               	bcf	16,6	;volatile
  2439                           
  2440                           ;main.c: 205: my_delay(delay_time[delay_ptr++]);
  2441  014D  0878               	movf	_delay_ptr,w
  2442  014E  3E30               	addlw	48
  2443  014F  0086               	movwf	6
  2444  0150  0187               	clrf	7
  2445  0151  3023               	movlw	35
  2446  0152  3D87               	addwfc	7,f
  2447  0153  0801               	movf	1,w
  2448  0154  3183  238A  3180   	fcall	_my_delay
  2449  0157  3001               	movlw	1
  2450  0158  00F5               	movwf	??_big_switch_columns
  2451  0159  0875               	movf	??_big_switch_columns,w
  2452  015A  07F8               	addwf	_delay_ptr,f
  2453                           
  2454                           ;main.c: 206: do { LATE6 = 1; } while(0);
  2455  015B  0022               	movlb	2	; select bank2
  2456  015C  1710               	bsf	16,6	;volatile
  2457                           
  2458                           ;main.c: 207: do { LATE7 = 0; } while(0);
  2459  015D  1390               	bcf	16,7	;volatile
  2460                           
  2461                           ;main.c: 208: my_delay(delay_time[delay_ptr++]);
  2462  015E  0878               	movf	_delay_ptr,w
  2463  015F  3E30               	addlw	48
  2464  0160  0086               	movwf	6
  2465  0161  0187               	clrf	7
  2466  0162  3023               	movlw	35
  2467  0163  3D87               	addwfc	7,f
  2468  0164  0801               	movf	1,w
  2469  0165  3183  238A  3180   	fcall	_my_delay
  2470  0168  3001               	movlw	1
  2471  0169  00F5               	movwf	??_big_switch_columns
  2472  016A  0875               	movf	??_big_switch_columns,w
  2473  016B  07F8               	addwf	_delay_ptr,f
  2474                           
  2475                           ;main.c: 209: do { LATE7 = 1; } while(0);
  2476  016C  0022               	movlb	2	; select bank2
  2477  016D  1790               	bsf	16,7	;volatile
  2478                           
  2479                           ;main.c: 210: do { LATF0 = 0; } while(0);
  2480  016E  0027               	movlb	7	; select bank7
  2481  016F  100C               	bcf	12,0	;volatile
  2482                           
  2483                           ;main.c: 211: my_delay(delay_time[delay_ptr++]);
  2484  0170  0878               	movf	_delay_ptr,w
  2485  0171  3E30               	addlw	48
  2486  0172  0086               	movwf	6
  2487  0173  0187               	clrf	7
  2488  0174  3023               	movlw	35
  2489  0175  3D87               	addwfc	7,f
  2490  0176  0801               	movf	1,w
  2491  0177  3183  238A  3180   	fcall	_my_delay
  2492  017A  3001               	movlw	1
  2493  017B  00F5               	movwf	??_big_switch_columns
  2494  017C  0875               	movf	??_big_switch_columns,w
  2495  017D  07F8               	addwf	_delay_ptr,f
  2496                           
  2497                           ;main.c: 212: do { LATF0 = 1; } while(0);
  2498  017E  0027               	movlb	7	; select bank7
  2499  017F  140C               	bsf	12,0	;volatile
  2500                           
  2501                           ;main.c: 213: do { LATF1 = 0; } while(0);
  2502  0180  108C               	bcf	12,1	;volatile
  2503                           
  2504                           ;main.c: 214: my_delay(delay_time[delay_ptr++]);
  2505  0181  0878               	movf	_delay_ptr,w
  2506  0182  3E30               	addlw	48
  2507  0183  0086               	movwf	6
  2508  0184  0187               	clrf	7
  2509  0185  3023               	movlw	35
  2510  0186  3D87               	addwfc	7,f
  2511  0187  0801               	movf	1,w
  2512  0188  3183  238A  3180   	fcall	_my_delay
  2513  018B  3001               	movlw	1
  2514  018C  00F5               	movwf	??_big_switch_columns
  2515  018D  0875               	movf	??_big_switch_columns,w
  2516  018E  07F8               	addwf	_delay_ptr,f
  2517                           
  2518                           ;main.c: 215: do { LATF1 = 1; } while(0);
  2519  018F  0027               	movlb	7	; select bank7
  2520  0190  148C               	bsf	12,1	;volatile
  2521                           
  2522                           ;main.c: 216: do { LATF2 = 0; } while(0);
  2523  0191  110C               	bcf	12,2	;volatile
  2524                           
  2525                           ;main.c: 217: my_delay(delay_time[delay_ptr++]);
  2526  0192  0878               	movf	_delay_ptr,w
  2527  0193  3E30               	addlw	48
  2528  0194  0086               	movwf	6
  2529  0195  0187               	clrf	7
  2530  0196  3023               	movlw	35
  2531  0197  3D87               	addwfc	7,f
  2532  0198  0801               	movf	1,w
  2533  0199  3183  238A  3180   	fcall	_my_delay
  2534  019C  3001               	movlw	1
  2535  019D  00F5               	movwf	??_big_switch_columns
  2536  019E  0875               	movf	??_big_switch_columns,w
  2537  019F  07F8               	addwf	_delay_ptr,f
  2538                           
  2539                           ;main.c: 218: do { LATF2 = 1; } while(0);
  2540  01A0  0027               	movlb	7	; select bank7
  2541  01A1  150C               	bsf	12,2	;volatile
  2542                           
  2543                           ;main.c: 219: do { LATF3 = 0; } while(0);
  2544  01A2  118C               	bcf	12,3	;volatile
  2545                           
  2546                           ;main.c: 220: my_delay(delay_time[delay_ptr++]);
  2547  01A3  0878               	movf	_delay_ptr,w
  2548  01A4  3E30               	addlw	48
  2549  01A5  0086               	movwf	6
  2550  01A6  0187               	clrf	7
  2551  01A7  3023               	movlw	35
  2552  01A8  3D87               	addwfc	7,f
  2553  01A9  0801               	movf	1,w
  2554  01AA  3183  238A  3180   	fcall	_my_delay
  2555  01AD  3001               	movlw	1
  2556  01AE  00F5               	movwf	??_big_switch_columns
  2557  01AF  0875               	movf	??_big_switch_columns,w
  2558  01B0  07F8               	addwf	_delay_ptr,f
  2559                           
  2560                           ;main.c: 221: do { LATF3 = 1; } while(0);
  2561  01B1  0027               	movlb	7	; select bank7
  2562  01B2  158C               	bsf	12,3	;volatile
  2563                           
  2564                           ;main.c: 222: do { LATF4 = 0; } while(0);
  2565  01B3  120C               	bcf	12,4	;volatile
  2566                           
  2567                           ;main.c: 223: my_delay(delay_time[delay_ptr++]);
  2568  01B4  0878               	movf	_delay_ptr,w
  2569  01B5  3E30               	addlw	48
  2570  01B6  0086               	movwf	6
  2571  01B7  0187               	clrf	7
  2572  01B8  3023               	movlw	35
  2573  01B9  3D87               	addwfc	7,f
  2574  01BA  0801               	movf	1,w
  2575  01BB  3183  238A  3180   	fcall	_my_delay
  2576  01BE  3001               	movlw	1
  2577  01BF  00F5               	movwf	??_big_switch_columns
  2578  01C0  0875               	movf	??_big_switch_columns,w
  2579  01C1  07F8               	addwf	_delay_ptr,f
  2580                           
  2581                           ;main.c: 224: do { LATF4 = 1; } while(0);
  2582  01C2  0027               	movlb	7	; select bank7
  2583  01C3  160C               	bsf	12,4	;volatile
  2584                           
  2585                           ;main.c: 225: do { LATF5 = 0; } while(0);
  2586  01C4  128C               	bcf	12,5	;volatile
  2587                           
  2588                           ;main.c: 226: my_delay(delay_time[delay_ptr++]);
  2589  01C5  0878               	movf	_delay_ptr,w
  2590  01C6  3E30               	addlw	48
  2591  01C7  0086               	movwf	6
  2592  01C8  0187               	clrf	7
  2593  01C9  3023               	movlw	35
  2594  01CA  3D87               	addwfc	7,f
  2595  01CB  0801               	movf	1,w
  2596  01CC  3183  238A  3180   	fcall	_my_delay
  2597  01CF  3001               	movlw	1
  2598  01D0  00F5               	movwf	??_big_switch_columns
  2599  01D1  0875               	movf	??_big_switch_columns,w
  2600  01D2  07F8               	addwf	_delay_ptr,f
  2601                           
  2602                           ;main.c: 227: do { LATF5 = 1; } while(0);
  2603  01D3  0027               	movlb	7	; select bank7
  2604  01D4  168C               	bsf	12,5	;volatile
  2605                           
  2606                           ;main.c: 228: do { LATF6 = 0; } while(0);
  2607  01D5  130C               	bcf	12,6	;volatile
  2608                           
  2609                           ;main.c: 229: my_delay(delay_time[delay_ptr++]);
  2610  01D6  0878               	movf	_delay_ptr,w
  2611  01D7  3E30               	addlw	48
  2612  01D8  0086               	movwf	6
  2613  01D9  0187               	clrf	7
  2614  01DA  3023               	movlw	35
  2615  01DB  3D87               	addwfc	7,f
  2616  01DC  0801               	movf	1,w
  2617  01DD  3183  238A  3180   	fcall	_my_delay
  2618  01E0  3001               	movlw	1
  2619  01E1  00F5               	movwf	??_big_switch_columns
  2620  01E2  0875               	movf	??_big_switch_columns,w
  2621  01E3  07F8               	addwf	_delay_ptr,f
  2622                           
  2623                           ;main.c: 230: do { LATF6 = 1; } while(0);
  2624  01E4  0027               	movlb	7	; select bank7
  2625  01E5  170C               	bsf	12,6	;volatile
  2626                           
  2627                           ;main.c: 231: do { LATF7 = 0; } while(0);
  2628  01E6  138C               	bcf	12,7	;volatile
  2629                           
  2630                           ;main.c: 232: my_delay(delay_time[delay_ptr++]);
  2631  01E7  0878               	movf	_delay_ptr,w
  2632  01E8  3E30               	addlw	48
  2633  01E9  0086               	movwf	6
  2634  01EA  0187               	clrf	7
  2635  01EB  3023               	movlw	35
  2636  01EC  3D87               	addwfc	7,f
  2637  01ED  0801               	movf	1,w
  2638  01EE  3183  238A         	fcall	_my_delay
  2639  01F0  3001               	movlw	1
  2640  01F1  00F5               	movwf	??_big_switch_columns
  2641  01F2  0875               	movf	??_big_switch_columns,w
  2642  01F3  07F8               	addwf	_delay_ptr,f
  2643  01F4  0008               	return
  2644  01F5                     __end_of_big_switch_columns:	
  2645                           
  2646                           	psect	text4
  2647  038A                     __ptext4:	
  2648 ;; *************** function _my_delay *****************
  2649 ;; Defined at:
  2650 ;;		line 239 in file "main.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  dly             1    wreg     unsigned char 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  dly             1    3[COMMON] unsigned char 
  2655 ;;  x               1    4[COMMON] volatile unsigned char 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;		None               void
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2669 ;;Total ram usage:        3 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    2
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_big_switch_columns
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _my_delay
  2681  038A                     _my_delay:	
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _my_delay: [wreg+status,2+status,0]
  2685                           ;my_delay@dly stored from wreg
  2686  038A  00F3               	movwf	my_delay@dly
  2687                           
  2688                           ;main.c: 241: unsigned char volatile x;
  2689                           ;main.c: 244: for(x=0; x<dly; x++);
  2690  038B  01F4               	clrf	my_delay@x	;volatile
  2691  038C                     l1595:	
  2692  038C  0873               	movf	my_delay@dly,w
  2693  038D  0274               	subwf	my_delay@x,w	;volatile
  2694  038E  1803               	btfsc	3,0
  2695  038F  0008               	return
  2696  0390  3001               	movlw	1
  2697  0391  00F2               	movwf	??_my_delay
  2698  0392  0872               	movf	??_my_delay,w
  2699  0393  07F4               	addwf	my_delay@x,f	;volatile
  2700  0394  2B8C               	goto	l1595
  2701  0395                     __end_of_my_delay:	
  2702                           
  2703                           	psect	text5
  2704  037E                     __ptext5:	
  2705 ;; *************** function _SYSTEM_Initialize *****************
  2706 ;; Defined at:
  2707 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    3
  2728 ;; This function calls:
  2729 ;;		_EUSART1_Initialize
  2730 ;;		_EUSART2_Initialize
  2731 ;;		_OSCILLATOR_Initialize
  2732 ;;		_PIN_MANAGER_Initialize
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _SYSTEM_Initialize
  2740  037E                     _SYSTEM_Initialize:	
  2741                           
  2742                           ;mcc.c: 72: OSCILLATOR_Initialize();
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2746  037E  3183  239C  3183   	fcall	_OSCILLATOR_Initialize
  2747                           
  2748                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2749  0381  3182  2253  3183   	fcall	_PIN_MANAGER_Initialize
  2750                           
  2751                           ;mcc.c: 74: EUSART1_Initialize();
  2752  0384  3183  2347  3183   	fcall	_EUSART1_Initialize
  2753                           
  2754                           ;mcc.c: 75: EUSART2_Initialize();
  2755  0387  3183  232D         	fcall	_EUSART2_Initialize
  2756  0389  0008               	return
  2757  038A                     __end_of_SYSTEM_Initialize:	
  2758                           
  2759                           	psect	text6
  2760  0253                     __ptext6:	
  2761 ;; *************** function _PIN_MANAGER_Initialize *****************
  2762 ;; Defined at:
  2763 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;		None               void
  2770 ;; Registers used:
  2771 ;;		wreg, status,2
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    2
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_SYSTEM_Initialize
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _PIN_MANAGER_Initialize
  2793  0253                     _PIN_MANAGER_Initialize:	
  2794                           
  2795                           ;pin_manager.c: 51: LATA = 0x00;
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2799  0253  0022               	movlb	2	; select bank2
  2800  0254  018C               	clrf	12	;volatile
  2801                           
  2802                           ;pin_manager.c: 52: TRISA = 0xFF;
  2803  0255  30FF               	movlw	255
  2804  0256  0021               	movlb	1	; select bank1
  2805  0257  008C               	movwf	12	;volatile
  2806                           
  2807                           ;pin_manager.c: 53: ANSELA = 0x00;
  2808  0258  0023               	movlb	3	; select bank3
  2809  0259  018C               	clrf	12	;volatile
  2810                           
  2811                           ;pin_manager.c: 55: LATB = 0x02;
  2812  025A  3002               	movlw	2
  2813  025B  0022               	movlb	2	; select bank2
  2814  025C  008D               	movwf	13	;volatile
  2815                           
  2816                           ;pin_manager.c: 56: TRISB = 0x01;
  2817  025D  3001               	movlw	1
  2818  025E  0021               	movlb	1	; select bank1
  2819  025F  008D               	movwf	13	;volatile
  2820                           
  2821                           ;pin_manager.c: 57: WPUB = 0x00;
  2822  0260  0024               	movlb	4	; select bank4
  2823  0261  018D               	clrf	13	;volatile
  2824                           
  2825                           ;pin_manager.c: 59: LATC = 0x00;
  2826  0262  0022               	movlb	2	; select bank2
  2827  0263  018E               	clrf	14	;volatile
  2828                           
  2829                           ;pin_manager.c: 60: TRISC = 0xFD;
  2830  0264  30FD               	movlw	253
  2831  0265  0021               	movlb	1	; select bank1
  2832  0266  008E               	movwf	14	;volatile
  2833                           
  2834                           ;pin_manager.c: 62: LATD = 0xFE;
  2835  0267  30FE               	movlw	254
  2836  0268  0022               	movlb	2	; select bank2
  2837  0269  008F               	movwf	15	;volatile
  2838                           
  2839                           ;pin_manager.c: 63: TRISD = 0x00;
  2840  026A  0021               	movlb	1	; select bank1
  2841  026B  018F               	clrf	15	;volatile
  2842                           
  2843                           ;pin_manager.c: 65: LATE = 0xFF;
  2844  026C  30FF               	movlw	255
  2845  026D  0022               	movlb	2	; select bank2
  2846  026E  0090               	movwf	16	;volatile
  2847                           
  2848                           ;pin_manager.c: 66: TRISE = 0x00;
  2849  026F  0021               	movlb	1	; select bank1
  2850  0270  0190               	clrf	16	;volatile
  2851                           
  2852                           ;pin_manager.c: 67: ANSELE = 0x00;
  2853  0271  0023               	movlb	3	; select bank3
  2854  0272  0190               	clrf	16	;volatile
  2855                           
  2856                           ;pin_manager.c: 69: LATF = 0xFF;
  2857  0273  30FF               	movlw	255
  2858  0274  0027               	movlb	7	; select bank7
  2859  0275  008C               	movwf	12	;volatile
  2860                           
  2861                           ;pin_manager.c: 70: TRISF = 0x00;
  2862  0276  0026               	movlb	6	; select bank6
  2863  0277  018C               	clrf	12	;volatile
  2864                           
  2865                           ;pin_manager.c: 71: ANSELF = 0x00;
  2866  0278  0028               	movlb	8	; select bank8
  2867  0279  018C               	clrf	12	;volatile
  2868                           
  2869                           ;pin_manager.c: 73: LATG = 0x00;
  2870  027A  0027               	movlb	7	; select bank7
  2871  027B  018D               	clrf	13	;volatile
  2872                           
  2873                           ;pin_manager.c: 74: TRISG = 0x3F;
  2874  027C  303F               	movlw	63
  2875  027D  0026               	movlb	6	; select bank6
  2876  027E  008D               	movwf	13	;volatile
  2877                           
  2878                           ;pin_manager.c: 75: ANSELG = 0x18;
  2879  027F  3018               	movlw	24
  2880  0280  0028               	movlb	8	; select bank8
  2881  0281  008D               	movwf	13	;volatile
  2882                           
  2883                           ;pin_manager.c: 76: WPUG = 0x00;
  2884  0282  0029               	movlb	9	; select bank9
  2885  0283  018D               	clrf	13	;volatile
  2886                           
  2887                           ;pin_manager.c: 78: OPTION_REGbits.nWPUEN = 0x01;
  2888  0284  0021               	movlb	1	; select bank1
  2889  0285  1795               	bsf	21,7	;volatile
  2890                           
  2891                           ;pin_manager.c: 80: APFCON = 0x00;
  2892  0286  0022               	movlb	2	; select bank2
  2893  0287  019D               	clrf	29	;volatile
  2894                           
  2895                           ;pin_manager.c: 83: IOCBN0 = 1;
  2896  0288  0027               	movlb	7	; select bank7
  2897  0289  1415               	bsf	21,0	;volatile
  2898                           
  2899                           ;pin_manager.c: 86: INTCONbits.IOCIE = 1;
  2900  028A  158B               	bsf	11,3	;volatile
  2901  028B  0008               	return
  2902  028C                     __end_of_PIN_MANAGER_Initialize:	
  2903                           
  2904                           	psect	text7
  2905  039C                     __ptext7:	
  2906 ;; *************** function _OSCILLATOR_Initialize *****************
  2907 ;; Defined at:
  2908 ;;		line 78 in file "mcc_generated_files/mcc.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;		None               void
  2915 ;; Registers used:
  2916 ;;		wreg, status,2
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    2
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_SYSTEM_Initialize
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _OSCILLATOR_Initialize
  2938  039C                     _OSCILLATOR_Initialize:	
  2939                           
  2940                           ;mcc.c: 80: OSCCON = 0x7A;
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2944  039C  307A               	movlw	122
  2945  039D  0021               	movlb	1	; select bank1
  2946  039E  0099               	movwf	25	;volatile
  2947                           
  2948                           ;mcc.c: 82: OSCSTAT = 0x00;
  2949  039F  019A               	clrf	26	;volatile
  2950                           
  2951                           ;mcc.c: 84: OSCTUNE = 0x00;
  2952  03A0  0198               	clrf	24	;volatile
  2953  03A1  0008               	return
  2954  03A2                     __end_of_OSCILLATOR_Initialize:	
  2955                           
  2956                           	psect	text8
  2957  032D                     __ptext8:	
  2958 ;; *************** function _EUSART2_Initialize *****************
  2959 ;; Defined at:
  2960 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;		None               void
  2967 ;; Registers used:
  2968 ;;		wreg, status,2
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;Total ram usage:        1 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    2
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_SYSTEM_Initialize
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           
  2989                           ;psect for function _EUSART2_Initialize
  2990  032D                     _EUSART2_Initialize:	
  2991                           
  2992                           ;eusart2.c: 78: PIE4bits.RC2IE = 0;
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _EUSART2_Initialize: [wreg+status,2]
  2996  032D  0021               	movlb	1	; select bank1
  2997  032E  1294               	bcf	20,5	;volatile
  2998                           
  2999                           ;eusart2.c: 79: PIE4bits.TX2IE = 0;
  3000  032F  1214               	bcf	20,4	;volatile
  3001                           
  3002                           ;eusart2.c: 84: BAUD2CON = 0x48;
  3003  0330  3048               	movlw	72
  3004  0331  0029               	movlb	9	; select bank9
  3005  0332  0097               	movwf	23	;volatile
  3006                           
  3007                           ;eusart2.c: 87: RC2STA = 0x80;
  3008  0333  3080               	movlw	128
  3009  0334  0095               	movwf	21	;volatile
  3010                           
  3011                           ;eusart2.c: 90: TX2STA = 0x26;
  3012  0335  3026               	movlw	38
  3013  0336  0096               	movwf	22	;volatile
  3014                           
  3015                           ;eusart2.c: 93: SP2BRGL = 0x22;
  3016  0337  3022               	movlw	34
  3017  0338  0093               	movwf	19	;volatile
  3018                           
  3019                           ;eusart2.c: 96: SP2BRGH = 0x00;
  3020  0339  0194               	clrf	20	;volatile
  3021                           
  3022                           ;eusart2.c: 100: eusart2TxHead = 0;
  3023  033A  01FA               	clrf	_eusart2TxHead
  3024                           
  3025                           ;eusart2.c: 101: eusart2TxTail = 0;
  3026  033B  01FB               	clrf	_eusart2TxTail
  3027                           
  3028                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  3029  033C  3008               	movlw	8
  3030  033D  00F2               	movwf	??_EUSART2_Initialize
  3031  033E  0872               	movf	??_EUSART2_Initialize,w
  3032  033F  0020               	movlb	0	; select bank0
  3033  0340  00CF               	movwf	_eusart2TxBufferRemaining	;volatile
  3034                           
  3035                           ;eusart2.c: 104: eusart2RxHead = 0;
  3036  0341  01F9               	clrf	_eusart2RxHead
  3037                           
  3038                           ;eusart2.c: 105: eusart2RxTail = 0;
  3039  0342  01C7               	clrf	_eusart2RxTail
  3040                           
  3041                           ;eusart2.c: 106: eusart2RxCount = 0;
  3042  0343  01C6               	clrf	_eusart2RxCount	;volatile
  3043                           
  3044                           ;eusart2.c: 109: PIE4bits.RC2IE = 1;
  3045  0344  0021               	movlb	1	; select bank1
  3046  0345  1694               	bsf	20,5	;volatile
  3047  0346  0008               	return
  3048  0347                     __end_of_EUSART2_Initialize:	
  3049                           
  3050                           	psect	text9
  3051  0347                     __ptext9:	
  3052 ;; *************** function _EUSART1_Initialize *****************
  3053 ;; Defined at:
  3054 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		wreg, status,2
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;Total ram usage:        1 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    2
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_SYSTEM_Initialize
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _EUSART1_Initialize
  3084  0347                     _EUSART1_Initialize:	
  3085                           
  3086                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  3087                           
  3088                           ;incstack = 0
  3089                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  3090  0347  0021               	movlb	1	; select bank1
  3091  0348  1291               	bcf	17,5	;volatile
  3092                           
  3093                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  3094  0349  1211               	bcf	17,4	;volatile
  3095                           
  3096                           ;eusart1.c: 84: BAUD1CON = 0x48;
  3097  034A  3048               	movlw	72
  3098  034B  0023               	movlb	3	; select bank3
  3099  034C  009F               	movwf	31	;volatile
  3100                           
  3101                           ;eusart1.c: 87: RC1STA = 0x80;
  3102  034D  3080               	movlw	128
  3103  034E  009D               	movwf	29	;volatile
  3104                           
  3105                           ;eusart1.c: 90: TX1STA = 0x26;
  3106  034F  3026               	movlw	38
  3107  0350  009E               	movwf	30	;volatile
  3108                           
  3109                           ;eusart1.c: 93: SP1BRGL = 0x22;
  3110  0351  3022               	movlw	34
  3111  0352  009B               	movwf	27	;volatile
  3112                           
  3113                           ;eusart1.c: 96: SP1BRGH = 0x00;
  3114  0353  019C               	clrf	28	;volatile
  3115                           
  3116                           ;eusart1.c: 100: eusart1TxHead = 0;
  3117  0354  0020               	movlb	0	; select bank0
  3118  0355  01C4               	clrf	_eusart1TxHead
  3119                           
  3120                           ;eusart1.c: 101: eusart1TxTail = 0;
  3121  0356  01C5               	clrf	_eusart1TxTail
  3122                           
  3123                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3124  0357  3008               	movlw	8
  3125  0358  00F2               	movwf	??_EUSART1_Initialize
  3126  0359  0872               	movf	??_EUSART1_Initialize,w
  3127  035A  00CE               	movwf	_eusart1TxBufferRemaining	;volatile
  3128                           
  3129                           ;eusart1.c: 104: eusart1RxHead = 0;
  3130  035B  01C2               	clrf	_eusart1RxHead
  3131                           
  3132                           ;eusart1.c: 105: eusart1RxTail = 0;
  3133  035C  01C3               	clrf	_eusart1RxTail
  3134                           
  3135                           ;eusart1.c: 106: eusart1RxCount = 0;
  3136  035D  01C1               	clrf	_eusart1RxCount	;volatile
  3137                           
  3138                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  3139  035E  0021               	movlb	1	; select bank1
  3140  035F  1691               	bsf	17,5	;volatile
  3141  0360  0008               	return
  3142  0361                     __end_of_EUSART1_Initialize:	
  3143                           
  3144                           	psect	intentry
  3145  0004                     __pintentry:	
  3146 ;; *************** function _INTERRUPT_InterruptManager *****************
  3147 ;; Defined at:
  3148 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;		None               void
  3155 ;; Registers used:
  3156 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;Total ram usage:        1 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    1
  3169 ;; This function calls:
  3170 ;;		_EUSART1_Receive_ISR
  3171 ;;		_EUSART1_Transmit_ISR
  3172 ;;		_EUSART2_Receive_ISR
  3173 ;;		_EUSART2_Transmit_ISR
  3174 ;;		_PIN_MANAGER_IOC
  3175 ;; This function is called by:
  3176 ;;		Interrupt level 1
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180  0004                     _INTERRUPT_InterruptManager:	
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3184  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3185  0005  3180               	pagesel	$
  3186  0006  0020               	movlb	0	; select bank0
  3187  0007  087F               	movf	127,w
  3188  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  3189                           
  3190                           ;interrupt_manager.c: 54: if (INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1) {
  3191  0009  198B               	btfsc	11,3	;volatile
  3192  000A  1C0B               	btfss	11,0	;volatile
  3193  000B  2811               	goto	i1l208
  3194                           
  3195                           ;interrupt_manager.c: 55: PIN_MANAGER_IOC();
  3196  000C  3183  2395  3180   	fcall	_PIN_MANAGER_IOC
  3197                           
  3198                           ;interrupt_manager.c: 58: INTCONbits.IOCIF = 0;
  3199  000F  100B               	bcf	11,0	;volatile
  3200                           
  3201                           ;interrupt_manager.c: 59: } else if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  3202  0010  2837               	goto	i1l218
  3203  0011                     i1l208:	
  3204  0011  0021               	movlb	1	; select bank1
  3205  0012  1E91               	btfss	17,5	;volatile
  3206  0013  281B               	goto	i1l210
  3207  0014  0020               	movlb	0	; select bank0
  3208  0015  1E91               	btfss	17,5	;volatile
  3209  0016  281B               	goto	i1l210
  3210                           
  3211                           ;interrupt_manager.c: 60: EUSART1_Receive_ISR();
  3212  0017  3183  2312  3180   	fcall	_EUSART1_Receive_ISR
  3213                           
  3214                           ;interrupt_manager.c: 61: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  3215  001A  2837               	goto	i1l218
  3216  001B                     i1l210:	
  3217  001B  0021               	movlb	1	; select bank1
  3218  001C  1E11               	btfss	17,4	;volatile
  3219  001D  2825               	goto	i1l212
  3220  001E  0020               	movlb	0	; select bank0
  3221  001F  1E11               	btfss	17,4	;volatile
  3222  0020  2825               	goto	i1l212
  3223                           
  3224                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  3225  0021  3182  22DA  3180   	fcall	_EUSART1_Transmit_ISR
  3226                           
  3227                           ;interrupt_manager.c: 63: } else if (PIE4bits.RC2IE == 1 && PIR4bits.RC2IF == 1) {
  3228  0024  2837               	goto	i1l218
  3229  0025                     i1l212:	
  3230  0025  0021               	movlb	1	; select bank1
  3231  0026  1E94               	btfss	20,5	;volatile
  3232  0027  282F               	goto	i1l214
  3233  0028  0020               	movlb	0	; select bank0
  3234  0029  1E94               	btfss	20,5	;volatile
  3235  002A  282F               	goto	i1l214
  3236                           
  3237                           ;interrupt_manager.c: 64: EUSART2_Receive_ISR();
  3238  002B  3182  22F7  3180   	fcall	_EUSART2_Receive_ISR
  3239                           
  3240                           ;interrupt_manager.c: 65: } else if (PIE4bits.TX2IE == 1 && PIR4bits.TX2IF == 1) {
  3241  002E  2837               	goto	i1l218
  3242  002F                     i1l214:	
  3243  002F  0021               	movlb	1	; select bank1
  3244  0030  1E14               	btfss	20,4	;volatile
  3245  0031  2837               	goto	i1l218
  3246  0032  0020               	movlb	0	; select bank0
  3247  0033  1E14               	btfss	20,4	;volatile
  3248  0034  2837               	goto	i1l218
  3249                           
  3250                           ;interrupt_manager.c: 66: EUSART2_Transmit_ISR();
  3251  0035  3182  22BD         	fcall	_EUSART2_Transmit_ISR
  3252  0037                     i1l218:	
  3253                           ;interrupt_manager.c: 67: } else {
  3254                           
  3255  0037  0871               	movf	??_INTERRUPT_InterruptManager,w
  3256  0038  0020               	movlb	0	; select bank0
  3257  0039  00FF               	movwf	127
  3258  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3259  003B  0009               	retfie
  3260  003C                     __end_of_INTERRUPT_InterruptManager:	
  3261                           
  3262                           	psect	text11
  3263  0395                     __ptext11:	
  3264 ;; *************** function _PIN_MANAGER_IOC *****************
  3265 ;; Defined at:
  3266 ;;		line 90 in file "mcc_generated_files/pin_manager.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		None
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_INTERRUPT_InterruptManager
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           
  3294                           ;psect for function _PIN_MANAGER_IOC
  3295  0395                     _PIN_MANAGER_IOC:	
  3296                           
  3297                           ;pin_manager.c: 91: if ((IOCBN0 == 1) && (IOCBF0 == 1)) {
  3298                           
  3299                           ;incstack = 0
  3300                           ; Regs used in _PIN_MANAGER_IOC: []
  3301  0395  0027               	movlb	7	; select bank7
  3302  0396  1C15               	btfss	21,0	;volatile
  3303  0397  0008               	return
  3304  0398  1C16               	btfss	22,0	;volatile
  3305  0399  0008               	return
  3306                           
  3307                           ;pin_manager.c: 95: IOCBF0 = 0;
  3308  039A  1016               	bcf	22,0	;volatile
  3309  039B  0008               	return
  3310  039C                     __end_of_PIN_MANAGER_IOC:	
  3311                           
  3312                           	psect	text12
  3313  02BD                     __ptext12:	
  3314 ;; *************** function _EUSART2_Transmit_ISR *****************
  3315 ;; Defined at:
  3316 ;;		line 147 in file "mcc_generated_files/eusart2.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;		None               void
  3323 ;; Registers used:
  3324 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;Total ram usage:        1 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_INTERRUPT_InterruptManager
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _EUSART2_Transmit_ISR
  3345  02BD                     _EUSART2_Transmit_ISR:	
  3346                           
  3347                           ;eusart2.c: 150: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3351  02BD  3008               	movlw	8
  3352  02BE  0020               	movlb	0	; select bank0
  3353  02BF  024F               	subwf	_eusart2TxBufferRemaining,w	;volatile
  3354  02C0  1803               	skipnc
  3355  02C1  2AD7               	goto	i1l56
  3356                           
  3357                           ;eusart2.c: 151: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  3358  02C2  087B               	movf	_eusart2TxTail,w
  3359  02C3  3E38               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
  3360  02C4  0086               	movwf	6
  3361  02C5  0187               	clrf	7
  3362  02C6  0801               	movf	1,w
  3363  02C7  0029               	movlb	9	; select bank9
  3364  02C8  0092               	movwf	18	;volatile
  3365  02C9  3001               	movlw	1
  3366  02CA  00F0               	movwf	??_EUSART2_Transmit_ISR
  3367  02CB  0870               	movf	??_EUSART2_Transmit_ISR,w
  3368  02CC  07FB               	addwf	_eusart2TxTail,f
  3369                           
  3370                           ;eusart2.c: 152: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  3371  02CD  3008               	movlw	8
  3372  02CE  027B               	subwf	_eusart2TxTail,w
  3373  02CF  1803               	btfsc	3,0
  3374                           
  3375                           ;eusart2.c: 153: eusart2TxTail = 0;
  3376  02D0  01FB               	clrf	_eusart2TxTail
  3377                           
  3378                           ;eusart2.c: 154: }
  3379                           ;eusart2.c: 155: eusart2TxBufferRemaining++;
  3380  02D1  3001               	movlw	1
  3381  02D2  00F0               	movwf	??_EUSART2_Transmit_ISR
  3382  02D3  0870               	movf	??_EUSART2_Transmit_ISR,w
  3383  02D4  0020               	movlb	0	; select bank0
  3384  02D5  07CF               	addwf	_eusart2TxBufferRemaining,f	;volatile
  3385                           
  3386                           ;eusart2.c: 156: } else {
  3387  02D6  0008               	return
  3388  02D7                     i1l56:	
  3389                           
  3390                           ;eusart2.c: 157: PIE4bits.TX2IE = 0;
  3391  02D7  0021               	movlb	1	; select bank1
  3392  02D8  1214               	bcf	20,4	;volatile
  3393  02D9  0008               	return
  3394  02DA                     __end_of_EUSART2_Transmit_ISR:	
  3395                           
  3396                           	psect	text13
  3397  02F7                     __ptext13:	
  3398 ;; *************** function _EUSART2_Receive_ISR *****************
  3399 ;; Defined at:
  3400 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;		None
  3405 ;; Return value:  Size  Location     Type
  3406 ;;		None               void
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;Total ram usage:        1 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_INTERRUPT_InterruptManager
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _EUSART2_Receive_ISR
  3429  02F7                     _EUSART2_Receive_ISR:	
  3430                           
  3431                           ;eusart2.c: 162: if (1 == RC2STAbits.OERR) {
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3435  02F7  0029               	movlb	9	; select bank9
  3436  02F8  1C95               	btfss	21,1	;volatile
  3437  02F9  2AFC               	goto	i1l1429
  3438                           
  3439                           ;eusart2.c: 165: RC2STAbits.CREN = 0;
  3440  02FA  1215               	bcf	21,4	;volatile
  3441                           
  3442                           ;eusart2.c: 166: RC2STAbits.CREN = 1;
  3443  02FB  1615               	bsf	21,4	;volatile
  3444  02FC                     i1l1429:	
  3445                           
  3446                           ;eusart2.c: 167: }
  3447                           ;eusart2.c: 170: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  3448  02FC  0811               	movf	17,w	;volatile
  3449  02FD  00F0               	movwf	??_EUSART2_Receive_ISR
  3450  02FE  0879               	movf	_eusart2RxHead,w
  3451  02FF  3E30               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
  3452  0300  0086               	movwf	6
  3453  0301  0187               	clrf	7
  3454  0302  0870               	movf	??_EUSART2_Receive_ISR,w
  3455  0303  0081               	movwf	1
  3456  0304  3001               	movlw	1
  3457  0305  00F0               	movwf	??_EUSART2_Receive_ISR
  3458  0306  0870               	movf	??_EUSART2_Receive_ISR,w
  3459  0307  07F9               	addwf	_eusart2RxHead,f
  3460                           
  3461                           ;eusart2.c: 171: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  3462  0308  3008               	movlw	8
  3463  0309  0279               	subwf	_eusart2RxHead,w
  3464  030A  1803               	btfsc	3,0
  3465                           
  3466                           ;eusart2.c: 172: eusart2RxHead = 0;
  3467  030B  01F9               	clrf	_eusart2RxHead
  3468                           
  3469                           ;eusart2.c: 173: }
  3470                           ;eusart2.c: 174: eusart2RxCount++;
  3471  030C  3001               	movlw	1
  3472  030D  00F0               	movwf	??_EUSART2_Receive_ISR
  3473  030E  0870               	movf	??_EUSART2_Receive_ISR,w
  3474  030F  0020               	movlb	0	; select bank0
  3475  0310  07C6               	addwf	_eusart2RxCount,f	;volatile
  3476  0311  0008               	return
  3477  0312                     __end_of_EUSART2_Receive_ISR:	
  3478                           
  3479                           	psect	text14
  3480  02DA                     __ptext14:	
  3481 ;; *************** function _EUSART1_Transmit_ISR *****************
  3482 ;; Defined at:
  3483 ;;		line 147 in file "mcc_generated_files/eusart1.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;		None               void
  3490 ;; Registers used:
  3491 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_INTERRUPT_InterruptManager
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _EUSART1_Transmit_ISR
  3512  02DA                     _EUSART1_Transmit_ISR:	
  3513                           
  3514                           ;eusart1.c: 150: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3518  02DA  3008               	movlw	8
  3519  02DB  0020               	movlb	0	; select bank0
  3520  02DC  024E               	subwf	_eusart1TxBufferRemaining,w	;volatile
  3521  02DD  1803               	skipnc
  3522  02DE  2AF4               	goto	i1l120
  3523                           
  3524                           ;eusart1.c: 151: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  3525  02DF  0845               	movf	_eusart1TxTail,w
  3526  02E0  3E28               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  3527  02E1  0086               	movwf	6
  3528  02E2  0187               	clrf	7
  3529  02E3  0801               	movf	1,w
  3530  02E4  0023               	movlb	3	; select bank3
  3531  02E5  009A               	movwf	26	;volatile
  3532  02E6  3001               	movlw	1
  3533  02E7  00F0               	movwf	??_EUSART1_Transmit_ISR
  3534  02E8  0870               	movf	??_EUSART1_Transmit_ISR,w
  3535  02E9  0020               	movlb	0	; select bank0
  3536  02EA  07C5               	addwf	_eusart1TxTail,f
  3537                           
  3538                           ;eusart1.c: 152: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  3539  02EB  3008               	movlw	8
  3540  02EC  0245               	subwf	_eusart1TxTail,w
  3541  02ED  1803               	btfsc	3,0
  3542                           
  3543                           ;eusart1.c: 153: eusart1TxTail = 0;
  3544  02EE  01C5               	clrf	_eusart1TxTail
  3545                           
  3546                           ;eusart1.c: 154: }
  3547                           ;eusart1.c: 155: eusart1TxBufferRemaining++;
  3548  02EF  3001               	movlw	1
  3549  02F0  00F0               	movwf	??_EUSART1_Transmit_ISR
  3550  02F1  0870               	movf	??_EUSART1_Transmit_ISR,w
  3551  02F2  07CE               	addwf	_eusart1TxBufferRemaining,f	;volatile
  3552                           
  3553                           ;eusart1.c: 156: } else {
  3554  02F3  0008               	return
  3555  02F4                     i1l120:	
  3556                           
  3557                           ;eusart1.c: 157: PIE1bits.TX1IE = 0;
  3558  02F4  0021               	movlb	1	; select bank1
  3559  02F5  1211               	bcf	17,4	;volatile
  3560  02F6  0008               	return
  3561  02F7                     __end_of_EUSART1_Transmit_ISR:	
  3562                           
  3563                           	psect	text15
  3564  0312                     __ptext15:	
  3565 ;; *************** function _EUSART1_Receive_ISR *****************
  3566 ;; Defined at:
  3567 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;		None               void
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_INTERRUPT_InterruptManager
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _EUSART1_Receive_ISR
  3596  0312                     _EUSART1_Receive_ISR:	
  3597                           
  3598                           ;eusart1.c: 162: if (1 == RC1STAbits.OERR) {
  3599                           
  3600                           ;incstack = 0
  3601                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3602  0312  0023               	movlb	3	; select bank3
  3603  0313  1C9D               	btfss	29,1	;volatile
  3604  0314  2B17               	goto	i1l1455
  3605                           
  3606                           ;eusart1.c: 165: RC1STAbits.CREN = 0;
  3607  0315  121D               	bcf	29,4	;volatile
  3608                           
  3609                           ;eusart1.c: 166: RC1STAbits.CREN = 1;
  3610  0316  161D               	bsf	29,4	;volatile
  3611  0317                     i1l1455:	
  3612                           
  3613                           ;eusart1.c: 167: }
  3614                           ;eusart1.c: 170: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  3615  0317  0819               	movf	25,w	;volatile
  3616  0318  00F0               	movwf	??_EUSART1_Receive_ISR
  3617  0319  0020               	movlb	0	; select bank0
  3618  031A  0842               	movf	_eusart1RxHead,w
  3619  031B  3E20               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  3620  031C  0086               	movwf	6
  3621  031D  0187               	clrf	7
  3622  031E  0870               	movf	??_EUSART1_Receive_ISR,w
  3623  031F  0081               	movwf	1
  3624  0320  3001               	movlw	1
  3625  0321  00F0               	movwf	??_EUSART1_Receive_ISR
  3626  0322  0870               	movf	??_EUSART1_Receive_ISR,w
  3627  0323  07C2               	addwf	_eusart1RxHead,f
  3628                           
  3629                           ;eusart1.c: 171: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  3630  0324  3008               	movlw	8
  3631  0325  0242               	subwf	_eusart1RxHead,w
  3632  0326  1803               	btfsc	3,0
  3633                           
  3634                           ;eusart1.c: 172: eusart1RxHead = 0;
  3635  0327  01C2               	clrf	_eusart1RxHead
  3636                           
  3637                           ;eusart1.c: 173: }
  3638                           ;eusart1.c: 174: eusart1RxCount++;
  3639  0328  3001               	movlw	1
  3640  0329  00F0               	movwf	??_EUSART1_Receive_ISR
  3641  032A  0870               	movf	??_EUSART1_Receive_ISR,w
  3642  032B  07C1               	addwf	_eusart1RxCount,f	;volatile
  3643  032C  0008               	return
  3644  032D                     __end_of_EUSART1_Receive_ISR:	
  3645  007E                     btemp	set	126	;btemp
  3646  007E                     int$flags	set	126
  3647  007E                     wtemp	set	126
  3648  007E                     wtemp0	set	126
  3649  0080                     wtemp1	set	128
  3650  0082                     wtemp2	set	130
  3651  0084                     wtemp3	set	132
  3652  0086                     wtemp4	set	134
  3653  0088                     wtemp5	set	136
  3654  007F                     wtemp6	set	127
  3655  007E                     ttemp	set	126
  3656  007E                     ttemp0	set	126
  3657  0081                     ttemp1	set	129
  3658  0084                     ttemp2	set	132
  3659  0087                     ttemp3	set	135
  3660  007F                     ttemp4	set	127
  3661  007E                     ltemp	set	126
  3662  007E                     ltemp0	set	126
  3663  0082                     ltemp1	set	130
  3664  0086                     ltemp2	set	134
  3665  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         44
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      6      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_strobe_all
    _strobe_all->_big_switch_rows
    _big_switch_rows->_big_switch_columns
    _big_switch_columns->_my_delay
    _SYSTEM_Initialize->_EUSART1_Initialize
    _SYSTEM_Initialize->_EUSART2_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_strobe_all

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     528
                                              1 BANK0      5     5      0
                  _SYSTEM_Initialize
                         _strobe_all
 ---------------------------------------------------------------------------------
 (1) _strobe_all                                           2     2      0     268
                                              7 COMMON     1     1      0
                                              0 BANK0      1     1      0
                    _big_switch_rows
 ---------------------------------------------------------------------------------
 (2) _big_switch_rows                                      1     1      0     222
                                              6 COMMON     1     1      0
                 _big_switch_columns
 ---------------------------------------------------------------------------------
 (3) _big_switch_columns                                   1     1      0      46
                                              5 COMMON     1     1      0
                           _my_delay
 ---------------------------------------------------------------------------------
 (4) _my_delay                                             3     3      0      46
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _strobe_all
     _big_switch_rows
       _big_switch_columns
         _my_delay

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 17 14:41:47 2015

           _eusart1TxBufferRemaining 004E                          __CFG_CP$OFF 0000  
                       __CFG_CPD$OFF 0000                    ??_big_switch_rows 0076  
                       __CFG_BORV$LO 0000                         __CFG_IESO$ON 0000  
                       __CFG_LVP$OFF 0000                                 l1831 02AB  
                               l1823 0293                                 l1833 02B0  
                               l1825 0299                                 l1595 038C  
                               l1835 02B5                                 l1827 029F  
                               l1829 02A5                                 l1837 02BA  
                               l1871 0217                                 l1849 0367  
                               l1865 0212                                 l1859 01FE  
                               l1877 024F              _current_column_position 0040  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _LATF 038C  
                               _LATG 038D                                 i1l56 02D7  
                               _WPUB 020D                                 _WPUG 048D  
              ??_EUSART2_Receive_ISR 0070                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 01F5  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 003C  
                               ttemp 007E                                 wtemp 007E  
       __end_of_EUSART2_Transmit_ISR 02DA                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000       __size_of_OSCILLATOR_Initialize 0006  
      __end_of_OSCILLATOR_Initialize 03A2                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _LATB1 0869  
                              _LATB2 086A                                _LATC1 0871  
                              _LATB3 086B                                _LATD0 0878  
                              _LATB4 086C                                _LATD1 0879  
                              _LATB5 086D                                _LATE0 0880  
                              _LATD2 087A                                _LATE1 0881  
                              _LATD3 087B                                _LATB7 086F  
                              _LATF0 1C60                                _LATE2 0882  
                              _LATD4 087C                                _LATF1 1C61  
                              _LATE3 0883                                _LATD5 087D  
                              _LATF2 1C62                                _LATE4 0884  
                              _LATD6 087E                                _LATF3 1C63  
                              _LATE5 0885                                _LATD7 087F  
                              _LATF4 1C64                                _LATE6 0886  
                              _LATF5 1C65                                _LATE7 0887  
                              _LATF6 1C66                                _LATF7 1C67  
                              i1l120 02F4                                i1l210 001B  
                              i1l212 0025                                i1l214 002F  
                              i1l208 0011                                i1l218 0037  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISD 008F  
                              _TRISE 0090                                _TRISF 030C  
                              _TRISG 030D                 _EUSART1_Transmit_ISR 02DA  
            __end_of_PIN_MANAGER_IOC 039C                                main@x 004D  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      __initialization 003E  
         __end_of_EUSART1_Initialize 0361                         __end_of_main 0253  
                 _big_switch_columns 005B          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 0049                  ?_big_switch_columns 0070  
              ?_EUSART1_Transmit_ISR 0070           __end_of_EUSART2_Initialize 0347  
           _eusart2TxBufferRemaining 004F                               _APFCON 011D  
                             _ANSELA 018C                               _ANSELE 0190  
                             _ANSELF 040C                               _ANSELG 040D  
                             _IOCBF0 1CB0                               _IOCBN0 1CA8  
                             _RC1REG 0199                               _RC2REG 0491  
                             _RC1STA 019D                               _RC2STA 0495  
                             i1l1429 02FC                               i1l1455 0317  
                             _OSCCON 0099                               _TX1REG 019A  
                             _TX2REG 0492                               _TX1STA 019E  
                             _TX2STA 0496                 ??_big_switch_columns 0075  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                   __end_of_my_delay 0395                 _EUSART2_Transmit_ISR 02BD  
                   ?_PIN_MANAGER_IOC 0070                      _eusart1RxBuffer 0020  
                    _eusart2RxBuffer 0030                      _eusart1TxBuffer 0028  
                  _SYSTEM_Initialize 037E                      _eusart2TxBuffer 0038  
            __end_of__initialization 0057                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                      _big_switch_rows 028C  
                ??_SYSTEM_Initialize 0073               ??_EUSART1_Transmit_ISR 0070  
                     _OPTION_REGbits 0095                ?_EUSART2_Transmit_ISR 0070  
        __end_of_EUSART1_Receive_ISR 032D            __end_of_SYSTEM_Initialize 038A  
                      _eusart1RxHead 0042                        _eusart1TxHead 0044  
                      _eusart2RxHead 0079                        _eusart1RxTail 0043  
                      _eusart2TxHead 007A                           __pbssBANK0 0020  
                      _eusart2RxTail 0047                        _eusart1TxTail 0045  
                      _eusart2TxTail 007B                      __CFG_VCAPEN$OFF 0000  
                         _delay_time 2330                           __pmaintext 01F5  
                         __pintentry 0004                              _SP1BRGH 019C  
                            _SP1BRGL 019B                              _SP2BRGH 0494  
                            _SP2BRGL 0493          __end_of_EUSART2_Receive_ISR 0312  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
            __end_of_big_switch_rows 02BD                            ?_my_delay 0070  
                        my_delay@dly 0073                              __ptext1 0361  
                            __ptext2 028C                              __ptext3 005B  
                            __ptext4 038A                              __ptext5 037E  
                            __ptext6 0253                              __ptext7 039C  
                            __ptext8 032D                              __ptext9 0347  
              _OSCILLATOR_Initialize 039C               ??_EUSART2_Transmit_ISR 0070  
                 _EUSART1_Initialize 0347             ??_PIN_MANAGER_Initialize 0072  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0373  
               end_of_initialization 0057                  ?_EUSART1_Initialize 0070  
                         ??_my_delay 0072                   _EUSART2_Initialize 032D  
               ??_EUSART1_Initialize 0072                  ?_EUSART2_Initialize 0070  
                   __CFG_FOSC$INTOSC 0000                 ??_EUSART2_Initialize 0072  
                   ?_big_switch_rows 0070          __size_of_big_switch_columns 019A  
                         _strobe_all 0361               ?_OSCILLATOR_Initialize 0070  
                start_initialization 003E      __size_of_PIN_MANAGER_Initialize 0039  
           __size_of_PIN_MANAGER_IOC 0007                       _eusart1RxCount 0041  
                     _eusart2RxCount 0046                          __pbssBIGRAM 2330  
                        __pbssCOMMON 0078                            ___latbits 0003  
      __size_of_EUSART1_Transmit_ISR 001D                        __pcstackBANK0 0048  
       __size_of_EUSART1_Receive_ISR 001B                            __pnvBANK0 004E  
             _PIN_MANAGER_Initialize 0253                            _delay_ptr 0078  
                        ?_strobe_all 0070                    __size_of_my_delay 000B  
       ??_INTERRUPT_InterruptManager 0071                             _BAUD1CON 019F  
                           _BAUD2CON 0497                          strobe_all@x 0048  
       __size_of_EUSART2_Receive_ISR 001B                            clear_ram0 0372  
                           _PIE1bits 0091                             _PIE4bits 0094  
__size_of_INTERRUPT_InterruptManager 0038                             _PIR1bits 0011  
                           _PIR4bits 0014                    ??_PIN_MANAGER_IOC 0070  
      __size_of_EUSART2_Transmit_ISR 001D                  __size_of_strobe_all 0011  
            ??_OSCILLATOR_Initialize 0072          __size_of_EUSART1_Initialize 001A  
                           __ptext11 0395                             __ptext12 02BD  
                           __ptext13 02F7                             __ptext14 02DA  
                           __ptext15 0312          __size_of_EUSART2_Initialize 001A  
                          my_delay@x 0074           __end_of_big_switch_columns 01F5  
                      __size_of_main 005E                             _my_delay 038A  
                         _RC1STAbits 019D                           _RC2STAbits 0495  
                           int$flags 007E             __size_of_big_switch_rows 0031  
 __end_of_INTERRUPT_InterruptManager 003C           _INTERRUPT_InterruptManager 0004  
                _EUSART1_Receive_ISR 0312                           _INTCONbits 000B  
                           intlevel1 0000                 ?_EUSART1_Receive_ISR 0070  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
       __end_of_EUSART1_Transmit_ISR 02F7                         ??_strobe_all 0077  
                _EUSART2_Receive_ISR 02F7                   big_switch_rows@pos 0076  
                 __end_of_strobe_all 0372                ??_EUSART1_Receive_ISR 0070  
     __end_of_PIN_MANAGER_Initialize 028C                 ?_EUSART2_Receive_ISR 0070  
                    _PIN_MANAGER_IOC 0395  
